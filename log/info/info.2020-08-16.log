2020-08-16 15:00:33 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 14476 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-08-16 15:00:33 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-08-16 15:00:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-16 15:00:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$64f2fe16] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-16 15:00:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-16 15:00:36 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-08-16 15:00:37 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-08-16 15:00:37 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-08-16 15:00:37 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-08-16 15:00:37 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-08-16 15:00:37 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-08-16 15:00:37 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 3466 ms
2020-08-16 15:00:37 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-08-16 15:00:37 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-08-16 15:00:38 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-08-16 15:00:38 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 1 个数据源
2020-08-16 15:00:38 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-08-16 15:00:38 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-08-16 15:00:39 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-08-16 15:00:39 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-08-16 15:00:39 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-08-16 15:00:39 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-08-16 15:00:39 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-08-16 15:00:39 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-08-16 15:00:39 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-08-16 15:00:39 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 7.669 seconds (JVM running for 11.31)
2020-08-16 15:01:34 INFO  http-nio-8888-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-08-16 15:01:34 INFO  http-nio-8888-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-08-16 15:01:34 INFO  http-nio-8888-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 8 ms
2020-08-16 15:01:40 INFO  http-nio-8888-exec-8 p6spy 2020-08-16 15:01:40 | 耗时 3 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC;
2020-08-16 20:03:44 INFO  http-nio-8888-exec-5 p6spy 2020-08-16 20:03:44 | 耗时 1 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC;
2020-08-16 20:03:53 INFO  http-nio-8888-exec-10 p6spy 2020-08-16 20:03:53 | 耗时 0 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC;
2020-08-16 20:06:21 INFO  http-nio-8888-exec-8 p6spy 2020-08-16 20:06:21 | 耗时 1 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC;
2020-08-16 20:08:07 INFO  http-nio-8888-exec-5 p6spy 2020-08-16 20:08:07 | 耗时 1 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC;
2020-08-16 20:22:21 INFO  http-nio-8888-exec-1 p6spy 2020-08-16 20:22:21 | 耗时 0 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC;
2020-08-16 20:23:00 INFO  http-nio-8888-exec-7 p6spy 2020-08-16 20:23:00 | 耗时 1 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC;
2020-08-16 20:24:09 INFO  http-nio-8888-exec-4 p6spy 2020-08-16 20:24:09 | 耗时 1 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC;
2020-08-16 20:28:32 INFO  http-nio-8888-exec-10 p6spy 2020-08-16 20:28:32 | 耗时 0 ms | SQL 语句：
select u.t_user_name from codeworld_user u where t_user_name = '111';
2020-08-16 20:28:38 INFO  http-nio-8888-exec-1 p6spy 2020-08-16 20:28:38 | 耗时 0 ms | SQL 语句：
select u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-08-16 20:28:40 INFO  http-nio-8888-exec-3 p6spy 2020-08-16 20:28:40 | 耗时 0 ms | SQL 语句：
select u.t_user_name from codeworld_user u where t_user_name = '11111';
2020-08-16 20:28:43 INFO  http-nio-8888-exec-5 p6spy 2020-08-16 20:28:43 | 耗时 0 ms | SQL 语句：
select u.t_user_name from codeworld_user u where t_user_name = '11111';
2020-08-16 20:28:43 INFO  http-nio-8888-exec-5 p6spy 2020-08-16 20:28:43 | 耗时 2 ms | SQL 语句：
insert into codeworld_user (t_user_id,t_user_name,t_user_email,t_user_phone,t_user_status,t_create_time,t_update_time) values ( 1975879, '11111', '1692454247@qq.com', '111', 0, '2020-08-16T20:28:43.199+0800', '2020-08-16T20:28:43.199+0800' );;
2020-08-16 20:28:43 INFO  http-nio-8888-exec-7 p6spy 2020-08-16 20:28:43 | 耗时 0 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC;
2020-08-16 20:29:23 INFO  http-nio-8888-exec-1 p6spy 2020-08-16 20:29:23 | 耗时 0 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC;
2020-08-16 20:29:28 INFO  http-nio-8888-exec-3 p6spy 2020-08-16 20:29:28 | 耗时 0 ms | SQL 语句：
select u.t_user_name from codeworld_user u where t_user_name = '11';
2020-08-16 20:29:31 INFO  http-nio-8888-exec-5 p6spy 2020-08-16 20:29:31 | 耗时 0 ms | SQL 语句：
select u.t_user_name from codeworld_user u where t_user_name = '1';
2020-08-16 20:29:42 INFO  http-nio-8888-exec-7 p6spy 2020-08-16 20:29:42 | 耗时 0 ms | SQL 语句：
select u.t_user_name from codeworld_user u where t_user_name = '1';
2020-08-16 20:29:42 INFO  http-nio-8888-exec-7 p6spy 2020-08-16 20:29:42 | 耗时 12 ms | SQL 语句：
insert into codeworld_user (t_user_id,t_user_name,t_user_email,t_user_phone,t_user_status,t_create_time,t_update_time) values ( 6453883, '1', '1692454247@qq.com', '1234', 0, '2020-08-16T20:29:42.691+0800', '2020-08-16T20:29:42.691+0800' );;
2020-08-16 20:29:42 INFO  http-nio-8888-exec-10 p6spy 2020-08-16 20:29:42 | 耗时 0 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC;
2020-08-16 20:31:03 INFO  http-nio-8888-exec-2 p6spy 2020-08-16 20:31:03 | 耗时 1 ms | SQL 语句：
delete from codeworld_user where t_user_id = 6453883;
2020-08-16 20:41:56 INFO  http-nio-8888-exec-1 p6spy 2020-08-16 20:41:56 | 耗时 0 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC;
2020-08-16 20:46:12 INFO  http-nio-8888-exec-8 p6spy 2020-08-16 20:46:12 | 耗时 0 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC;
2020-08-16 20:46:29 INFO  http-nio-8888-exec-4 p6spy 2020-08-16 20:46:29 | 耗时 1 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC;
2020-08-16 20:47:18 INFO  http-nio-8888-exec-9 p6spy 2020-08-16 20:47:18 | 耗时 0 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC;
2020-08-16 20:57:11 INFO  http-nio-8888-exec-9 p6spy 2020-08-16 20:57:11 | 耗时 0 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC;
2020-08-16 20:57:20 INFO  http-nio-8888-exec-2 p6spy 2020-08-16 20:57:20 | 耗时 12 ms | SQL 语句：
delete from codeworld_user where t_user_id = 1975879;
