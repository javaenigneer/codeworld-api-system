2020-10-16 08:40:18 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 13136 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-10-16 08:40:18 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-10-16 08:40:20 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-16 08:40:20 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 08:40:20 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 172ms. Found 0 Redis repository interfaces.
2020-10-16 08:40:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 08:40:21 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 08:40:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 08:40:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 08:40:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@12192604' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 08:40:22 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 08:40:22 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-10-16 08:40:22 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-10-16 08:40:22 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-10-16 08:40:22 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-10-16 08:40:22 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-10-16 08:40:22 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 3620 ms
2020-10-16 08:40:22 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-10-16 08:40:22 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-10-16 08:40:23 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-10-16 08:40:23 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-10-16 08:40:23 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-10-16 08:40:23 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-10-16 08:40:23 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-10-16 08:40:23 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-10-16 08:40:23 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-10-16 08:40:23 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-10-16 08:40:23 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-10-16 08:40:23 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-10-16 08:40:24 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-10-16 08:40:24 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-10-16 08:40:24 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51602808823949'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-10-16 08:40:24 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-10-16 08:40:24 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-10-16 08:40:24 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2f8f40cc
2020-10-16 08:40:24 INFO  main p6spy 2020-10-16 08:40:24 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-10-16 08:40:25 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-10-16 08:40:26 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3b28ab9b, org.springframework.security.web.context.SecurityContextPersistenceFilter@67167f8f, org.springframework.security.web.header.HeaderWriterFilter@5f233f9, org.springframework.web.filter.CorsFilter@16bbaab3, org.springframework.security.web.authentication.logout.LogoutFilter@4379fe2a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@733345f5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@567baa55, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@16c1345b, org.springframework.security.web.session.SessionManagementFilter@6c92a59d, org.springframework.security.web.access.ExceptionTranslationFilter@7f5a25e2, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4844e24b]
2020-10-16 08:40:26 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-10-16 08:40:26 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-10-16 08:40:27 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-10-16 08:40:27 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-10-16 08:40:27 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-10-16 08:40:27 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-10-16 08:40:27 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-10-16 08:40:27 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-10-16 08:40:27 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 9.637 seconds (JVM running for 14.197)
2020-10-16 08:40:28 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-10-16 08:40:28 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-10-16 08:40:28 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51602754821342"'s failed in-progress jobs.
2020-10-16 08:40:28 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602808823949 started.
2020-10-16 08:40:28 INFO  RMI TCP Connection(2)-192.168.137.1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-16 08:40:28 INFO  RMI TCP Connection(2)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-10-16 08:40:28 INFO  RMI TCP Connection(2)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 14 ms
2020-10-16 08:41:41 INFO  http-nio-8888-exec-2 org.apache.tomcat.util.http.parser.Cookie A cookie header was received [1579774133; __utma=111872281.831053985.1582861814.1582875770.1584267755.5; Idea-aafc89f7=a7b3efd7-3315-46db-8387-b3eb7ff7bbf7; Hm_lvt_d97abf6d61c21d773f97835defbdef4e=1594809530; Webstorm-5dc33a3f=3e27dac4-926d-43b5-b044-1c33978c0955] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-16 08:41:41 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 08:41:41 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 11:11:25 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 2980 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-10-16 11:11:25 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-10-16 11:11:27 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-16 11:11:27 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 11:11:27 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 284ms. Found 0 Redis repository interfaces.
2020-10-16 11:11:28 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 11:11:28 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 11:11:28 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 11:11:28 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 11:11:28 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@d3cce46' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 11:11:28 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 11:11:29 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-10-16 11:11:29 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-10-16 11:11:29 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-10-16 11:11:29 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-10-16 11:11:29 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-10-16 11:11:29 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4249 ms
2020-10-16 11:11:29 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-10-16 11:11:29 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-10-16 11:11:30 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-10-16 11:11:30 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-10-16 11:11:30 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-10-16 11:11:30 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-10-16 11:11:30 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-10-16 11:11:30 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-10-16 11:11:30 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-10-16 11:11:30 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-10-16 11:11:30 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-10-16 11:11:30 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-10-16 11:11:31 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-10-16 11:11:31 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-10-16 11:11:31 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51602817890970'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-10-16 11:11:31 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-10-16 11:11:31 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-10-16 11:11:31 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@446cc036
2020-10-16 11:11:31 INFO  main p6spy 2020-10-16 11:11:31 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-10-16 11:11:32 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-10-16 11:11:33 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@39c78cf9, org.springframework.security.web.context.SecurityContextPersistenceFilter@69c70b62, org.springframework.security.web.header.HeaderWriterFilter@a0d3cc7, org.springframework.security.web.authentication.logout.LogoutFilter@ab8b1ef, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5f4ebecd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@495fa126, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@673ade3d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@39993624, org.springframework.security.web.session.SessionManagementFilter@3bd69a51, org.springframework.security.web.access.ExceptionTranslationFilter@7d5b1446, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@17d90f81]
2020-10-16 11:11:33 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@33458d84, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@23338420, org.springframework.security.web.context.SecurityContextPersistenceFilter@5a0d25ba, org.springframework.security.web.header.HeaderWriterFilter@23595dd9, org.springframework.security.web.authentication.logout.LogoutFilter@1858f93e, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@10d1f6da, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@72e89ce2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1bb6b0f3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@61231034, org.springframework.security.web.session.SessionManagementFilter@28f307ca, org.springframework.security.web.access.ExceptionTranslationFilter@1ab64f66, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@15c0c274]
2020-10-16 11:11:33 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@479885d, org.springframework.security.web.context.SecurityContextPersistenceFilter@3327337a, org.springframework.security.web.header.HeaderWriterFilter@21d131e7, org.springframework.web.filter.CorsFilter@49e62b17, org.springframework.security.web.authentication.logout.LogoutFilter@5aaab2b0, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@29d534ce, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1a3761a, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@47609e3d, org.springframework.security.web.session.SessionManagementFilter@5c51a7eb, org.springframework.security.web.access.ExceptionTranslationFilter@1761b129, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5de25642]
2020-10-16 11:11:33 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-10-16 11:11:33 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-10-16 11:11:34 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-10-16 11:11:34 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-10-16 11:11:34 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-10-16 11:11:34 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-10-16 11:11:34 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-10-16 11:11:34 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-10-16 11:11:34 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 10.499 seconds (JVM running for 17.256)
2020-10-16 11:11:35 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-10-16 11:11:35 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-10-16 11:11:35 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51602808823949"'s failed in-progress jobs.
2020-10-16 11:11:35 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602817890970 started.
2020-10-16 11:11:35 INFO  RMI TCP Connection(3)-192.168.137.1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-16 11:11:35 INFO  RMI TCP Connection(3)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-10-16 11:11:35 INFO  RMI TCP Connection(3)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 14 ms
2020-10-16 13:54:30 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 2604 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-10-16 13:54:30 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-10-16 13:54:33 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-16 13:54:33 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 13:54:33 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 282ms. Found 0 Redis repository interfaces.
2020-10-16 13:54:34 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 13:54:34 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 13:54:35 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 13:54:35 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 13:54:35 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@39449465' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 13:54:35 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 13:54:35 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-10-16 13:54:35 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-10-16 13:54:35 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-10-16 13:54:35 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-10-16 13:54:35 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-10-16 13:54:35 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 5045 ms
2020-10-16 13:54:36 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-10-16 13:54:36 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-10-16 13:54:36 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-10-16 13:54:36 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-10-16 13:54:36 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-10-16 13:54:36 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-10-16 13:54:36 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-10-16 13:54:36 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-10-16 13:54:36 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-10-16 13:54:37 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-10-16 13:54:37 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-10-16 13:54:37 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-10-16 13:54:37 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-10-16 13:54:37 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-10-16 13:54:37 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51602827677173'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-10-16 13:54:37 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-10-16 13:54:37 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-10-16 13:54:37 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@24ac6fef
2020-10-16 13:54:37 INFO  main p6spy 2020-10-16 13:54:37 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-10-16 13:54:38 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-10-16 13:54:39 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@45f4c27c, org.springframework.security.web.context.SecurityContextPersistenceFilter@6dd7af2f, org.springframework.security.web.header.HeaderWriterFilter@a3e458, org.springframework.security.web.authentication.logout.LogoutFilter@24381e4a, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@870413c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6c75c5e8, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@58e0d1ac, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@64710a6, org.springframework.security.web.session.SessionManagementFilter@c6653e, org.springframework.security.web.access.ExceptionTranslationFilter@2e2546bf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@11e75942]
2020-10-16 13:54:39 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@31dbca5d, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@40c92dfa, org.springframework.security.web.context.SecurityContextPersistenceFilter@2446597e, org.springframework.security.web.header.HeaderWriterFilter@7a91027c, org.springframework.security.web.authentication.logout.LogoutFilter@69cc3370, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@380e470a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@8dd0c70, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@7aad7df5, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@16b713dd, org.springframework.security.web.session.SessionManagementFilter@27d44578, org.springframework.security.web.access.ExceptionTranslationFilter@f047670, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6768dc74]
2020-10-16 13:54:39 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@21ebf9be, org.springframework.security.web.context.SecurityContextPersistenceFilter@1f591b2e, org.springframework.security.web.header.HeaderWriterFilter@35d4fecf, org.springframework.web.filter.CorsFilter@a9e8da1, org.springframework.security.web.authentication.logout.LogoutFilter@33de9d85, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1e205025, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@c10f7a8, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7d50b4c4, org.springframework.security.web.session.SessionManagementFilter@22195d06, org.springframework.security.web.access.ExceptionTranslationFilter@54faa040, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6f53f5a4]
2020-10-16 13:54:39 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-10-16 13:54:39 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-10-16 13:54:39 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-10-16 13:54:39 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-10-16 13:54:39 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-10-16 13:54:40 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-10-16 13:54:40 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-10-16 13:54:40 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-10-16 13:54:40 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 11.558 seconds (JVM running for 17.178)
2020-10-16 13:54:41 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-10-16 13:54:41 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-10-16 13:54:41 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51602817890970"'s failed in-progress jobs.
2020-10-16 13:54:41 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602827677173 started.
2020-10-16 13:54:41 INFO  RMI TCP Connection(3)-192.168.137.1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-16 13:54:41 INFO  RMI TCP Connection(3)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-10-16 13:54:41 INFO  RMI TCP Connection(3)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 16 ms
2020-10-16 13:58:31 INFO  http-nio-8888-exec-8 org.apache.tomcat.util.http.parser.Cookie A cookie header was received [1579774133; __utma=111872281.831053985.1582861814.1582875770.1584267755.5; Idea-aafc89f7=a7b3efd7-3315-46db-8387-b3eb7ff7bbf7; Hm_lvt_d97abf6d61c21d773f97835defbdef4e=1594809530; Webstorm-5dc33a3f=3e27dac4-926d-43b5-b044-1c33978c0955] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-16 13:59:28 INFO  http-nio-8888-exec-10 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 13:59:29 INFO  http-nio-8888-exec-10 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 189ms. Found 0 Redis repository interfaces.
2020-10-16 14:33:10 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 24084 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-10-16 14:33:10 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-10-16 14:33:13 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-16 14:33:13 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 14:33:13 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 316ms. Found 0 Redis repository interfaces.
2020-10-16 14:33:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:33:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:33:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:33:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:33:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@340fc1aa' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:33:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:33:17 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-10-16 14:33:17 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-10-16 14:33:17 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-10-16 14:33:17 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-10-16 14:33:17 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-10-16 14:33:17 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 6332 ms
2020-10-16 14:33:17 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-10-16 14:33:17 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-10-16 14:33:17 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-10-16 14:33:17 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-10-16 14:33:17 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-10-16 14:33:17 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-10-16 14:33:17 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-10-16 14:33:17 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-10-16 14:33:17 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-10-16 14:33:18 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-10-16 14:33:18 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-10-16 14:33:18 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-10-16 14:33:18 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-10-16 14:33:18 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-10-16 14:33:18 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51602829998888'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-10-16 14:33:18 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-10-16 14:33:18 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-10-16 14:33:18 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7bbd0006
2020-10-16 14:33:19 INFO  main p6spy 2020-10-16 14:33:19 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-10-16 14:33:20 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-10-16 14:33:21 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6413fef3, org.springframework.security.web.context.SecurityContextPersistenceFilter@445dc8dc, org.springframework.security.web.header.HeaderWriterFilter@302b6367, org.springframework.security.web.authentication.logout.LogoutFilter@75e00044, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@2c427287, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@28d61fc, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@156290d9, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@763ff91, org.springframework.security.web.session.SessionManagementFilter@10ab3bc0, org.springframework.security.web.access.ExceptionTranslationFilter@46ce6678, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@74d242b5]
2020-10-16 14:33:21 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@5d7a274e, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@63fa7643, org.springframework.security.web.context.SecurityContextPersistenceFilter@336c4e3a, org.springframework.security.web.header.HeaderWriterFilter@4c9bf90b, org.springframework.security.web.authentication.logout.LogoutFilter@33bd86fe, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@5816fd13, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@205c0b1a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@339cedbb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5622e162, org.springframework.security.web.session.SessionManagementFilter@13485e82, org.springframework.security.web.access.ExceptionTranslationFilter@27e688ad, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@64a552]
2020-10-16 14:33:21 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@664c0019, org.springframework.security.web.context.SecurityContextPersistenceFilter@6870f52a, org.springframework.security.web.header.HeaderWriterFilter@651a3e01, org.springframework.web.filter.CorsFilter@7b423f90, org.springframework.security.web.authentication.logout.LogoutFilter@40679991, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3ed3f72a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@a0d3cc7, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@495fa126, org.springframework.security.web.session.SessionManagementFilter@7d5b1446, org.springframework.security.web.access.ExceptionTranslationFilter@40a2cae4, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@69c70b62]
2020-10-16 14:33:21 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-10-16 14:33:21 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-10-16 14:33:22 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-10-16 14:33:22 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-10-16 14:33:22 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-10-16 14:33:22 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-10-16 14:33:22 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-10-16 14:33:23 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-10-16 14:33:23 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 14.139 seconds (JVM running for 19.659)
2020-10-16 14:33:24 INFO  RMI TCP Connection(5)-192.168.137.1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-16 14:33:24 INFO  RMI TCP Connection(5)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-10-16 14:33:24 INFO  RMI TCP Connection(5)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 20 ms
2020-10-16 14:33:24 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-10-16 14:33:24 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-10-16 14:33:24 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51602827677173"'s failed in-progress jobs.
2020-10-16 14:33:24 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602829998888 started.
2020-10-16 14:38:54 INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602829998888 paused.
2020-10-16 14:38:55 INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-16 14:38:55 INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-10-16 14:38:55 INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602829998888 shutting down.
2020-10-16 14:38:55 INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602829998888 paused.
2020-10-16 14:38:55 INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602829998888 shutdown complete.
2020-10-16 14:38:55 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource closing dynamicDatasource  ing....
2020-10-16 14:38:55 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-10-16 14:38:55 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-10-16 14:38:55 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-10-16 14:38:55 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-10-16 14:39:15 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 11320 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-10-16 14:39:15 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-10-16 14:39:17 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-16 14:39:17 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 14:39:18 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 274ms. Found 0 Redis repository interfaces.
2020-10-16 14:39:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:39:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:39:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:39:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:39:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@3c8fe8ad' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:39:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:39:20 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-10-16 14:39:20 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-10-16 14:39:20 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-10-16 14:39:20 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-10-16 14:39:20 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-10-16 14:39:20 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4885 ms
2020-10-16 14:39:20 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-10-16 14:39:20 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-10-16 14:39:21 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-10-16 14:39:21 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-10-16 14:39:21 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-10-16 14:39:21 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-10-16 14:39:21 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-10-16 14:39:21 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-10-16 14:39:21 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-10-16 14:39:22 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-10-16 14:39:22 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-10-16 14:39:22 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-10-16 14:39:22 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-10-16 14:39:22 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-10-16 14:39:22 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51602830362125'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-10-16 14:39:22 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-10-16 14:39:22 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-10-16 14:39:22 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5e25085
2020-10-16 14:39:22 INFO  main p6spy 2020-10-16 14:39:22 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-10-16 14:39:23 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-10-16 14:39:24 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1cd7bc66, org.springframework.security.web.context.SecurityContextPersistenceFilter@6b17aa0b, org.springframework.security.web.header.HeaderWriterFilter@136a2e3b, org.springframework.security.web.authentication.logout.LogoutFilter@47b4fcd5, org.springframework.security.oauth2.provider.client.ClientCredentialsTokenEndpointFilter@64236be, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@24d998ba, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3796ca50, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@37e99c0f, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@34b56a5a, org.springframework.security.web.session.SessionManagementFilter@e7529ac, org.springframework.security.web.access.ExceptionTranslationFilter@1f02ce3, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@15c48119]
2020-10-16 14:39:24 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@2d1dbf4f, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4f94b2a8, org.springframework.security.web.context.SecurityContextPersistenceFilter@3aee72d8, org.springframework.security.web.header.HeaderWriterFilter@7fd8f21, org.springframework.security.web.authentication.logout.LogoutFilter@7262532a, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@456c6754, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@38d1c7d2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@533ed36e, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@2f26634a, org.springframework.security.web.session.SessionManagementFilter@5a564a61, org.springframework.security.web.access.ExceptionTranslationFilter@3cc7cf58, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6d985720]
2020-10-16 14:39:24 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2b01bb54, org.springframework.security.web.context.SecurityContextPersistenceFilter@4ec25389, org.springframework.security.web.header.HeaderWriterFilter@537360e3, org.springframework.web.filter.CorsFilter@666b91db, org.springframework.security.web.authentication.logout.LogoutFilter@375dc95c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@7cff1930, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@34c31a34, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@e822394, org.springframework.security.web.session.SessionManagementFilter@70f5f6c7, org.springframework.security.web.access.ExceptionTranslationFilter@432e242d, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@358f85b1]
2020-10-16 14:39:24 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-10-16 14:39:24 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-10-16 14:39:25 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-10-16 14:39:25 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-10-16 14:39:25 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-10-16 14:39:25 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-10-16 14:39:25 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-10-16 14:39:26 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-10-16 14:39:26 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 12.16 seconds (JVM running for 19.782)
2020-10-16 14:39:27 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-10-16 14:39:27 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-10-16 14:39:27 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51602829998888"'s failed in-progress jobs.
2020-10-16 14:39:27 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602830362125 started.
2020-10-16 14:39:27 INFO  RMI TCP Connection(3)-192.168.137.1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-16 14:39:27 INFO  RMI TCP Connection(3)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-10-16 14:39:27 INFO  RMI TCP Connection(3)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 19 ms
2020-10-16 14:42:39 INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602830362125 paused.
2020-10-16 14:42:40 INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'applicationTaskExecutor'
2020-10-16 14:42:40 INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-10-16 14:42:40 INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602830362125 shutting down.
2020-10-16 14:42:40 INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602830362125 paused.
2020-10-16 14:42:40 INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602830362125 shutdown complete.
2020-10-16 14:42:40 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource closing dynamicDatasource  ing....
2020-10-16 14:42:40 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-10-16 14:42:40 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-10-16 14:42:40 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-10-16 14:42:40 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-10-16 14:42:54 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 23684 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-10-16 14:42:54 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-10-16 14:42:56 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-16 14:42:56 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 14:42:57 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 308ms. Found 0 Redis repository interfaces.
2020-10-16 14:42:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:42:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:42:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:42:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:42:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4ee8051c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:42:58 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:42:58 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-10-16 14:42:59 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-10-16 14:42:59 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-10-16 14:42:59 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-10-16 14:42:59 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-10-16 14:42:59 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4887 ms
2020-10-16 14:42:59 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-10-16 14:42:59 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-10-16 14:42:59 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-10-16 14:42:59 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-10-16 14:42:59 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-10-16 14:42:59 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-10-16 14:42:59 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-10-16 14:42:59 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-10-16 14:42:59 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-10-16 14:43:00 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-10-16 14:43:00 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-10-16 14:43:00 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-10-16 14:43:00 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-10-16 14:43:00 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-10-16 14:43:00 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51602830580861'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-10-16 14:43:00 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-10-16 14:43:00 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-10-16 14:43:00 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@12270a01
2020-10-16 14:43:01 INFO  main p6spy 2020-10-16 14:43:01 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-10-16 14:43:02 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-10-16 14:43:03 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: OrRequestMatcher [requestMatchers=[Ant [pattern='/oauth/token'], Ant [pattern='/oauth/token_key'], Ant [pattern='/oauth/check_token']]], [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@14f254f, org.springframework.security.web.context.SecurityContextPersistenceFilter@715d82a0, org.springframework.security.web.header.HeaderWriterFilter@4607cbe2, org.springframework.security.web.authentication.logout.LogoutFilter@3a5c6009, org.springframework.security.web.authentication.www.BasicAuthenticationFilter@5cfde2a4, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@31beb0d0, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@36e9794c, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@363ee411, org.springframework.security.web.session.SessionManagementFilter@9da386c, org.springframework.security.web.access.ExceptionTranslationFilter@6a9a6a0c, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@6f627a1a]
2020-10-16 14:43:03 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: org.springframework.security.oauth2.config.annotation.web.configuration.ResourceServerConfiguration$NotOAuthRequestMatcher@4b6fc231, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6b7ebac1, org.springframework.security.web.context.SecurityContextPersistenceFilter@63df2eb8, org.springframework.security.web.header.HeaderWriterFilter@a3e458, org.springframework.security.web.authentication.logout.LogoutFilter@72321701, org.springframework.security.oauth2.provider.authentication.OAuth2AuthenticationProcessingFilter@24381e4a, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@49c72fb7, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@565983f3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@39dee5fd, org.springframework.security.web.session.SessionManagementFilter@4b74a4d, org.springframework.security.web.access.ExceptionTranslationFilter@6908674b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1cf7c055]
2020-10-16 14:43:03 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@20724c21, org.springframework.security.web.context.SecurityContextPersistenceFilter@51c15508, org.springframework.security.web.header.HeaderWriterFilter@230dd372, org.springframework.web.filter.CorsFilter@720a1fd0, org.springframework.security.web.authentication.logout.LogoutFilter@dffcf1, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@164cad52, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5b977aaa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@c0cb9c2, org.springframework.security.web.session.SessionManagementFilter@663cc8c9, org.springframework.security.web.access.ExceptionTranslationFilter@88e85a, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@23a78d2e]
2020-10-16 14:43:03 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-10-16 14:43:03 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-10-16 14:43:04 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-10-16 14:43:04 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-10-16 14:43:04 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-10-16 14:43:04 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-10-16 14:43:04 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-10-16 14:43:05 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-10-16 14:43:05 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 12.084 seconds (JVM running for 19.086)
2020-10-16 14:43:05 INFO  RMI TCP Connection(1)-192.168.137.1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-16 14:43:05 INFO  RMI TCP Connection(1)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-10-16 14:43:05 INFO  RMI TCP Connection(1)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 18 ms
2020-10-16 14:43:06 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-10-16 14:43:06 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-10-16 14:43:06 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51602830362125"'s failed in-progress jobs.
2020-10-16 14:43:06 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602830580861 started.
2020-10-16 14:54:51 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 16500 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-10-16 14:54:51 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-10-16 14:54:54 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-16 14:54:54 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 14:54:54 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 254ms. Found 0 Redis repository interfaces.
2020-10-16 14:54:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:54:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:54:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:54:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:54:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@6075b369' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:54:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 14:54:56 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-10-16 14:54:56 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-10-16 14:54:56 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-10-16 14:54:56 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-10-16 14:54:56 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-10-16 14:54:56 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 5025 ms
2020-10-16 14:54:57 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-10-16 14:54:57 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-10-16 14:54:57 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-10-16 14:54:57 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-10-16 14:54:57 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-10-16 14:54:57 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-10-16 14:54:57 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-10-16 14:54:57 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-10-16 14:54:57 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-10-16 14:54:58 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-10-16 14:54:58 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-10-16 14:54:58 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-10-16 14:54:59 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-10-16 14:54:59 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-10-16 14:54:59 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51602831298805'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-10-16 14:54:59 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-10-16 14:54:59 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-10-16 14:54:59 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5f68eec6
2020-10-16 14:54:59 INFO  main p6spy 2020-10-16 14:54:59 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-10-16 14:55:00 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-10-16 14:55:01 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5b49b1df, org.springframework.security.web.context.SecurityContextPersistenceFilter@7878459f, org.springframework.security.web.header.HeaderWriterFilter@3d2ff73a, org.springframework.web.filter.CorsFilter@22b7ef2b, org.springframework.security.web.authentication.logout.LogoutFilter@5039c2cf, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5d24703e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5af1b221, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@689eab53, org.springframework.security.web.session.SessionManagementFilter@643a73fa, org.springframework.security.web.access.ExceptionTranslationFilter@2d568cff, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4c678a1f]
2020-10-16 14:55:01 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-10-16 14:55:01 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-10-16 14:55:01 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-10-16 14:55:01 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-10-16 14:55:01 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-10-16 14:55:02 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-10-16 14:55:02 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-10-16 14:55:02 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-10-16 14:55:02 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 12.094 seconds (JVM running for 18.605)
2020-10-16 14:55:03 INFO  RMI TCP Connection(2)-192.168.137.1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-16 14:55:03 INFO  RMI TCP Connection(2)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-10-16 14:55:03 INFO  RMI TCP Connection(2)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 15 ms
2020-10-16 14:55:03 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-10-16 14:55:03 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-10-16 14:55:03 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51602830580861"'s failed in-progress jobs.
2020-10-16 14:55:03 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602831298805 started.
2020-10-16 14:55:13 INFO  http-nio-8888-exec-2 org.apache.tomcat.util.http.parser.Cookie A cookie header was received [1579774133; __utma=111872281.831053985.1582861814.1582875770.1584267755.5; Idea-aafc89f7=a7b3efd7-3315-46db-8387-b3eb7ff7bbf7; Hm_lvt_d97abf6d61c21d773f97835defbdef4e=1594809530; Webstorm-5dc33a3f=3e27dac4-926d-43b5-b044-1c33978c0955] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-16 14:55:13 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 14:55:13 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 14:56:46 INFO  http-nio-8888-exec-7 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 14:56:46 INFO  http-nio-8888-exec-7 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 144ms. Found 0 Redis repository interfaces.
2020-10-16 14:56:47 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 14:56:47 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 14:57:16 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 14:57:16 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 14:58:14 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 14:58:14 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 14:58:14 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 14:58:14 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 14:58:14 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 14:58:14 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 14:58:14 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 14:58:14 | 耗时 1 ms | SQL 语句：
insert into codeworld_login_log ( t_login_log_id, t_login_log_name, t_login_log_time, t_login_log_location, t_login_log_ip, t_login_log_system, t_login_log_browser ) values ( 547511, '1111', '2020-10-16T14:58:14.828+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Windows 10', 'Chrome 78' );;
2020-10-16 14:58:14 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 14:58:14 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 966047, NULL, '用户登录', 309, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@b014d54] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@59255375', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T14:58:14.873+0800' );;
2020-10-16 14:58:14 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 14:58:14 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 14:58:15 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 14:58:15 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 14:58:15 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 14:58:15 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 14:58:15 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 14:58:15 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 345264, '1111', '获取用户信息', 146, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODc0Njk0LCJjcmVhdGVkIjoxNjAyODMxNDk0NzU2LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.Twdp-MP9KU7aPSL-D1_FeRXndIgQtvaEFZ9rxE64f0KDQfT1qGvyDbf7yEoCarpJ82R4cTVWnN6M8S0L6i_qxA) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6657f82a] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@8c97af4', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T14:58:15.065+0800' );;
2020-10-16 14:58:15 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 14:58:15 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_login_log;
2020-10-16 14:58:15 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 14:58:15 | 耗时 0 ms | SQL 语句：
select * from codeworld_login_log order by t_login_log_time DESC LIMIT 10 ;
2020-10-16 14:58:15 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 14:58:15 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 65141, '1111', '获取登录日志', 104, '/system-login-log/get-all-login-log', ' loginLogSearchVO: LoginLogSearchVO(loginLogName=null, startTime=null, endTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T14:58:15.369+0800' );;
2020-10-16 14:58:23 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 14:58:23 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_user;
2020-10-16 14:58:23 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 14:58:23 | 耗时 1 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC LIMIT 10 ;
2020-10-16 14:58:23 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 14:58:23 | 耗时 0 ms | SQL 语句：
select * from codeworld_dept;
2020-10-16 14:58:23 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 14:58:23 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 65974, '1111', '获取全部用户', 14, '/system-user/get-all-user', ' userSearchRequest: UserSearchRequest(page=1, limit=10, userName=null, userEmail=null, userPhone=null, userStatus=null, createTime=null, updateTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T14:58:23.757+0800' );;
2020-10-16 14:58:23 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 14:58:23 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 209811, '1111', '获取部门树', 64, '/system-dept/tree-dept', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T14:58:23.797+0800' );;
2020-10-16 14:58:44 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 14:58:44 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 699629, '1111', '退出登录', 3, '/system-user/user-login-out', ' userLoginOutRequest: UserLoginOutRequest(token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODc0Njk0LCJjcmVhdGVkIjoxNjAyODMxNDk0NzU2LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.Twdp-MP9KU7aPSL-D1_FeRXndIgQtvaEFZ9rxE64f0KDQfT1qGvyDbf7yEoCarpJ82R4cTVWnN6M8S0L6i_qxA)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T14:58:44.383+0800' );;
2020-10-16 15:07:33 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 15:07:33 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 15:07:33 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 15:07:33 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 15:07:33 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 15:07:33 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 15:07:33 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 15:07:33 | 耗时 10 ms | SQL 语句：
insert into codeworld_login_log ( t_login_log_id, t_login_log_name, t_login_log_time, t_login_log_location, t_login_log_ip, t_login_log_system, t_login_log_browser ) values ( 220116, '1111', '2020-10-16T15:07:33.860+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Windows 10', 'Chrome 78' );;
2020-10-16 15:07:33 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 15:07:33 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 4803, NULL, '用户登录', 210, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@57ff32d7] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@a5870ab', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T15:07:33.875+0800' );;
2020-10-16 15:07:33 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 15:07:33 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 15:07:33 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 15:07:33 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 15:07:33 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 15:07:33 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 15:07:33 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 15:07:33 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 159703, '1111', '获取用户信息', 14, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODc1MjUzLCJjcmVhdGVkIjoxNjAyODMyMDUzODU5LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.UzVafpW7tBzIEJvTrY20hgysS24Yxf5L1b9ts0Cin1_XaCzi-ZD01C2HHYzgRgR8-WOqmmNlxqwpaJDGR1WgTg) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@4607db7f] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@3de90883', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T15:07:33.919+0800' );;
2020-10-16 15:07:34 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 15:07:34 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 15:07:34 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 15:07:34 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 116937, '1111', '获取全部用户数量', 4, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T15:07:34.049+0800' );;
2020-10-16 16:06:57 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 21224 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-10-16 16:06:57 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-10-16 16:06:59 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-16 16:06:59 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 16:06:59 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 254ms. Found 0 Redis repository interfaces.
2020-10-16 16:07:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:07:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:07:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:07:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:07:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@63d677f5' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:07:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:07:01 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-10-16 16:07:01 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-10-16 16:07:01 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-10-16 16:07:01 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-10-16 16:07:01 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-10-16 16:07:01 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4336 ms
2020-10-16 16:07:02 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-10-16 16:07:02 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-10-16 16:07:02 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-10-16 16:07:02 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-10-16 16:07:02 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-10-16 16:07:02 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-10-16 16:07:02 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-10-16 16:07:02 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-10-16 16:07:02 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-10-16 16:07:03 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-10-16 16:07:03 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-10-16 16:07:03 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-10-16 16:07:03 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-10-16 16:07:03 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-10-16 16:07:03 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51602835623133'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-10-16 16:07:03 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-10-16 16:07:03 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-10-16 16:07:03 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@6802d023
2020-10-16 16:07:03 INFO  main p6spy 2020-10-16 16:07:03 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-10-16 16:07:04 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-10-16 16:07:04 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@19d3f4fb, org.springframework.security.web.context.SecurityContextPersistenceFilter@355b4c34, org.springframework.security.web.header.HeaderWriterFilter@729d1428, org.springframework.web.filter.CorsFilter@2084e65a, org.springframework.security.web.authentication.logout.LogoutFilter@6413eeb7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@dc3eda6, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@73633230, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@43cf97a8, org.springframework.security.web.session.SessionManagementFilter@4425b6ed, org.springframework.security.web.access.ExceptionTranslationFilter@231c521e, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@2b6ff016]
2020-10-16 16:07:05 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-10-16 16:07:05 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-10-16 16:07:05 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-10-16 16:07:05 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-10-16 16:07:05 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-10-16 16:07:05 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-10-16 16:07:05 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-10-16 16:07:06 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-10-16 16:07:06 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 10.028 seconds (JVM running for 16.341)
2020-10-16 16:07:06 INFO  RMI TCP Connection(1)-192.168.137.1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-16 16:07:06 INFO  RMI TCP Connection(1)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-10-16 16:07:06 INFO  RMI TCP Connection(1)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 17 ms
2020-10-16 16:07:07 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-10-16 16:07:07 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-10-16 16:07:07 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51602831298805"'s failed in-progress jobs.
2020-10-16 16:07:07 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602835623133 started.
2020-10-16 16:07:17 INFO  http-nio-8888-exec-2 org.apache.tomcat.util.http.parser.Cookie A cookie header was received [1579774133; __utma=111872281.831053985.1582861814.1582875770.1584267755.5; Idea-aafc89f7=a7b3efd7-3315-46db-8387-b3eb7ff7bbf7; Hm_lvt_d97abf6d61c21d773f97835defbdef4e=1594809530; Webstorm-5dc33a3f=3e27dac4-926d-43b5-b044-1c33978c0955; JSESSIONID=CB1DB843D3F271433EDF44E170EBA796; Admin-Token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODc1MjUzLCJjcmVhdGVkIjoxNjAyODMyMDUzODU5LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.UzVafpW7tBzIEJvTrY20hgysS24Yxf5L1b9ts0Cin1_XaCzi-ZD01C2HHYzgRgR8-WOqmmNlxqwpaJDGR1WgTg] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-16 16:07:25 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:07:25 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 16:07:25 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:07:25 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 16:07:25 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:07:25 | 耗时 1 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 16:07:26 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:07:26 | 耗时 1 ms | SQL 语句：
insert into codeworld_login_log ( t_login_log_id, t_login_log_name, t_login_log_time, t_login_log_location, t_login_log_ip, t_login_log_system, t_login_log_browser ) values ( 698995, '1111', '2020-10-16T16:07:26.312+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Windows 10', 'Chrome 78' );;
2020-10-16 16:07:26 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:07:26 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 117535, NULL, '用户登录', 635, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@66c5b61e] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@48b17643', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:07:26.355+0800' );;
2020-10-16 16:07:26 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 16:07:26 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 16:07:26 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 16:07:26 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 16:07:26 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 16:07:26 | 耗时 1 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 16:07:26 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 16:07:26 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 496756, '1111', '获取用户信息', 150, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODc4ODQ2LCJjcmVhdGVkIjoxNjAyODM1NjQ2MjA5LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.si76VOR0L8gIdQ44enQjJ4Hfcb4IBRw7ea4h_xq-OkZaQmHNtSeHraJlT8uwjM9Fk8KenO1D1nrR2gHzfB9lpA) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@fa07d22] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@7981b274', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:07:26.562+0800' );;
2020-10-16 16:07:26 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 16:07:26 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 16:07:26 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 16:07:26 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 216727, '1111', '获取全部用户数量', 8, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:07:26.959+0800' );;
2020-10-16 16:11:23 INFO  http-nio-8888-exec-1 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 16:11:23 INFO  http-nio-8888-exec-1 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 136ms. Found 0 Redis repository interfaces.
2020-10-16 16:11:24 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 16:11:24 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 446325, '1111', '退出登录', 2, '/system-user/user-login-out', ' userLoginOutRequest: UserLoginOutRequest(token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODc4ODQ2LCJjcmVhdGVkIjoxNjAyODM1NjQ2MjA5LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.si76VOR0L8gIdQ44enQjJ4Hfcb4IBRw7ea4h_xq-OkZaQmHNtSeHraJlT8uwjM9Fk8KenO1D1nrR2gHzfB9lpA)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:11:24.108+0800' );;
2020-10-16 16:11:27 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:11:27 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 16:11:27 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:11:27 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 16:11:27 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:11:27 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 16:11:27 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:11:27 | 耗时 12 ms | SQL 语句：
insert into codeworld_login_log ( t_login_log_id, t_login_log_name, t_login_log_time, t_login_log_location, t_login_log_ip, t_login_log_system, t_login_log_browser ) values ( 593245, '1111', '2020-10-16T16:11:27.226+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Windows 10', 'Chrome 78' );;
2020-10-16 16:11:27 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:11:27 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 62500, NULL, '用户登录', 192, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@714d74f0] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@62404e66', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:11:27.250+0800' );;
2020-10-16 16:11:27 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 16:11:27 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 16:11:27 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 16:11:27 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 16:11:27 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 16:11:27 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 16:11:27 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 16:11:27 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 53549, '1111', '获取用户信息', 19, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODc5MDg3LCJjcmVhdGVkIjoxNjAyODM1ODg3MjIwLCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.0DNeU8jfudWBkmb7A-2GY_O6bShVUCoXOdEJSIGRVHMOB1js5zRXd4CxH6sUGjBcNVEJgIeNNVujK2burOdSBg) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@27b0350d] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@62b96cef', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:11:27.298+0800' );;
2020-10-16 16:11:27 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 16:11:27 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 16:11:27 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 16:11:27 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 838349, '1111', '获取全部用户数量', 3, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:11:27.422+0800' );;
2020-10-16 16:12:42 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 16:12:42 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 68137, '1111', '退出登录', 3, '/system-user/user-login-out', ' userLoginOutRequest: UserLoginOutRequest(token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODc5MDg3LCJjcmVhdGVkIjoxNjAyODM1ODg3MjIwLCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.0DNeU8jfudWBkmb7A-2GY_O6bShVUCoXOdEJSIGRVHMOB1js5zRXd4CxH6sUGjBcNVEJgIeNNVujK2burOdSBg)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:12:42.354+0800' );;
2020-10-16 16:12:59 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:12:59 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 16:12:59 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:12:59 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 16:12:59 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:12:59 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 16:13:00 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:13:00 | 耗时 11 ms | SQL 语句：
insert into codeworld_login_log ( t_login_log_id, t_login_log_name, t_login_log_time, t_login_log_location, t_login_log_ip, t_login_log_system, t_login_log_browser ) values ( 43008, '1111', '2020-10-16T16:13:00.116+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Windows 10', 'Chrome 78' );;
2020-10-16 16:13:00 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:13:00 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 597102, NULL, '用户登录', 263, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@248374af] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@1140ea84', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:13:00.133+0800' );;
2020-10-16 16:13:00 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 16:13:00 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 16:13:00 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 16:13:00 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 16:13:00 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 16:13:00 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 16:13:00 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 16:13:00 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 902534, '1111', '获取用户信息', 18, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODc5MTgwLCJjcmVhdGVkIjoxNjAyODM1OTgwMTE0LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.HSVuiPYd0Bb7VxtUuQB_7d0mxXTSO_NNfb9giqMq_osXitdtRKnN229Jb9-oD0jmLWT8rKdiPjASyPApdiOz5Q) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@2bcd608e] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@7121a647', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:13:00.181+0800' );;
2020-10-16 16:13:00 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 16:13:00 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 16:13:00 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 16:13:00 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 576787, '1111', '获取全部用户数量', 5, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:13:00.371+0800' );;
2020-10-16 16:19:14 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 25168 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-10-16 16:19:14 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-10-16 16:19:17 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-16 16:19:17 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 16:19:17 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 481ms. Found 0 Redis repository interfaces.
2020-10-16 16:19:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:19:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:19:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:19:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:19:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5a2ae1ab' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:19:19 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:19:20 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-10-16 16:19:20 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-10-16 16:19:20 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-10-16 16:19:20 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-10-16 16:19:21 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-10-16 16:19:21 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 6418 ms
2020-10-16 16:19:21 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-10-16 16:19:21 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-10-16 16:19:22 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-10-16 16:19:22 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-10-16 16:19:22 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-10-16 16:19:22 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-10-16 16:19:22 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-10-16 16:19:22 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-10-16 16:19:22 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-10-16 16:19:23 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-10-16 16:19:23 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-10-16 16:19:23 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-10-16 16:19:23 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-10-16 16:19:23 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-10-16 16:19:23 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51602836363638'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-10-16 16:19:23 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-10-16 16:19:23 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-10-16 16:19:23 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@73d83141
2020-10-16 16:19:23 INFO  main p6spy 2020-10-16 16:19:23 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-10-16 16:19:26 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-10-16 16:19:26 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5c30decf, org.springframework.security.web.context.SecurityContextPersistenceFilter@4425b6ed, org.springframework.security.web.header.HeaderWriterFilter@296949c8, org.springframework.web.filter.CorsFilter@505d2bac, org.springframework.security.web.authentication.logout.LogoutFilter@6ac0fd1d, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5039c2cf, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@206e5183, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@7827cdfc, org.springframework.security.web.session.SessionManagementFilter@7a79d99c, org.springframework.security.web.access.ExceptionTranslationFilter@40b958c5, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@118c1faa]
2020-10-16 16:19:26 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-10-16 16:19:26 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-10-16 16:19:27 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-10-16 16:19:27 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-10-16 16:19:27 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-10-16 16:19:27 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-10-16 16:19:27 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-10-16 16:19:27 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-10-16 16:19:27 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 14.492 seconds (JVM running for 19.558)
2020-10-16 16:19:28 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-10-16 16:19:28 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602836363638 started.
2020-10-16 16:19:28 INFO  RMI TCP Connection(2)-192.168.137.1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-16 16:19:28 INFO  RMI TCP Connection(2)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-10-16 16:19:29 INFO  RMI TCP Connection(2)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 17 ms
2020-10-16 16:19:43 INFO  QuartzScheduler_FC_Scheduler-DESKTOP-P23KTQ51602836363638_ClusterManager org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-10-16 16:19:43 INFO  QuartzScheduler_FC_Scheduler-DESKTOP-P23KTQ51602836363638_ClusterManager org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51602835623133"'s failed in-progress jobs.
2020-10-16 16:19:53 INFO  http-nio-8888-exec-3 org.apache.tomcat.util.http.parser.Cookie A cookie header was received [1579774133; __utma=111872281.831053985.1582861814.1582875770.1584267755.5; Idea-aafc89f7=a7b3efd7-3315-46db-8387-b3eb7ff7bbf7; Hm_lvt_d97abf6d61c21d773f97835defbdef4e=1594809530; Webstorm-5dc33a3f=3e27dac4-926d-43b5-b044-1c33978c0955; JSESSIONID=9E94E46F3B7B969E054EE238C31E111E; Admin-Token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODc5MTgwLCJjcmVhdGVkIjoxNjAyODM1OTgwMTE0LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.HSVuiPYd0Bb7VxtUuQB_7d0mxXTSO_NNfb9giqMq_osXitdtRKnN229Jb9-oD0jmLWT8rKdiPjASyPApdiOz5Q] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-16 16:19:58 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:19:58 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 16:19:58 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:19:58 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 16:19:58 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:19:58 | 耗时 1 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 16:19:59 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:19:59 | 耗时 1 ms | SQL 语句：
insert into codeworld_login_log ( t_login_log_id, t_login_log_name, t_login_log_time, t_login_log_location, t_login_log_ip, t_login_log_system, t_login_log_browser ) values ( 451881, '1111', '2020-10-16T16:19:59.198+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Windows 10', 'Chrome 78' );;
2020-10-16 16:19:59 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:19:59 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 870423, NULL, '用户登录', 844, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6089ab35] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@3163b0dd', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:19:59.243+0800' );;
2020-10-16 16:19:59 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 16:19:59 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 16:19:59 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 16:19:59 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 16:19:59 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 16:19:59 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 16:19:59 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 16:19:59 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 249610, '1111', '获取用户信息', 116, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODc5NTk5LCJjcmVhdGVkIjoxNjAyODM2Mzk5MTIzLCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.Ald3HOxrgrq_9BmuHwEI7qqGdUrgIjKAhadrj1BiaSIycxjTlr8eO0GPN6Hx-8RaZ5YhPUuuy9VRXU0Me10LZg) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@44bc61d5] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@330c96e8', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:19:59.413+0800' );;
2020-10-16 16:19:59 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 16:19:59 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 16:19:59 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 16:19:59 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 969381, '1111', '获取全部用户数量', 8, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:19:59.611+0800' );;
2020-10-16 16:23:15 INFO  http-nio-8888-exec-1 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 16:23:16 INFO  http-nio-8888-exec-1 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 220ms. Found 0 Redis repository interfaces.
2020-10-16 16:23:16 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 16:23:16 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 16:23:16 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 16:23:16 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 16:23:16 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 16:23:16 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 16:23:16 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 16:23:16 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 158653, '1111', '获取用户信息', 16, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODc5NTk5LCJjcmVhdGVkIjoxNjAyODM2Mzk5MTIzLCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.Ald3HOxrgrq_9BmuHwEI7qqGdUrgIjKAhadrj1BiaSIycxjTlr8eO0GPN6Hx-8RaZ5YhPUuuy9VRXU0Me10LZg) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@42f732ce] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@351837b1', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:23:16.435+0800' );;
2020-10-16 16:23:16 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:23:16 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 16:23:16 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:23:16 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 302621, '1111', '获取全部用户数量', 6, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:23:16.607+0800' );;
2020-10-16 16:23:22 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 16:23:22 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 777373, '1111', '退出登录', 1, '/system-user/user-login-out', ' userLoginOutRequest: UserLoginOutRequest(token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODc5NTk5LCJjcmVhdGVkIjoxNjAyODM2Mzk5MTIzLCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.Ald3HOxrgrq_9BmuHwEI7qqGdUrgIjKAhadrj1BiaSIycxjTlr8eO0GPN6Hx-8RaZ5YhPUuuy9VRXU0Me10LZg)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:23:22.124+0800' );;
2020-10-16 16:23:29 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 16:23:29 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 16:23:29 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 16:23:29 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 16:23:29 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 16:23:29 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 16:23:29 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 16:23:29 | 耗时 1 ms | SQL 语句：
insert into codeworld_login_log ( t_login_log_id, t_login_log_name, t_login_log_time, t_login_log_location, t_login_log_ip, t_login_log_system, t_login_log_browser ) values ( 775844, '1111', '2020-10-16T16:23:29.588+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Windows 10', 'Chrome 78' );;
2020-10-16 16:23:29 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 16:23:29 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 560523, NULL, '用户登录', 274, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@46b662d5] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@21e98c04', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:23:29.596+0800' );;
2020-10-16 16:23:29 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 16:23:29 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 16:23:29 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 16:23:29 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 16:23:29 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 16:23:29 | 耗时 1 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 16:23:29 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 16:23:29 | 耗时 4 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 715460, '1111', '获取用户信息', 29, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODc5ODA5LCJjcmVhdGVkIjoxNjAyODM2NjA5NTg3LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.4vPttGasiJV8F4T5l4IK0LRYmltnrF9HYV8xZbFa4ATTvYVklkWhW64QjtK_Nu91iWkUQLKi3XpVwGRZQCbeLw) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@13efe1f7] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@185775d0', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:23:29.682+0800' );;
2020-10-16 16:23:30 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 16:23:30 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 16:23:30 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 16:23:30 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 672939, '1111', '获取全部用户数量', 6, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:23:30.054+0800' );;
2020-10-16 16:31:57 INFO  http-nio-8888-exec-6 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 16:31:57 INFO  http-nio-8888-exec-6 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 130ms. Found 0 Redis repository interfaces.
2020-10-16 16:31:57 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 16:31:57 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 734369, '1111', '退出登录', 1, '/system-user/user-login-out', ' userLoginOutRequest: UserLoginOutRequest(token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODc5ODA5LCJjcmVhdGVkIjoxNjAyODM2NjA5NTg3LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.4vPttGasiJV8F4T5l4IK0LRYmltnrF9HYV8xZbFa4ATTvYVklkWhW64QjtK_Nu91iWkUQLKi3XpVwGRZQCbeLw)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:31:57.399+0800' );;
2020-10-16 16:32:01 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 16:32:01 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 16:32:01 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 16:32:01 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 16:32:01 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 16:32:01 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 16:32:01 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 16:32:01 | 耗时 11 ms | SQL 语句：
insert into codeworld_login_log ( t_login_log_id, t_login_log_name, t_login_log_time, t_login_log_location, t_login_log_ip, t_login_log_system, t_login_log_browser ) values ( 43760, '1111', '2020-10-16T16:32:01.403+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Windows 10', 'Chrome 78' );;
2020-10-16 16:32:01 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 16:32:01 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 717836, NULL, '用户登录', 164, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@5055e3b7] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@141d00ce', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:32:01.418+0800' );;
2020-10-16 16:32:01 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 16:32:01 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 16:32:01 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 16:32:01 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 16:32:01 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 16:32:01 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 16:32:01 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 16:32:01 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 476738, '1111', '获取用户信息', 8, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODgwMzIxLCJjcmVhdGVkIjoxNjAyODM3MTIxNDAyLCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.5OvxBqReXxkPiTfdXl18lMUUeyDhB5tchuJyRYA12v4sP1O_0EVaTO1l9Mi1iEXFUX4VPgVdClzaWxNMcDkOVA) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@166c5391] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@398ce092', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:32:01.445+0800' );;
2020-10-16 16:32:01 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 16:32:01 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 16:32:01 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 16:32:01 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 104141, '1111', '获取全部用户数量', 2, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:32:01.547+0800' );;
2020-10-16 16:32:30 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 19152 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-10-16 16:32:30 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-10-16 16:32:33 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-16 16:32:33 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 16:32:33 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 319ms. Found 0 Redis repository interfaces.
2020-10-16 16:32:34 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:32:34 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:32:34 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:32:34 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:32:34 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@50e5032c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:32:34 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:32:35 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-10-16 16:32:35 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-10-16 16:32:35 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-10-16 16:32:35 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-10-16 16:32:35 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-10-16 16:32:35 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 5360 ms
2020-10-16 16:32:35 INFO  main org.apache.catalina.core.StandardService Stopping service [Tomcat]
2020-10-16 16:32:35 INFO  main org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-10-16 16:33:50 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 20624 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-10-16 16:33:50 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-10-16 16:33:53 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-16 16:33:53 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 16:33:54 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 282ms. Found 0 Redis repository interfaces.
2020-10-16 16:33:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:33:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:33:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:33:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:33:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5b48f0f4' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:33:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:33:56 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-10-16 16:33:56 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-10-16 16:33:56 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-10-16 16:33:56 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-10-16 16:33:56 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-10-16 16:33:56 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 6181 ms
2020-10-16 16:33:56 INFO  main org.apache.catalina.core.StandardService Stopping service [Tomcat]
2020-10-16 16:33:57 INFO  main org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-10-16 16:34:47 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 19956 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-10-16 16:34:47 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-10-16 16:34:50 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-16 16:34:50 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 16:34:50 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 263ms. Found 0 Redis repository interfaces.
2020-10-16 16:34:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:34:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:34:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:34:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:34:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7739aac4' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:34:51 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:34:52 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-10-16 16:34:52 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-10-16 16:34:52 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-10-16 16:34:52 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-10-16 16:34:52 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-10-16 16:34:52 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4613 ms
2020-10-16 16:34:52 INFO  main org.apache.catalina.core.StandardService Stopping service [Tomcat]
2020-10-16 16:34:52 INFO  main org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-10-16 16:47:11 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 1428 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-10-16 16:47:11 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-10-16 16:47:13 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-16 16:47:13 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 16:47:13 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 277ms. Found 0 Redis repository interfaces.
2020-10-16 16:47:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:47:14 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:47:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:47:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:47:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@1eeb5818' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:47:15 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:47:15 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-10-16 16:47:15 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-10-16 16:47:15 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-10-16 16:47:15 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-10-16 16:47:15 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-10-16 16:47:15 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4362 ms
2020-10-16 16:47:16 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-10-16 16:47:16 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-10-16 16:47:16 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-10-16 16:47:16 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-10-16 16:47:16 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-10-16 16:47:16 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-10-16 16:47:16 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-10-16 16:47:16 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-10-16 16:47:16 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-10-16 16:47:17 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-10-16 16:47:17 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-10-16 16:47:17 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-10-16 16:47:17 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-10-16 16:47:17 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-10-16 16:47:17 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51602838037299'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-10-16 16:47:17 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-10-16 16:47:17 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-10-16 16:47:17 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@27053257
2020-10-16 16:47:17 INFO  main p6spy 2020-10-16 16:47:17 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-10-16 16:47:18 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-10-16 16:47:19 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5b1cedfd, org.springframework.security.web.context.SecurityContextPersistenceFilter@6e475994, org.springframework.security.web.header.HeaderWriterFilter@6c6c93f8, org.springframework.web.filter.CorsFilter@1b791dca, org.springframework.security.web.authentication.logout.LogoutFilter@304704ae, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1a99744a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a08d301, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1fe2c5ad, org.springframework.security.web.session.SessionManagementFilter@47cf922d, org.springframework.security.web.access.ExceptionTranslationFilter@8de8b07, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5a6d4dee]
2020-10-16 16:47:19 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-10-16 16:47:19 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-10-16 16:47:20 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-10-16 16:47:20 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-10-16 16:47:20 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-10-16 16:47:20 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-10-16 16:47:20 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-10-16 16:47:20 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-10-16 16:47:20 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 10.434 seconds (JVM running for 17.154)
2020-10-16 16:47:21 INFO  RMI TCP Connection(1)-192.168.137.1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-16 16:47:21 INFO  RMI TCP Connection(1)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-10-16 16:47:21 INFO  RMI TCP Connection(1)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 18 ms
2020-10-16 16:47:21 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-10-16 16:47:21 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-10-16 16:47:21 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51602836363638"'s failed in-progress jobs.
2020-10-16 16:47:21 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602838037299 started.
2020-10-16 16:47:43 INFO  http-nio-8888-exec-3 org.apache.tomcat.util.http.parser.Cookie A cookie header was received [1579774133; __utma=111872281.831053985.1582861814.1582875770.1584267755.5; Idea-aafc89f7=a7b3efd7-3315-46db-8387-b3eb7ff7bbf7; Hm_lvt_d97abf6d61c21d773f97835defbdef4e=1594809530; Webstorm-5dc33a3f=3e27dac4-926d-43b5-b044-1c33978c0955; JSESSIONID=DC8AF27D5F0E349B92AD727F6F5ED240] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-16 16:47:43 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 16:47:43 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 16:47:43 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 16:47:43 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 16:47:43 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 16:47:43 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 16:47:44 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 16:47:44 | 耗时 11 ms | SQL 语句：
insert into codeworld_login_log ( t_login_log_id, t_login_log_name, t_login_log_time, t_login_log_location, t_login_log_ip, t_login_log_system, t_login_log_browser ) values ( 116777, '1111', '2020-10-16T16:47:44.094+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Windows 10', 'Chrome 78' );;
2020-10-16 16:47:44 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 16:47:44 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 535310, NULL, '用户登录', 367, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@481adf7a] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@17ab8ee6', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:47:44.127+0800' );;
2020-10-16 16:47:44 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:47:44 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 16:47:44 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:47:44 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 16:47:44 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:47:44 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 16:47:44 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 16:47:44 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 914465, '1111', '获取用户信息', 84, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODgxMjY0LCJjcmVhdGVkIjoxNjAyODM4MDY0MDQ4LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.FXlre4QLfREtG5hbViWNQEMaVp4MoR07K6CICvQFntFVssW603iPgw4lJ2mrWZeekrUPe0Su4KoEZO7vZdbeew) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@79cc481c] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@48e8c258', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:47:44.267+0800' );;
2020-10-16 16:47:44 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 16:47:44 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 16:47:44 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 16:47:44 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 634191, '1111', '获取全部用户数量', 5, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T16:47:44.419+0800' );;
2020-10-16 16:54:02 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 2128 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-10-16 16:54:02 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-10-16 16:54:04 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-16 16:54:04 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 16:54:04 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 268ms. Found 0 Redis repository interfaces.
2020-10-16 16:54:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:54:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:54:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:54:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:54:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@448462f0' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:54:06 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 16:54:08 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-10-16 16:54:08 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-10-16 16:54:08 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-10-16 16:54:08 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-10-16 16:54:08 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-10-16 16:54:08 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 6592 ms
2020-10-16 16:54:09 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-10-16 16:54:09 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-10-16 16:54:10 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-10-16 16:54:10 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-10-16 16:54:10 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-10-16 16:54:10 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-10-16 16:54:10 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-10-16 16:54:10 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-10-16 16:54:10 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-10-16 16:54:12 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-10-16 16:54:12 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-10-16 16:54:12 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-10-16 16:54:12 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-10-16 16:54:12 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-10-16 16:54:12 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51602838452433'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-10-16 16:54:12 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-10-16 16:54:12 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-10-16 16:54:12 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@4cd8db31
2020-10-16 16:54:12 INFO  main p6spy 2020-10-16 16:54:12 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-10-16 16:54:14 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-10-16 16:54:15 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@20276412, org.springframework.security.web.context.SecurityContextPersistenceFilter@3fe3ebb3, org.springframework.security.web.header.HeaderWriterFilter@755033c5, org.springframework.web.filter.CorsFilter@45dde6ac, org.springframework.security.web.authentication.logout.LogoutFilter@43c20142, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@6f30d0eb, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@118c1faa, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@1dae9e61, org.springframework.security.web.session.SessionManagementFilter@727de450, org.springframework.security.web.access.ExceptionTranslationFilter@217009bd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5418893c]
2020-10-16 16:54:15 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-10-16 16:54:15 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-10-16 16:54:16 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-10-16 16:54:16 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-10-16 16:54:16 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-10-16 16:54:16 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-10-16 16:54:17 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-10-16 16:54:17 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-10-16 16:54:17 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 16.792 seconds (JVM running for 22.976)
2020-10-16 16:54:18 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-10-16 16:54:18 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-10-16 16:54:18 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51602838037299"'s failed in-progress jobs.
2020-10-16 16:54:18 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602838452433 started.
2020-10-16 16:54:19 INFO  RMI TCP Connection(5)-192.168.137.1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-16 16:54:19 INFO  RMI TCP Connection(5)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-10-16 16:54:19 INFO  RMI TCP Connection(5)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 23 ms
2020-10-16 16:55:47 INFO  rebel-change-detector-thread org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 16:55:47 INFO  rebel-change-detector-thread org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 331ms. Found 0 Redis repository interfaces.
2020-10-16 17:02:44 INFO  rebel-change-detector-thread org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 17:02:45 INFO  rebel-change-detector-thread org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 262ms. Found 0 Redis repository interfaces.
2020-10-16 17:03:20 INFO  rebel-change-detector-thread org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 17:03:21 INFO  rebel-change-detector-thread org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 384ms. Found 0 Redis repository interfaces.
2020-10-16 17:04:06 INFO  rebel-change-detector-thread org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 17:04:06 INFO  rebel-change-detector-thread org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 406ms. Found 0 Redis repository interfaces.
2020-10-16 17:06:35 INFO  rebel-change-detector-thread org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 17:06:35 INFO  rebel-change-detector-thread org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 329ms. Found 0 Redis repository interfaces.
2020-10-16 17:07:49 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 24376 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-10-16 17:07:50 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-10-16 17:07:53 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-16 17:07:53 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 17:07:54 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 365ms. Found 0 Redis repository interfaces.
2020-10-16 17:07:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 17:07:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 17:07:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 17:07:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 17:07:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@686cf8ad' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 17:07:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 17:07:56 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-10-16 17:07:56 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-10-16 17:07:56 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-10-16 17:07:56 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-10-16 17:07:56 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-10-16 17:07:56 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 6503 ms
2020-10-16 17:07:57 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-10-16 17:07:57 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-10-16 17:07:57 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-10-16 17:07:57 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-10-16 17:07:57 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-10-16 17:07:57 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-10-16 17:07:57 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-10-16 17:07:57 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-10-16 17:07:57 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-10-16 17:07:58 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-10-16 17:07:58 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-10-16 17:07:58 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-10-16 17:07:58 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-10-16 17:07:58 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-10-16 17:07:58 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51602839278329'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-10-16 17:07:58 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-10-16 17:07:58 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-10-16 17:07:58 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@615c4ea4
2020-10-16 17:07:58 INFO  main p6spy 2020-10-16 17:07:58 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-10-16 17:07:59 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-10-16 17:08:00 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@2e6f1f48, org.springframework.security.web.context.SecurityContextPersistenceFilter@532e00bd, org.springframework.security.web.header.HeaderWriterFilter@73633230, org.springframework.web.filter.CorsFilter@c497a55, org.springframework.security.web.authentication.logout.LogoutFilter@229c4d34, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@47fbf95e, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@956cf3d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5ed88e31, org.springframework.security.web.session.SessionManagementFilter@623ed5ed, org.springframework.security.web.access.ExceptionTranslationFilter@7ca7bddd, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@31daf094]
2020-10-16 17:08:00 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-10-16 17:08:00 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-10-16 17:08:01 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-10-16 17:08:01 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-10-16 17:08:01 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-10-16 17:08:01 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-10-16 17:08:01 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-10-16 17:08:01 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-10-16 17:08:01 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 13.44 seconds (JVM running for 19.848)
2020-10-16 17:08:02 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-10-16 17:08:02 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-10-16 17:08:02 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51602838452433"'s failed in-progress jobs.
2020-10-16 17:08:02 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602839278329 started.
2020-10-16 17:08:02 INFO  RMI TCP Connection(5)-192.168.137.1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-16 17:08:02 INFO  RMI TCP Connection(5)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-10-16 17:08:02 INFO  RMI TCP Connection(5)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 17 ms
2020-10-16 17:08:15 INFO  http-nio-8888-exec-2 org.apache.tomcat.util.http.parser.Cookie A cookie header was received [1579774133; __utma=111872281.831053985.1582861814.1582875770.1584267755.5; Idea-aafc89f7=a7b3efd7-3315-46db-8387-b3eb7ff7bbf7; Hm_lvt_d97abf6d61c21d773f97835defbdef4e=1594809530; Webstorm-5dc33a3f=3e27dac4-926d-43b5-b044-1c33978c0955; JSESSIONID=3BB506BE80879577B0AC095E46B7806E; Admin-Token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODgxMjY0LCJjcmVhdGVkIjoxNjAyODM4MDY0MDQ4LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.FXlre4QLfREtG5hbViWNQEMaVp4MoR07K6CICvQFntFVssW603iPgw4lJ2mrWZeekrUPe0Su4KoEZO7vZdbeew] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-16 17:08:19 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:08:19 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:08:19 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:08:19 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:08:19 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:08:19 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:08:19 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:08:19 | 耗时 2 ms | SQL 语句：
insert into codeworld_login_log ( t_login_log_id, t_login_log_name, t_login_log_time, t_login_log_location, t_login_log_ip, t_login_log_system, t_login_log_browser ) values ( 352621, '1111', '2020-10-16T17:08:19.938+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Windows 10', 'Chrome 78' );;
2020-10-16 17:08:20 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:08:20 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 771173, NULL, '用户登录', 631, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@15c98ae8] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@59bbd61a', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:08:19.998+0800' );;
2020-10-16 17:08:20 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 17:08:20 | 耗时 1 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:08:20 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 17:08:20 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:08:20 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 17:08:20 | 耗时 1 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:08:20 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 17:08:20 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 150418, '1111', '获取用户信息', 168, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODgyNDk5LCJjcmVhdGVkIjoxNjAyODM5Mjk5ODYyLCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.DpLOH_p4k3gGoynSdhSp-3bX_ITJfM1I0csYXWVzx9TGkBxerP46kRtYNlAOpya4zlp_xF0Z5oH_bR-NgyDYpg) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@fa07d22] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@7981b274', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:08:20.224+0800' );;
2020-10-16 17:08:20 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 17:08:20 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:08:20 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 17:08:20 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 870287, '1111', '获取全部用户数量', 10, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:08:20.518+0800' );;
2020-10-16 17:11:54 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 17052 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-10-16 17:11:54 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-10-16 17:11:56 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-16 17:11:56 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 17:11:56 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 254ms. Found 0 Redis repository interfaces.
2020-10-16 17:11:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 17:11:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 17:11:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 17:11:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 17:11:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@586cc15d' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 17:11:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 17:11:58 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-10-16 17:11:58 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-10-16 17:11:58 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-10-16 17:11:58 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-10-16 17:11:58 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-10-16 17:11:58 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4258 ms
2020-10-16 17:11:58 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-10-16 17:11:59 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-10-16 17:11:59 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-10-16 17:11:59 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-10-16 17:11:59 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-10-16 17:11:59 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-10-16 17:11:59 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-10-16 17:11:59 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-10-16 17:11:59 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-10-16 17:12:00 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-10-16 17:12:00 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-10-16 17:12:00 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-10-16 17:12:00 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-10-16 17:12:00 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-10-16 17:12:00 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51602839520039'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-10-16 17:12:00 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-10-16 17:12:00 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-10-16 17:12:00 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@19e2db7c
2020-10-16 17:12:00 INFO  main p6spy 2020-10-16 17:12:00 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-10-16 17:12:01 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-10-16 17:12:01 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@71c69628, org.springframework.security.web.context.SecurityContextPersistenceFilter@589a4305, org.springframework.security.web.header.HeaderWriterFilter@188b9a1e, org.springframework.web.filter.CorsFilter@5eeee124, org.springframework.security.web.authentication.logout.LogoutFilter@3a720ae3, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@28c75c93, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@63218586, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4dc16fc9, org.springframework.security.web.session.SessionManagementFilter@42fdf45e, org.springframework.security.web.access.ExceptionTranslationFilter@c770b57, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@69e736bf]
2020-10-16 17:12:01 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-10-16 17:12:01 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-10-16 17:12:02 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-10-16 17:12:02 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-10-16 17:12:02 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-10-16 17:12:02 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-10-16 17:12:02 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-10-16 17:12:03 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-10-16 17:12:03 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 10.19 seconds (JVM running for 16.51)
2020-10-16 17:12:04 INFO  RMI TCP Connection(2)-192.168.137.1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-16 17:12:04 INFO  RMI TCP Connection(2)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-10-16 17:12:04 INFO  RMI TCP Connection(2)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 16 ms
2020-10-16 17:12:04 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-10-16 17:12:04 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-10-16 17:12:04 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51602839278329"'s failed in-progress jobs.
2020-10-16 17:12:04 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602839520039 started.
2020-10-16 17:12:14 INFO  http-nio-8888-exec-2 org.apache.tomcat.util.http.parser.Cookie A cookie header was received [1579774133; __utma=111872281.831053985.1582861814.1582875770.1584267755.5; Idea-aafc89f7=a7b3efd7-3315-46db-8387-b3eb7ff7bbf7; Hm_lvt_d97abf6d61c21d773f97835defbdef4e=1594809530; Webstorm-5dc33a3f=3e27dac4-926d-43b5-b044-1c33978c0955; JSESSIONID=3E5BDFD27CF26F76AD0D9836E16D5D54; Admin-Token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODgyNDk5LCJjcmVhdGVkIjoxNjAyODM5Mjk5ODYyLCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.DpLOH_p4k3gGoynSdhSp-3bX_ITJfM1I0csYXWVzx9TGkBxerP46kRtYNlAOpya4zlp_xF0Z5oH_bR-NgyDYpg] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-16 17:12:21 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:12:21 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:12:21 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:12:21 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:12:21 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:12:21 | 耗时 1 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:12:21 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:12:21 | 耗时 1 ms | SQL 语句：
insert into codeworld_login_log ( t_login_log_id, t_login_log_name, t_login_log_time, t_login_log_location, t_login_log_ip, t_login_log_system, t_login_log_browser ) values ( 594282, '1111', '2020-10-16T17:12:21.599+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Windows 10', 'Chrome 78' );;
2020-10-16 17:12:21 INFO  http-nio-8888-exec-4 com.codeworld.fc.monitor.listener.ActiveUserListener 当前在线人数：0
2020-10-16 17:12:21 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:12:21 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 12824, NULL, '用户登录', 700, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@64a90164] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@29fbed2c', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:12:21.644+0800' );;
2020-10-16 17:12:21 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:12:21 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:12:21 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:12:21 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:12:21 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:12:21 | 耗时 1 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:12:21 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:12:21 | 耗时 12 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 392050, '1111', '获取用户信息', 153, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODgyNzQxLCJjcmVhdGVkIjoxNjAyODM5NTQxNTI4LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.vd0kxYpnLS85h74XdGa7W0BbPu2DgkhwztbGfiTNaGSWXWzJ8SwhnzTO5-aDi5QiHwjSLHd3ONl6oSS_Y87_cw) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@246caca8] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@3f4c015c', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:12:21.855+0800' );;
2020-10-16 17:12:22 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 17:12:22 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:12:22 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 17:12:22 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 111909, '1111', '获取全部用户数量', 9, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:12:22.141+0800' );;
2020-10-16 17:12:35 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 17:12:35 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:12:35 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 17:12:35 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:12:35 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 17:12:35 | 耗时 1 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:12:35 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 17:12:35 | 耗时 12 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 117761, '1111', '获取用户信息', 27, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODgyNzQxLCJjcmVhdGVkIjoxNjAyODM5NTQxNTI4LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.vd0kxYpnLS85h74XdGa7W0BbPu2DgkhwztbGfiTNaGSWXWzJ8SwhnzTO5-aDi5QiHwjSLHd3ONl6oSS_Y87_cw) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@53075c2f] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@5172cac6', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:12:35.544+0800' );;
2020-10-16 17:12:35 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:12:35 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:12:35 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:12:35 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 261779, '1111', '获取全部用户数量', 9, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:12:35.767+0800' );;
2020-10-16 17:13:00 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:13:00 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:13:00 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:13:00 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:13:00 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:13:00 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:13:00 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:13:00 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 755653, '1111', '获取用户信息', 10, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODgyNzQxLCJjcmVhdGVkIjoxNjAyODM5NTQxNTI4LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.vd0kxYpnLS85h74XdGa7W0BbPu2DgkhwztbGfiTNaGSWXWzJ8SwhnzTO5-aDi5QiHwjSLHd3ONl6oSS_Y87_cw) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@324e26ea] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@60570090', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:13:00.404+0800' );;
2020-10-16 17:13:00 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:13:00 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:13:00 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:13:00 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 746816, '1111', '获取全部用户数量', 4, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:13:00.564+0800' );;
2020-10-16 17:13:31 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 17:13:31 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:13:31 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 17:13:31 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:13:31 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 17:13:31 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:13:31 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 17:13:31 | 耗时 1 ms | SQL 语句：
insert into codeworld_login_log ( t_login_log_id, t_login_log_name, t_login_log_time, t_login_log_location, t_login_log_ip, t_login_log_system, t_login_log_browser ) values ( 562732, '1111', '2020-10-16T17:13:31.802+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Windows 10', 'Firefox 80' );;
2020-10-16 17:13:31 INFO  http-nio-8888-exec-8 com.codeworld.fc.monitor.listener.ActiveUserListener 当前在线人数：1
2020-10-16 17:13:31 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 17:13:31 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 717591, NULL, '用户登录', 156, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@62d334f5] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@7972eb17', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:13:31.805+0800' );;
2020-10-16 17:13:31 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 17:13:31 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:13:31 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 17:13:31 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:13:31 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 17:13:31 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:13:31 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 17:13:31 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 674731, '1111', '获取用户信息', 12, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODgyODExLCJjcmVhdGVkIjoxNjAyODM5NjExODAxLCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.fK4Z_okkB7tE048EPWuvTsY1FlZFFVYnjC-VZBB-CtDDMUhgLp8LZuPvwi1094GZjCvR5KLPMf0zhr9WRhc8Dw) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@735c4ce0] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@146fecc5', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:13:31.841+0800' );;
2020-10-16 17:13:32 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:13:32 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:13:32 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:13:32 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 229018, '1111', '获取全部用户数量', 4, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:13:32.049+0800' );;
2020-10-16 17:14:11 INFO  http-nio-8888-exec-5 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 17:14:11 INFO  http-nio-8888-exec-5 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 286ms. Found 0 Redis repository interfaces.
2020-10-16 17:14:12 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:14:12 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:14:12 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:14:12 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:14:12 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:14:12 | 耗时 1 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:14:12 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:14:12 | 耗时 12 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 574586, '1111', '获取用户信息', 21, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODgyODExLCJjcmVhdGVkIjoxNjAyODM5NjExODAxLCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.fK4Z_okkB7tE048EPWuvTsY1FlZFFVYnjC-VZBB-CtDDMUhgLp8LZuPvwi1094GZjCvR5KLPMf0zhr9WRhc8Dw) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@30b263f] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@1ec33ddc', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:14:12.234+0800' );;
2020-10-16 17:14:12 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 17:14:12 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:14:12 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 17:14:12 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 249128, '1111', '获取全部用户数量', 6, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:14:12.714+0800' );;
2020-10-16 17:14:16 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:14:16 | 耗时 2 ms | SQL 语句：
select * from codeworld_dept;
2020-10-16 17:14:16 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:14:16 | 耗时 12 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 11442, '1111', '获取部门树', 171, '/system-dept/tree-dept', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:14:16.156+0800' );;
2020-10-16 17:14:16 INFO  http-nio-8888-exec-1 p6spy 2020-10-16 17:14:16 | 耗时 1 ms | SQL 语句：
SELECT count(0) FROM codeworld_user;
2020-10-16 17:14:16 INFO  http-nio-8888-exec-1 p6spy 2020-10-16 17:14:16 | 耗时 2 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC LIMIT 10 ;
2020-10-16 17:14:16 INFO  http-nio-8888-exec-1 p6spy 2020-10-16 17:14:16 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 638810, '1111', '获取全部用户', 198, '/system-user/get-all-user', ' userSearchRequest: UserSearchRequest(page=1, limit=10, userName=null, userEmail=null, userPhone=null, userStatus=null, createTime=null, updateTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:14:16.224+0800' );;
2020-10-16 17:14:19 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:14:19 | 耗时 1 ms | SQL 语句：
select * from codeworld_menu;
2020-10-16 17:14:19 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 17:14:19 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_role;
2020-10-16 17:14:19 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 17:14:19 | 耗时 1 ms | SQL 语句：
select * from codeworld_role order by t_create_time DESC LIMIT 10 ;
2020-10-16 17:14:21 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 17:14:21 | 耗时 0 ms | SQL 语句：
select * from codeworld_menu;
2020-10-16 17:14:22 INFO  http-nio-8888-exec-10 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 17:14:22 INFO  http-nio-8888-exec-10 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 195ms. Found 0 Redis repository interfaces.
2020-10-16 17:14:23 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 17:14:23 | 耗时 2 ms | SQL 语句：
SELECT count(0) FROM codeworld_log;
2020-10-16 17:14:23 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 17:14:23 | 耗时 1 ms | SQL 语句：
select * from codeworld_log order by t_log_create_Time DESC LIMIT 10 ;
2020-10-16 17:14:23 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 17:14:23 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 755576, '1111', '获取全部日志', 40, '/system-log/get-all-log', ' logSearchVO: LogSearchVO(page=1, limit=10)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:14:23.558+0800' );;
2020-10-16 17:15:03 INFO  http-nio-8888-exec-1 p6spy 2020-10-16 17:15:03 | 耗时 3 ms | SQL 语句：
delete from codeworld_log where t_log_id = 717591;
2020-10-16 17:15:03 INFO  http-nio-8888-exec-1 p6spy 2020-10-16 17:15:03 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 401705, '1111', '删除日志', 7, '/system-log/delete-log', ' id: "717591"', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:15:03.377+0800' );;
2020-10-16 17:15:03 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 17:15:03 | 耗时 1 ms | SQL 语句：
SELECT count(0) FROM codeworld_log;
2020-10-16 17:15:03 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 17:15:03 | 耗时 1 ms | SQL 语句：
select * from codeworld_log order by t_log_create_Time DESC LIMIT 10 ;
2020-10-16 17:15:03 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 17:15:03 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 295001, '1111', '获取全部日志', 10, '/system-log/get-all-log', ' logSearchVO: LogSearchVO(page=1, limit=10)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:15:03.421+0800' );;
2020-10-16 17:15:08 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:15:08 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 509306, '1111', '查询请求', 26, '/system-monitor/get-http-trace', ' httpTraceSearchVO: HttpTraceSearchVO(url=null, method=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:15:08.916+0800' );;
2020-10-16 17:15:11 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 17:15:11 | 耗时 0 ms | SQL 语句：
select * from codeworld_dept;
2020-10-16 17:15:11 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 17:15:11 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_user;
2020-10-16 17:15:11 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 17:15:11 | 耗时 0 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC LIMIT 10 ;
2020-10-16 17:15:11 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 17:15:11 | 耗时 12 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 54334, '1111', '获取部门树', 8, '/system-dept/tree-dept', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:15:11.155+0800' );;
2020-10-16 17:15:11 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 17:15:11 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 475149, '1111', '获取全部用户', 9, '/system-user/get-all-user', ' userSearchRequest: UserSearchRequest(page=1, limit=10, userName=null, userEmail=null, userPhone=null, userStatus=null, createTime=null, updateTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:15:11.157+0800' );;
2020-10-16 17:35:15 INFO  http-nio-8888-exec-5 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 17:35:16 INFO  http-nio-8888-exec-5 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 410ms. Found 0 Redis repository interfaces.
2020-10-16 17:35:16 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 17:35:16 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:35:16 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 17:35:16 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 317476, '1111', '获取全部用户数量', 7, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:35:16.870+0800' );;
2020-10-16 17:35:16 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 17:35:16 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:35:16 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 17:35:16 | 耗时 4 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 524128, '1111', '获取全部用户数量', 5, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:35:16.909+0800' );;
2020-10-16 17:36:18 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 17:36:18 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:36:18 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 17:36:18 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 504592, '1111', '获取全部用户数量', 5, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:36:18.196+0800' );;
2020-10-16 17:36:18 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:36:18 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:36:18 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:36:18 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 977907, '1111', '获取全部用户数量', 5, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:36:18.221+0800' );;
2020-10-16 17:37:09 INFO  http-nio-8888-exec-8 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 17:37:09 INFO  http-nio-8888-exec-8 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 344ms. Found 0 Redis repository interfaces.
2020-10-16 17:37:10 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 17:37:10 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:37:10 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 17:37:10 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:37:10 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 17:37:10 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:37:10 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 17:37:10 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 680159, '1111', '获取用户信息', 20, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODgyNzQxLCJjcmVhdGVkIjoxNjAyODM5NTQxNTI4LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.vd0kxYpnLS85h74XdGa7W0BbPu2DgkhwztbGfiTNaGSWXWzJ8SwhnzTO5-aDi5QiHwjSLHd3ONl6oSS_Y87_cw) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@4d9c418d] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@59b29de4', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:37:10.039+0800' );;
2020-10-16 17:37:10 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 17:37:10 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:37:10 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 17:37:10 | 耗时 12 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 208631, '1111', '获取全部用户数量', 6, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:37:10.356+0800' );;
2020-10-16 17:37:20 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 17:37:20 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:37:20 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 17:37:20 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:37:20 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 17:37:20 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:37:20 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 17:37:20 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 781052, '1111', '获取用户信息', 24, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODgyNzQxLCJjcmVhdGVkIjoxNjAyODM5NTQxNTI4LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.vd0kxYpnLS85h74XdGa7W0BbPu2DgkhwztbGfiTNaGSWXWzJ8SwhnzTO5-aDi5QiHwjSLHd3ONl6oSS_Y87_cw) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@440bbeb2] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@1ff8c45b', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:37:20.368+0800' );;
2020-10-16 17:37:20 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:37:20 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:37:20 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:37:20 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 164064, '1111', '获取全部用户数量', 5, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:37:20.691+0800' );;
2020-10-16 17:38:10 INFO  http-nio-8888-exec-8 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 17:38:10 INFO  http-nio-8888-exec-8 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 268ms. Found 0 Redis repository interfaces.
2020-10-16 17:38:11 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 17:38:11 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:38:11 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 17:38:11 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 380188, '1111', '获取全部用户数量', 6, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:38:11.141+0800' );;
2020-10-16 17:38:11 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 17:38:11 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:38:11 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 17:38:11 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 691337, '1111', '获取全部用户数量', 5, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:38:11.177+0800' );;
2020-10-16 17:38:15 INFO  http-nio-8888-exec-1 p6spy 2020-10-16 17:38:15 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:38:15 INFO  http-nio-8888-exec-1 p6spy 2020-10-16 17:38:15 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:38:15 INFO  http-nio-8888-exec-1 p6spy 2020-10-16 17:38:15 | 耗时 1 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:38:15 INFO  http-nio-8888-exec-1 p6spy 2020-10-16 17:38:15 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 944736, '1111', '获取用户信息', 24, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODgyNzQxLCJjcmVhdGVkIjoxNjAyODM5NTQxNTI4LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.vd0kxYpnLS85h74XdGa7W0BbPu2DgkhwztbGfiTNaGSWXWzJ8SwhnzTO5-aDi5QiHwjSLHd3ONl6oSS_Y87_cw) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@2e1a7a36] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@4ddf295', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:38:15.412+0800' );;
2020-10-16 17:38:15 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:38:15 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:38:15 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:38:15 | 耗时 12 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 62293, '1111', '获取全部用户数量', 4, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:38:15.794+0800' );;
2020-10-16 17:38:31 INFO  http-nio-8888-exec-5 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 17:38:31 INFO  http-nio-8888-exec-5 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 324ms. Found 0 Redis repository interfaces.
2020-10-16 17:38:31 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 17:38:31 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:38:31 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 17:38:31 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 120009, '1111', '获取全部用户数量', 4, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:38:31.912+0800' );;
2020-10-16 17:38:31 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:38:31 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:38:31 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:38:31 | 耗时 3 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 972854, '1111', '获取全部用户数量', 5, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:38:31.942+0800' );;
2020-10-16 17:39:21 INFO  http-nio-8888-exec-2 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 17:39:21 INFO  http-nio-8888-exec-2 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 440ms. Found 0 Redis repository interfaces.
2020-10-16 17:39:22 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 17:39:22 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:39:22 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 17:39:22 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:39:22 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 17:39:22 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:39:22 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 17:39:22 | 耗时 12 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 600597, '1111', '获取用户信息', 15, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODgyNzQxLCJjcmVhdGVkIjoxNjAyODM5NTQxNTI4LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.vd0kxYpnLS85h74XdGa7W0BbPu2DgkhwztbGfiTNaGSWXWzJ8SwhnzTO5-aDi5QiHwjSLHd3ONl6oSS_Y87_cw) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@32998a89] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@259656f2', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:39:22.196+0800' );;
2020-10-16 17:39:22 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:39:22 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:39:22 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:39:22 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 910268, '1111', '获取全部用户数量', 4, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:39:22.442+0800' );;
2020-10-16 17:40:18 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:40:18 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:40:18 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:40:18 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:40:18 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:40:18 | 耗时 1 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:40:18 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:40:18 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 653317, '1111', '获取用户信息', 29, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODgyNzQxLCJjcmVhdGVkIjoxNjAyODM5NTQxNTI4LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.vd0kxYpnLS85h74XdGa7W0BbPu2DgkhwztbGfiTNaGSWXWzJ8SwhnzTO5-aDi5QiHwjSLHd3ONl6oSS_Y87_cw) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@1d95f6c2] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@33185079', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:40:18.492+0800' );;
2020-10-16 17:40:18 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 17:40:18 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:40:18 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 17:40:18 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 787719, '1111', '获取全部用户数量', 5, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:40:18.862+0800' );;
2020-10-16 17:40:22 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:40:22 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 191112, '1111', '退出登录', 3, '/system-user/user-login-out', ' userLoginOutRequest: UserLoginOutRequest(token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODgyNzQxLCJjcmVhdGVkIjoxNjAyODM5NTQxNTI4LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.vd0kxYpnLS85h74XdGa7W0BbPu2DgkhwztbGfiTNaGSWXWzJ8SwhnzTO5-aDi5QiHwjSLHd3ONl6oSS_Y87_cw)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:40:22.411+0800' );;
2020-10-16 17:40:26 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 17:40:26 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:40:26 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 17:40:26 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:40:26 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 17:40:26 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:40:26 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 17:40:26 | 耗时 1 ms | SQL 语句：
insert into codeworld_login_log ( t_login_log_id, t_login_log_name, t_login_log_time, t_login_log_location, t_login_log_ip, t_login_log_system, t_login_log_browser ) values ( 695562, '1111', '2020-10-16T17:40:26.373+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Windows 10', 'Chrome 78' );;
2020-10-16 17:40:26 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 17:40:26 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 974198, NULL, '用户登录', 191, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6c39583c] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@6873949f', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:40:26.379+0800' );;
2020-10-16 17:40:26 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:40:26 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:40:26 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:40:26 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:40:26 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:40:26 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:40:26 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:40:26 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 359079, '1111', '获取用户信息', 13, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODg0NDI2LCJjcmVhdGVkIjoxNjAyODQxMjI2MzY4LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.HDvPmCx19yL-kbhoOvLCDJ5PApaM_d1fL9siqY7GGj4dqNQQDznngxjBE1Pls5bwwxl73QwKjSBZITUHAsuhRQ) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6b6c5cb3] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@67e5466e', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:40:26.422+0800' );;
2020-10-16 17:40:26 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 17:40:26 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:40:26 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 17:40:26 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 617814, '1111', '获取全部用户数量', 3, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:40:26.610+0800' );;
2020-10-16 17:40:56 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 6860 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-10-16 17:40:56 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-10-16 17:40:58 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-10-16 17:40:58 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-10-16 17:40:59 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 278ms. Found 0 Redis repository interfaces.
2020-10-16 17:41:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 17:41:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$1] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 17:41:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 17:41:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 17:41:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@238291d4' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 17:41:00 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-10-16 17:41:00 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-10-16 17:41:00 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-10-16 17:41:00 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-10-16 17:41:00 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-10-16 17:41:01 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-10-16 17:41:01 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 4583 ms
2020-10-16 17:41:01 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-10-16 17:41:01 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-10-16 17:41:02 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-10-16 17:41:02 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-10-16 17:41:02 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-10-16 17:41:02 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-10-16 17:41:02 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-10-16 17:41:02 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-10-16 17:41:02 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-10-16 17:41:03 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-10-16 17:41:03 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-10-16 17:41:03 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-10-16 17:41:03 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-10-16 17:41:03 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-10-16 17:41:03 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51602841263575'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-10-16 17:41:03 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-10-16 17:41:03 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-10-16 17:41:03 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@2270f58d
2020-10-16 17:41:03 INFO  main p6spy 2020-10-16 17:41:03 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-10-16 17:41:05 INFO  main org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver Exposing 2 endpoint(s) beneath base path '/actuator'
2020-10-16 17:41:05 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@4b3eaf39, org.springframework.security.web.context.SecurityContextPersistenceFilter@e98adb2, org.springframework.security.web.header.HeaderWriterFilter@20fdaf3e, org.springframework.web.filter.CorsFilter@41ece227, org.springframework.security.web.authentication.logout.LogoutFilter@1e9a10e9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@1cb73a92, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@6afb240d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@d6879bf, org.springframework.security.web.session.SessionManagementFilter@10664c3d, org.springframework.security.web.access.ExceptionTranslationFilter@7ec176da, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4c1fed69]
2020-10-16 17:41:05 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-10-16 17:41:05 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-10-16 17:41:06 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-10-16 17:41:06 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-10-16 17:41:06 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-10-16 17:41:06 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-10-16 17:41:06 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-10-16 17:41:06 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-10-16 17:41:06 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 11.882 seconds (JVM running for 19.146)
2020-10-16 17:41:06 INFO  RMI TCP Connection(1)-192.168.137.1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-10-16 17:41:06 INFO  RMI TCP Connection(1)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-10-16 17:41:06 INFO  RMI TCP Connection(1)-192.168.137.1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 18 ms
2020-10-16 17:41:07 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-10-16 17:41:07 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-10-16 17:41:07 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51602839520039"'s failed in-progress jobs.
2020-10-16 17:41:07 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51602841263575 started.
2020-10-16 17:41:50 INFO  http-nio-8888-exec-2 org.apache.tomcat.util.http.parser.Cookie A cookie header was received [1579774133; __utma=111872281.831053985.1582861814.1582875770.1584267755.5; Idea-aafc89f7=a7b3efd7-3315-46db-8387-b3eb7ff7bbf7; Hm_lvt_d97abf6d61c21d773f97835defbdef4e=1594809530; Webstorm-5dc33a3f=3e27dac4-926d-43b5-b044-1c33978c0955; JSESSIONID=6C0C82F9DFE56B60E59659EA6B08B786; Admin-Token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODg0NDI2LCJjcmVhdGVkIjoxNjAyODQxMjI2MzY4LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.HDvPmCx19yL-kbhoOvLCDJ5PApaM_d1fL9siqY7GGj4dqNQQDznngxjBE1Pls5bwwxl73QwKjSBZITUHAsuhRQ] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-10-16 17:41:53 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:41:53 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:41:53 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:41:53 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:41:53 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:41:53 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:41:53 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:41:53 | 耗时 10 ms | SQL 语句：
insert into codeworld_login_log ( t_login_log_id, t_login_log_name, t_login_log_time, t_login_log_location, t_login_log_ip, t_login_log_system, t_login_log_browser ) values ( 366483, '1111', '2020-10-16T17:41:53.800+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Windows 10', 'Chrome 78' );;
2020-10-16 17:41:53 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:41:53 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 785019, NULL, '用户登录', 331, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@193149c8] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@73a88273', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:41:53.833+0800' );;
2020-10-16 17:41:53 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 17:41:53 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:41:53 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 17:41:53 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:41:53 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 17:41:53 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:41:53 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 17:41:53 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 164122, '1111', '获取用户信息', 66, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODg0NTEzLCJjcmVhdGVkIjoxNjAyODQxMzEzNzYwLCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.d4GR8WDyg7fm1pX_J9949HwLVQC5y_NG1OZv49NJQwhk34l_y77ThcDkpIH0OwqX5WtUyv3C3YsSpkU1tI1wFg) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@5a9bab33] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@34f286b3', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:41:53.924+0800' );;
2020-10-16 17:41:54 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 17:41:54 | 耗时 1 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:41:54 INFO  http-nio-8888-exec-9 p6spy 2020-10-16 17:41:54 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 883812, '1111', '获取全部用户数量', 6, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:41:54.041+0800' );;
2020-10-16 17:41:54 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 17:41:54 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 876265, '1111', '获取在线用户数量', 13, '/system-monitor/get-active-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:41:54.048+0800' );;
2020-10-16 17:42:01 INFO  http-nio-8888-exec-1 p6spy 2020-10-16 17:42:01 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 27821, '1111', '查询请求', 22, '/system-monitor/get-http-trace', ' httpTraceSearchVO: HttpTraceSearchVO(url=null, method=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:42:01.804+0800' );;
2020-10-16 17:42:02 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 17:42:02 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_login_log;
2020-10-16 17:42:02 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 17:42:02 | 耗时 0 ms | SQL 语句：
select * from codeworld_login_log order by t_login_log_time DESC LIMIT 10 ;
2020-10-16 17:42:02 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 17:42:02 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 498120, '1111', '获取登录日志', 44, '/system-login-log/get-all-login-log', ' loginLogSearchVO: LoginLogSearchVO(loginLogName=null, startTime=null, endTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:42:02.871+0800' );;
2020-10-16 17:42:40 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 17:42:40 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:42:40 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 17:42:40 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:42:40 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 17:42:40 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:42:40 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 17:42:40 | 耗时 1 ms | SQL 语句：
insert into codeworld_login_log ( t_login_log_id, t_login_log_name, t_login_log_time, t_login_log_location, t_login_log_ip, t_login_log_system, t_login_log_browser ) values ( 526491, '1111', '2020-10-16T17:42:40.235+0800', '内网IP|0|0|内网IP|内网IP', '127.0.0.1', 'Windows 10', 'Firefox 80' );;
2020-10-16 17:42:40 INFO  http-nio-8888-exec-5 p6spy 2020-10-16 17:42:40 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 311169, NULL, '用户登录', 161, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6fa5f887] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@54d9b036', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:42:40.240+0800' );;
2020-10-16 17:42:40 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 17:42:40 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:42:40 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 17:42:40 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:42:40 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 17:42:40 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:42:40 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 17:42:40 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 466058, '1111', '获取用户信息', 11, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODg0NTYwLCJjcmVhdGVkIjoxNjAyODQxMzYwMjM0LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.THuVtgLFfM4Mtl_Uymhi6DkfErRnWyyk_CbzvLIl1y3P609EgGvPPTo6cn1MaNikIwQJhJtbw-PoOOtqdp13EA) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@58a5f8bf] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@7aed45c3', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:42:40.273+0800' );;
2020-10-16 17:42:40 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 17:42:40 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:42:40 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 17:42:40 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 423363, '1111', '获取全部用户数量', 4, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:42:40.474+0800' );;
2020-10-16 17:42:40 INFO  http-nio-8888-exec-1 p6spy 2020-10-16 17:42:40 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 977446, '1111', '获取在线用户数量', 1, '/system-monitor/get-active-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:42:40.476+0800' );;
2020-10-16 17:42:54 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:42:54 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 296984, '1111', '退出登录', 2, '/system-user/user-login-out', ' userLoginOutRequest: UserLoginOutRequest(token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODg0NTYwLCJjcmVhdGVkIjoxNjAyODQxMzYwMjM0LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.THuVtgLFfM4Mtl_Uymhi6DkfErRnWyyk_CbzvLIl1y3P609EgGvPPTo6cn1MaNikIwQJhJtbw-PoOOtqdp13EA)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:42:54.630+0800' );;
2020-10-16 17:42:59 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 17:42:59 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:42:59 INFO  http-nio-8888-exec-10 p6spy 2020-10-16 17:42:59 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 975747, '1111', '获取在线用户数量', 2, '/system-monitor/get-active-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:42:59.331+0800' );;
2020-10-16 17:42:59 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 17:42:59 | 耗时 8 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 734625, '1111', '获取全部用户数量', 4, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:42:59.334+0800' );;
2020-10-16 17:43:01 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:43:01 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name,u.t_user_status from codeworld_user u where t_user_name = '1111';
2020-10-16 17:43:01 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:43:01 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-10-16 17:43:01 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:43:01 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-10-16 17:43:01 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:43:01 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 363943, '1111', '获取用户信息', 12, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAyODg0NTEzLCJjcmVhdGVkIjoxNjAyODQxMzEzNzYwLCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5IjoiZGVwdCJ9LHsiYXV0aG9yaXR5IjoiaHR0cCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6ImxvZ2luLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9naW4tbG9nOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InN5c3RlbU1vbml0b3IifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.d4GR8WDyg7fm1pX_J9949HwLVQC5y_NG1OZv49NJQwhk34l_y77ThcDkpIH0OwqX5WtUyv3C3YsSpkU1tI1wFg) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6f2ae487] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@7f1a4080', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:43:01.350+0800' );;
2020-10-16 17:43:01 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 17:43:01 | 耗时 0 ms | SQL 语句：
select count(t_user_id) from codeworld_user;
2020-10-16 17:43:01 INFO  http-nio-8888-exec-4 p6spy 2020-10-16 17:43:01 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 473488, '1111', '获取在线用户数量', 1, '/system-monitor/get-active-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:43:01.468+0800' );;
2020-10-16 17:43:01 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 17:43:01 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 79803, '1111', '获取全部用户数量', 3, '/system-user/get-all-user-count', '', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:43:01.469+0800' );;
2020-10-16 17:43:08 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:43:08 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_login_log;
2020-10-16 17:43:08 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:43:08 | 耗时 0 ms | SQL 语句：
select * from codeworld_login_log order by t_login_log_time DESC LIMIT 10 ;
2020-10-16 17:43:08 INFO  http-nio-8888-exec-6 p6spy 2020-10-16 17:43:08 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 980419, '1111', '获取登录日志', 5, '/system-login-log/get-all-login-log', ' loginLogSearchVO: LoginLogSearchVO(loginLogName=null, startTime=null, endTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:43:08.838+0800' );;
2020-10-16 17:43:11 INFO  http-nio-8888-exec-7 p6spy 2020-10-16 17:43:11 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 191741, '1111', '查询请求', 1, '/system-monitor/get-http-trace', ' httpTraceSearchVO: HttpTraceSearchVO(url=null, method=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:43:11.349+0800' );;
2020-10-16 17:43:18 INFO  http-nio-8888-exec-8 p6spy 2020-10-16 17:43:18 | 耗时 12 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 741844, '1111', '查询请求', 1, '/system-monitor/get-http-trace', ' httpTraceSearchVO: HttpTraceSearchVO(url=null, method=get)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:43:18.663+0800' );;
2020-10-16 17:43:24 INFO  http-nio-8888-exec-2 p6spy 2020-10-16 17:43:24 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 168931, '1111', '查询请求', 2, '/system-monitor/get-http-trace', ' httpTraceSearchVO: HttpTraceSearchVO(url=null, method=post)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:43:24.937+0800' );;
2020-10-16 17:43:36 INFO  http-nio-8888-exec-3 p6spy 2020-10-16 17:43:36 | 耗时 13 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 817296, '1111', '查询请求', 1, '/system-monitor/get-http-trace', ' httpTraceSearchVO: HttpTraceSearchVO(url=null, method=get)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-10-16T17:43:36.685+0800' );;
