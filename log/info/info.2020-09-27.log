2020-09-27 14:27:44 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 2300 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-09-27 14:27:44 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-09-27 14:27:47 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-27 14:27:47 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 14:27:48 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 310ms. Found 0 Redis repository interfaces.
2020-09-27 14:27:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:27:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$bd4d77ae] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:27:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:27:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:27:50 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@13ac6bb4' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:27:50 INFO  main org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener 

Error starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.
2020-09-27 14:28:52 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 21336 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-09-27 14:28:52 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-09-27 14:28:55 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-27 14:28:55 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 14:28:55 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 245ms. Found 0 Redis repository interfaces.
2020-09-27 14:28:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:28:56 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$868fca3e] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:28:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:28:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:28:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@39b2e7ee' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:28:57 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:28:57 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-09-27 14:28:57 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-09-27 14:28:57 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-09-27 14:28:57 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-27 14:28:58 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-09-27 14:28:58 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 5406 ms
2020-09-27 14:28:58 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-09-27 14:28:58 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-09-27 14:28:59 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-09-27 14:28:59 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-09-27 14:28:59 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-09-27 14:28:59 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-09-27 14:28:59 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-09-27 14:28:59 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-09-27 14:28:59 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-09-27 14:29:00 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-09-27 14:29:00 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-09-27 14:29:00 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-09-27 14:29:00 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-09-27 14:29:00 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-09-27 14:29:00 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51601188140441'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-09-27 14:29:00 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-09-27 14:29:00 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-09-27 14:29:00 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@59ace703
2020-09-27 14:29:00 INFO  main p6spy 2020-09-27 14:29:00 | 耗时 3 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-09-27 14:29:02 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@68d02d94, org.springframework.security.web.context.SecurityContextPersistenceFilter@3908f6c4, org.springframework.security.web.header.HeaderWriterFilter@6699b433, org.springframework.web.filter.CorsFilter@5154d07f, org.springframework.security.web.authentication.logout.LogoutFilter@5cbfd4c7, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@78a71a46, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1d6ab4ad, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@f6cf5d0, org.springframework.security.web.session.SessionManagementFilter@43026114, org.springframework.security.web.access.ExceptionTranslationFilter@3585cdd8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@145c936a]
2020-09-27 14:29:03 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-09-27 14:29:03 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-09-27 14:29:03 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-09-27 14:29:03 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-09-27 14:29:03 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-09-27 14:29:03 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-09-27 14:29:03 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-09-27 14:29:04 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-09-27 14:29:04 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 13.798 seconds (JVM running for 20.902)
2020-09-27 14:29:05 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-09-27 14:29:05 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-09-27 14:29:05 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51601006141692"'s failed in-progress jobs.
2020-09-27 14:29:05 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51601188140441 started.
2020-09-27 14:29:47 INFO  http-nio-8888-exec-2 org.apache.tomcat.util.http.parser.Cookie A cookie header was received [1579774133; __utma=111872281.831053985.1582861814.1582875770.1584267755.5; Idea-aafc89f7=a7b3efd7-3315-46db-8387-b3eb7ff7bbf7; Hm_lvt_d97abf6d61c21d773f97835defbdef4e=1594809530; Webstorm-5dc33a3f=3e27dac4-926d-43b5-b044-1c33978c0955] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-09-27 14:29:47 INFO  http-nio-8888-exec-3 org.apache.tomcat.util.http.parser.Cookie A cookie header was received [1579774133; __utma=111872281.831053985.1582861814.1582875770.1584267755.5; Idea-aafc89f7=a7b3efd7-3315-46db-8387-b3eb7ff7bbf7; Hm_lvt_d97abf6d61c21d773f97835defbdef4e=1594809530; Webstorm-5dc33a3f=3e27dac4-926d-43b5-b044-1c33978c0955] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-09-27 14:29:47 INFO  http-nio-8888-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-27 14:29:47 INFO  http-nio-8888-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-09-27 14:29:47 INFO  http-nio-8888-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 11 ms
2020-09-27 14:31:54 INFO  http-nio-8888-exec-8 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 14:31:55 INFO  http-nio-8888-exec-8 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 188ms. Found 0 Redis repository interfaces.
2020-09-27 14:32:12 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 12116 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-09-27 14:32:12 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-09-27 14:32:15 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-27 14:32:15 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 14:32:15 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 234ms. Found 0 Redis repository interfaces.
2020-09-27 14:32:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:32:16 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$cf7eed3f] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:32:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:32:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:32:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@7e32407a' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:32:17 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:32:17 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-09-27 14:32:17 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-09-27 14:32:17 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-09-27 14:32:17 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-27 14:32:18 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-09-27 14:32:18 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 5238 ms
2020-09-27 14:32:18 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-09-27 14:32:18 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-09-27 14:32:19 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-09-27 14:32:19 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-09-27 14:32:19 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-09-27 14:32:19 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-09-27 14:32:19 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-09-27 14:32:19 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-09-27 14:32:19 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-09-27 14:32:20 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-09-27 14:32:20 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-09-27 14:32:20 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-09-27 14:32:20 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-09-27 14:32:20 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-09-27 14:32:20 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51601188340221'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-09-27 14:32:20 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-09-27 14:32:20 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-09-27 14:32:20 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@7b1f0b38
2020-09-27 14:32:20 INFO  main p6spy 2020-09-27 14:32:20 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-09-27 14:32:22 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@51ccf9d1, org.springframework.security.web.context.SecurityContextPersistenceFilter@3d321184, org.springframework.security.web.header.HeaderWriterFilter@34762647, org.springframework.web.filter.CorsFilter@3dfd110d, org.springframework.security.web.authentication.logout.LogoutFilter@a8db1cd, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@77359a52, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@594bac37, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@5a925521, org.springframework.security.web.session.SessionManagementFilter@4970f72a, org.springframework.security.web.access.ExceptionTranslationFilter@73558b05, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@50c777ce]
2020-09-27 14:32:22 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-09-27 14:32:23 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-09-27 14:32:23 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-09-27 14:32:23 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-09-27 14:32:23 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-09-27 14:32:23 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-09-27 14:32:23 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-09-27 14:32:24 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-09-27 14:32:24 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 13.559 seconds (JVM running for 23.153)
2020-09-27 14:32:25 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-09-27 14:32:25 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-09-27 14:32:25 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51601188140441"'s failed in-progress jobs.
2020-09-27 14:32:25 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51601188340221 started.
2020-09-27 14:32:30 INFO  http-nio-8888-exec-1 org.apache.tomcat.util.http.parser.Cookie A cookie header was received [1579774133; __utma=111872281.831053985.1582861814.1582875770.1584267755.5; Idea-aafc89f7=a7b3efd7-3315-46db-8387-b3eb7ff7bbf7; Hm_lvt_d97abf6d61c21d773f97835defbdef4e=1594809530; Webstorm-5dc33a3f=3e27dac4-926d-43b5-b044-1c33978c0955; JSESSIONID=242BD74649CB342E4A3716AEC155EEFD] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-09-27 14:32:30 INFO  http-nio-8888-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-27 14:32:30 INFO  http-nio-8888-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-09-27 14:32:30 INFO  http-nio-8888-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 25 ms
2020-09-27 14:32:51 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 14:32:51 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = 'admin';
2020-09-27 14:33:17 INFO  http-nio-8888-exec-8 p6spy 2020-09-27 14:33:17 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 14:33:17 INFO  http-nio-8888-exec-8 p6spy 2020-09-27 14:33:17 | 耗时 1 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 14:33:17 INFO  http-nio-8888-exec-8 p6spy 2020-09-27 14:33:17 | 耗时 1 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 14:33:17 INFO  http-nio-8888-exec-8 com.codeworld.fc.common.authority.UserDetailServiceImpl 用户权限：[systemJob, role, user:delete, user:add, log, roleSetting, systemManage, menu:edit, menu, job-log, role:add, menu:add, user:edit, user:enable, chat, role:edit, systemLog, role:delete, menu:delete, job, user]
2020-09-27 14:33:17 INFO  http-nio-8888-exec-8 p6spy 2020-09-27 14:33:17 | 耗时 9 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 450208, NULL, '用户登录', 418, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123, token=string) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@10af2e6a] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@59e45c55', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T14:33:17.557+0800' );;
2020-09-27 14:37:50 INFO  http-nio-8888-exec-9 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 14:37:50 INFO  http-nio-8888-exec-9 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 279ms. Found 0 Redis repository interfaces.
2020-09-27 14:37:52 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-09-27 14:37:52 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: addJobUsingPOST_1
2020-09-27 14:37:52 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: deleteJobUsingPOST_1
2020-09-27 14:37:52 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getAllJobUsingPOST_1
2020-09-27 14:37:52 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: updateJobStatusUsingPOST_1
2020-09-27 14:37:52 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getAllJobLogUsingPOST_1
2020-09-27 14:37:52 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getAllLogUsingPOST_1
2020-09-27 14:37:52 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: loginUsingPOST_1
2020-09-27 14:37:53 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: addMenuUsingPOST_1
2020-09-27 14:37:53 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: deleteMenuUsingPOST_1
2020-09-27 14:37:53 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: treeMenuUsingPOST_1
2020-09-27 14:37:53 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: updateMenuUsingPOST_1
2020-09-27 14:37:53 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: addRoleUsingPOST_1
2020-09-27 14:37:53 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: addRoleMenuUsingPOST_1
2020-09-27 14:37:53 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: deleteRoleUsingPOST_1
2020-09-27 14:37:53 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getAllRoleUsingPOST_1
2020-09-27 14:37:53 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getAllRoleNoParamUsingPOST_1
2020-09-27 14:37:53 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getRoleMenuUsingPOST_1
2020-09-27 14:37:53 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: updateRoleUsingPOST_1
2020-09-27 14:37:53 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: addUserUsingPOST_1
2020-09-27 14:37:53 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: deleteUserUsingPOST_1
2020-09-27 14:37:53 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getAllUserUsingPOST_1
2020-09-27 14:37:53 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getUserByNameUsingGET_1
2020-09-27 14:37:53 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getUserInfoUsingPOST_1
2020-09-27 14:37:53 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: updateUserUsingPOST_1
2020-09-27 14:37:53 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: updateUserStatusUsingPOST_1
2020-09-27 14:38:04 INFO  http-nio-8888-exec-8 p6spy 2020-09-27 14:38:04 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 14:38:04 INFO  http-nio-8888-exec-8 p6spy 2020-09-27 14:38:04 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 14:38:04 INFO  http-nio-8888-exec-8 p6spy 2020-09-27 14:38:04 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 14:38:04 INFO  http-nio-8888-exec-8 com.codeworld.fc.common.authority.UserDetailServiceImpl 用户权限：[systemJob, role, user:delete, user:add, log, roleSetting, systemManage, menu:edit, menu, job-log, role:add, menu:add, user:edit, user:enable, chat, role:edit, systemLog, role:delete, menu:delete, job, user]
2020-09-27 14:38:04 INFO  http-nio-8888-exec-8 p6spy 2020-09-27 14:38:04 | 耗时 12 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 155701, NULL, '用户登录', 172, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123, token=string) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@3e37473e] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@39b7cc60', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T14:38:04.512+0800' );;
2020-09-27 14:38:50 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 14:38:50 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_log;
2020-09-27 14:38:50 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 14:38:50 | 耗时 4 ms | SQL 语句：
select * from codeworld_log order by t_log_create_Time DESC;
2020-09-27 14:38:50 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 14:38:50 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 581138, NULL, '获取全部日志', 207, '/system-log/get-all-log', ' logSearchVO: LogSearchVO(page=0, limit=0)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T14:38:50.940+0800' );;
2020-09-27 14:41:13 INFO  http-nio-8888-exec-1 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 14:41:13 INFO  http-nio-8888-exec-1 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 242ms. Found 0 Redis repository interfaces.
2020-09-27 14:41:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: addJobUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: deleteJobUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getAllJobUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: updateJobStatusUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getAllJobLogUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getAllLogUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: loginUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: addMenuUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: deleteMenuUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: treeMenuUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: updateMenuUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: addRoleUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: addRoleMenuUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: deleteRoleUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getAllRoleUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getAllRoleNoParamUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getRoleMenuUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: updateRoleUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: addUserUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: deleteUserUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getAllUserUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getUserByNameUsingGET_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getUserInfoUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: updateUserUsingPOST_2
2020-09-27 14:41:15 INFO  http-nio-8888-exec-9 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: updateUserStatusUsingPOST_2
2020-09-27 14:41:48 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 18796 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-09-27 14:41:48 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-09-27 14:41:51 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-27 14:41:51 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 14:41:51 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 228ms. Found 0 Redis repository interfaces.
2020-09-27 14:41:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:41:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$45065632] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:41:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:41:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:41:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4bee80f3' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:41:53 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:41:53 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-09-27 14:41:53 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-09-27 14:41:53 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-09-27 14:41:53 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-27 14:41:54 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-09-27 14:41:54 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 5390 ms
2020-09-27 14:41:54 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-09-27 14:41:54 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-09-27 14:41:54 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-09-27 14:41:54 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-09-27 14:41:54 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-09-27 14:41:54 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-09-27 14:41:54 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-09-27 14:41:54 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-09-27 14:41:54 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-09-27 14:41:56 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-09-27 14:41:56 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-09-27 14:41:56 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-09-27 14:41:56 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-09-27 14:41:56 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-09-27 14:41:56 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51601188916076'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-09-27 14:41:56 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-09-27 14:41:56 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-09-27 14:41:56 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@e337503
2020-09-27 14:41:56 INFO  main p6spy 2020-09-27 14:41:56 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-09-27 14:41:58 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@5d75a76d, org.springframework.security.web.context.SecurityContextPersistenceFilter@32bd3f7f, org.springframework.security.web.header.HeaderWriterFilter@7f0e8367, org.springframework.web.filter.CorsFilter@8691210, org.springframework.security.web.authentication.logout.LogoutFilter@1ffd1fbc, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3c65307c, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1e36ad2b, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@79c6c14c, org.springframework.security.web.session.SessionManagementFilter@f36702e, org.springframework.security.web.access.ExceptionTranslationFilter@638effdf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@5533f69c]
2020-09-27 14:41:58 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-09-27 14:41:58 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-09-27 14:41:58 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-09-27 14:41:59 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-09-27 14:41:59 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-09-27 14:41:59 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-09-27 14:41:59 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-09-27 14:41:59 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-09-27 14:41:59 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 12.711 seconds (JVM running for 21.842)
2020-09-27 14:42:00 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-09-27 14:42:00 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-09-27 14:42:00 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51601188340221"'s failed in-progress jobs.
2020-09-27 14:42:00 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51601188916076 started.
2020-09-27 14:42:34 INFO  http-nio-8888-exec-1 org.apache.tomcat.util.http.parser.Cookie A cookie header was received [1579774133; __utma=111872281.831053985.1582861814.1582875770.1584267755.5; Idea-aafc89f7=a7b3efd7-3315-46db-8387-b3eb7ff7bbf7; Hm_lvt_d97abf6d61c21d773f97835defbdef4e=1594809530; Webstorm-5dc33a3f=3e27dac4-926d-43b5-b044-1c33978c0955; JSESSIONID=5E3FDE8D94C086D3C521692A17BD02DB] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-09-27 14:42:34 INFO  http-nio-8888-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-27 14:42:34 INFO  http-nio-8888-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-09-27 14:42:34 INFO  http-nio-8888-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 14 ms
2020-09-27 14:46:00 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 18208 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-09-27 14:46:00 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-09-27 14:46:03 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-27 14:46:03 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 14:46:03 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 304ms. Found 0 Redis repository interfaces.
2020-09-27 14:46:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:46:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$eab51417] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:46:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:46:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:46:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@4f435109' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:46:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 14:46:06 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-09-27 14:46:06 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-09-27 14:46:06 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-09-27 14:46:06 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-27 14:46:06 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-09-27 14:46:06 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 5702 ms
2020-09-27 14:46:06 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-09-27 14:46:06 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-09-27 14:46:07 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-09-27 14:46:07 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-09-27 14:46:07 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-09-27 14:46:07 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-09-27 14:46:07 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-09-27 14:46:07 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-09-27 14:46:07 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-09-27 14:46:08 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-09-27 14:46:08 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-09-27 14:46:08 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-09-27 14:46:08 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-09-27 14:46:08 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-09-27 14:46:08 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51601189168598'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-09-27 14:46:08 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-09-27 14:46:08 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-09-27 14:46:08 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@73104a12
2020-09-27 14:46:09 INFO  main p6spy 2020-09-27 14:46:08 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-09-27 14:46:10 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@1020248c, org.springframework.security.web.context.SecurityContextPersistenceFilter@5d93dcf1, org.springframework.security.web.header.HeaderWriterFilter@296ea89, org.springframework.web.filter.CorsFilter@1a7fe90b, org.springframework.security.web.authentication.logout.LogoutFilter@6ef774ea, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@113c96b5, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@76334c3, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@23b2355e, org.springframework.security.web.session.SessionManagementFilter@63ccf86b, org.springframework.security.web.access.ExceptionTranslationFilter@375b2d37, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7e0a6cd]
2020-09-27 14:46:10 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-09-27 14:46:11 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-09-27 14:46:11 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-09-27 14:46:11 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-09-27 14:46:11 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-09-27 14:46:11 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-09-27 14:46:11 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-09-27 14:46:12 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-09-27 14:46:12 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 13.749 seconds (JVM running for 20.789)
2020-09-27 14:46:13 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-09-27 14:46:13 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-09-27 14:46:13 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51601188916076"'s failed in-progress jobs.
2020-09-27 14:46:13 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51601189168598 started.
2020-09-27 14:46:20 INFO  http-nio-8888-exec-1 org.apache.tomcat.util.http.parser.Cookie A cookie header was received [1579774133; __utma=111872281.831053985.1582861814.1582875770.1584267755.5; Idea-aafc89f7=a7b3efd7-3315-46db-8387-b3eb7ff7bbf7; Hm_lvt_d97abf6d61c21d773f97835defbdef4e=1594809530; Webstorm-5dc33a3f=3e27dac4-926d-43b5-b044-1c33978c0955; JSESSIONID=9C83218861C0BE21250AD7CA6E2A067D] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-09-27 14:46:20 INFO  http-nio-8888-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-27 14:46:20 INFO  http-nio-8888-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-09-27 14:46:20 INFO  http-nio-8888-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 13 ms
2020-09-27 14:46:46 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 14:46:46 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = 'string';
2020-09-27 14:46:56 INFO  http-nio-8888-exec-1 p6spy 2020-09-27 14:46:56 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 14:46:56 INFO  http-nio-8888-exec-1 p6spy 2020-09-27 14:46:56 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 14:46:56 INFO  http-nio-8888-exec-1 p6spy 2020-09-27 14:46:56 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 14:46:56 INFO  http-nio-8888-exec-1 com.codeworld.fc.common.authority.UserDetailServiceImpl 用户权限：[systemJob, role, user:delete, user:add, log, roleSetting, systemManage, menu:edit, menu, job-log, role:add, menu:add, user:edit, user:enable, chat, role:edit, systemLog, role:delete, menu:delete, job, user]
2020-09-27 14:46:56 INFO  http-nio-8888-exec-1 p6spy 2020-09-27 14:46:56 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 269516, NULL, '用户登录', 238, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123, token=string) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@ac06a6c] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@e741fd3', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T14:46:56.851+0800' );;
2020-09-27 14:47:15 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 14:47:15 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_log;
2020-09-27 14:47:15 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 14:47:15 | 耗时 1 ms | SQL 语句：
select * from codeworld_log order by t_log_create_Time DESC;
2020-09-27 14:47:15 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 14:47:15 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 706813, NULL, '获取全部日志', 134, '/system-log/get-all-log', ' logSearchVO: LogSearchVO(page=0, limit=0)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T14:47:15.624+0800' );;
2020-09-27 14:47:36 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 14:47:36 | 耗时 0 ms | SQL 语句：
select count(0) from (select * from codeworld_role WHERE t_role_name like "%"'string'"%" order by t_create_time DESC) tmp_count;
2020-09-27 14:49:15 INFO  http-nio-8888-exec-10 p6spy 2020-09-27 14:49:15 | 耗时 0 ms | SQL 语句：
select * from codeworld_role_menu where t_role_id = 1;
2020-09-27 14:50:52 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 14:50:52 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_log;
2020-09-27 14:50:52 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 14:50:52 | 耗时 1 ms | SQL 语句：
select * from codeworld_log order by t_log_create_Time DESC;
2020-09-27 14:50:52 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 14:50:52 | 耗时 12 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 302473, NULL, '获取全部日志', 22, '/system-log/get-all-log', ' logSearchVO: LogSearchVO(page=0, limit=0)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T14:50:52.274+0800' );;
2020-09-27 14:51:12 INFO  http-nio-8888-exec-4 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 14:51:12 INFO  http-nio-8888-exec-4 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 242ms. Found 0 Redis repository interfaces.
2020-09-27 14:51:13 INFO  http-nio-8888-exec-4 springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: addJobUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: deleteJobUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getAllJobUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: updateJobStatusUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getAllJobLogUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getAllLogUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: loginUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: addMenuUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: deleteMenuUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: treeMenuUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: updateMenuUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: addRoleUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: addRoleMenuUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: deleteRoleUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getAllRoleUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getAllRoleNoParamUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getRoleMenuUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: updateRoleUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: addUserUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: deleteUserUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getAllUserUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getUserByNameUsingGET_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: getUserInfoUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: updateUserUsingPOST_1
2020-09-27 14:51:14 INFO  http-nio-8888-exec-1 springfox.documentation.spring.web.readers.operation.CachingOperationNameGenerator Generating unique operation named: updateUserStatusUsingPOST_1
2020-09-27 14:51:20 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 14:51:20 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_log;
2020-09-27 14:51:20 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 14:51:20 | 耗时 3 ms | SQL 语句：
select * from codeworld_log order by t_log_create_Time DESC;
2020-09-27 14:51:20 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 14:51:20 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 50255, NULL, '获取全部日志', 45, '/system-log/get-all-log', ' logSearchVO: LogSearchVO(page=0, limit=0)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T14:51:20.484+0800' );;
2020-09-27 14:51:33 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 14:51:33 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_log;
2020-09-27 14:51:33 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 14:51:33 | 耗时 1 ms | SQL 语句：
select * from codeworld_log order by t_log_create_Time DESC;
2020-09-27 14:51:33 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 14:51:33 | 耗时 12 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 55417, NULL, '获取全部日志', 27, '/system-log/get-all-log', ' logSearchVO: LogSearchVO(page=0, limit=0)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T14:51:33.199+0800' );;
2020-09-27 14:53:36 INFO  http-nio-8888-exec-2 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 14:53:36 INFO  http-nio-8888-exec-2 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 287ms. Found 0 Redis repository interfaces.
2020-09-27 14:53:37 INFO  http-nio-8888-exec-5 springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-09-27 14:53:37 INFO  http-nio-8888-exec-5 p6spy 2020-09-27 14:53:37 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = 'admin';
2020-09-27 14:53:43 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 14:53:43 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 14:53:43 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 14:53:43 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 14:53:43 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 14:53:43 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 14:53:43 INFO  http-nio-8888-exec-9 com.codeworld.fc.common.authority.UserDetailServiceImpl 用户权限：[systemJob, role, user:delete, user:add, log, roleSetting, systemManage, menu:edit, menu, job-log, role:add, menu:add, user:edit, user:enable, chat, role:edit, systemLog, role:delete, menu:delete, job, user]
2020-09-27 14:54:20 INFO  http-nio-8888-exec-6 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 14:54:20 INFO  http-nio-8888-exec-6 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 119ms. Found 0 Redis repository interfaces.
2020-09-27 14:54:20 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 14:54:20 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 14:54:20 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 14:54:20 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 14:54:20 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 14:54:20 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 14:54:20 INFO  http-nio-8888-exec-7 com.codeworld.fc.common.authority.UserDetailServiceImpl 用户权限：[systemJob, role, user:delete, user:add, log, roleSetting, systemManage, menu:edit, menu, job-log, role:add, menu:add, user:edit, user:enable, chat, role:edit, systemLog, role:delete, menu:delete, job, user]
2020-09-27 14:54:20 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 14:54:20 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 366755, NULL, '用户登录', 192, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@206f8533] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@6e4a4616', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T14:54:20.739+0800' );;
2020-09-27 14:56:48 INFO  http-nio-8888-exec-3 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 14:56:48 INFO  http-nio-8888-exec-3 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 154ms. Found 0 Redis repository interfaces.
2020-09-27 14:56:48 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 14:56:48 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 14:56:48 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 14:56:48 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 14:56:48 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 14:56:48 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 14:56:48 INFO  http-nio-8888-exec-2 com.codeworld.fc.common.authority.UserDetailServiceImpl 用户权限：[systemJob, role, user:delete, user:add, log, roleSetting, systemManage, menu:edit, menu, job-log, role:add, menu:add, user:edit, user:enable, chat, role:edit, systemLog, role:delete, menu:delete, job, user]
2020-09-27 14:56:49 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 14:56:49 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 984369, NULL, '用户登录', 168, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@26586d64] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@38eb2d46', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T14:56:49.122+0800' );;
2020-09-27 14:56:49 INFO  http-nio-8888-exec-10 p6spy 2020-09-27 14:56:49 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = NULL;
2020-09-27 14:56:49 INFO  http-nio-8888-exec-10 p6spy 2020-09-27 14:56:49 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 975595, NULL, '获取用户信息', 192, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJBVVRIT1JJVElFUyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6Im1lbnUifSx7ImF1dGhvcml0eSI6Im1lbnU6YWRkIn0seyJhdXRob3JpdHkiOiJtZW51OmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlIn0seyJhdXRob3JpdHkiOiJyb2xlOmFkZCJ9LHsiYXV0aG9yaXR5Ijoicm9sZTpkZWxldGUifSx7ImF1dGhvcml0eSI6InJvbGU6ZWRpdCJ9LHsiYXV0aG9yaXR5Ijoicm9sZVNldHRpbmcifSx7ImF1dGhvcml0eSI6InN5c3RlbUpvYiJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtTG9nIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XSwiZXhwIjoxNjAxMTg5ODEyLCJjcmVhdGVkIjoxNjAxMTg5ODA5MTA3LCJ1c2VybmFtZSI6eyJwYXNzd29yZCI6bnVsbCwidXNlcm5hbWUiOiIxMTExIiwiYXV0aG9yaXRpZXMiOlt7ImF1dGhvcml0eSI6ImNoYXQifSx7ImF1dGhvcml0eSI6ImpvYiJ9LHsiYXV0aG9yaXR5Ijoiam9iLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9nIn0seyJhdXRob3JpdHkiOiJtZW51In0seyJhdXRob3JpdHkiOiJtZW51OmFkZCJ9LHsiYXV0aG9yaXR5IjoibWVudTpkZWxldGUifSx7ImF1dGhvcml0eSI6Im1lbnU6ZWRpdCJ9LHsiYXV0aG9yaXR5Ijoicm9sZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTphZGQifSx7ImF1dGhvcml0eSI6InJvbGU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJyb2xlOmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGVTZXR0aW5nIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1Kb2IifSx7ImF1dGhvcml0eSI6InN5c3RlbUxvZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtTWFuYWdlIn0seyJhdXRob3JpdHkiOiJ1c2VyIn0seyJhdXRob3JpdHkiOiJ1c2VyOmFkZCJ9LHsiYXV0aG9yaXR5IjoidXNlcjpkZWxldGUifSx7ImF1dGhvcml0eSI6InVzZXI6ZWRpdCJ9LHsiYXV0aG9yaXR5IjoidXNlcjplbmFibGUifV0sImFjY291bnROb25FeHBpcmVkIjp0cnVlLCJhY2NvdW50Tm9uTG9ja2VkIjp0cnVlLCJjcmVkZW50aWFsc05vbkV4cGlyZWQiOnRydWUsImVuYWJsZWQiOnRydWV9fQ.lqu0DH125JssRfmyvVc2Ddj7fVSN5OP9G9neecBn36bf1io0qAeQTt9JJ2KHyzV3c-Wv6R1hAXYV6RQVX14vhw) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@6a49129e] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@32568ddc', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T14:56:49.342+0800' );;
2020-09-27 15:00:49 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 1088 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-09-27 15:00:49 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-09-27 15:00:52 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-27 15:00:52 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 15:00:52 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 236ms. Found 0 Redis repository interfaces.
2020-09-27 15:00:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:00:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$9f22d1a3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:00:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:00:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:00:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@701c3aed' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:00:54 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:00:55 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-09-27 15:00:55 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-09-27 15:00:55 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-09-27 15:00:55 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-27 15:00:55 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-09-27 15:00:55 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 5420 ms
2020-09-27 15:00:55 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-09-27 15:00:55 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-09-27 15:00:56 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-09-27 15:00:56 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-09-27 15:00:56 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-09-27 15:00:56 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-09-27 15:00:56 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-09-27 15:00:56 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-09-27 15:00:56 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-09-27 15:00:57 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-09-27 15:00:57 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-09-27 15:00:57 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-09-27 15:00:57 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-09-27 15:00:57 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-09-27 15:00:57 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51601190057284'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-09-27 15:00:57 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-09-27 15:00:57 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-09-27 15:00:57 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@1708e01e
2020-09-27 15:00:57 INFO  main p6spy 2020-09-27 15:00:57 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-09-27 15:00:59 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6ae3771f, org.springframework.security.web.context.SecurityContextPersistenceFilter@736f4186, org.springframework.security.web.header.HeaderWriterFilter@6f20ecbb, org.springframework.web.filter.CorsFilter@20131229, org.springframework.security.web.authentication.logout.LogoutFilter@4364335c, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5bc46cad, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@53818352, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@76d57f86, org.springframework.security.web.session.SessionManagementFilter@707124e, org.springframework.security.web.access.ExceptionTranslationFilter@3b87bcb8, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@646b19c5]
2020-09-27 15:00:59 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-09-27 15:00:59 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-09-27 15:01:00 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-09-27 15:01:00 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-09-27 15:01:00 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-09-27 15:01:00 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-09-27 15:01:00 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-09-27 15:01:01 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-09-27 15:01:01 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 13.792 seconds (JVM running for 21.866)
2020-09-27 15:01:02 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-09-27 15:01:02 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-09-27 15:01:02 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51601189168598"'s failed in-progress jobs.
2020-09-27 15:01:02 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51601190057284 started.
2020-09-27 15:01:18 INFO  http-nio-8888-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-27 15:01:18 INFO  http-nio-8888-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-09-27 15:01:18 INFO  http-nio-8888-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 11 ms
2020-09-27 15:01:18 INFO  http-nio-8888-exec-2 org.apache.tomcat.util.http.parser.Cookie A cookie header was received [1579774133; __utma=111872281.831053985.1582861814.1582875770.1584267755.5; Idea-aafc89f7=a7b3efd7-3315-46db-8387-b3eb7ff7bbf7; Hm_lvt_d97abf6d61c21d773f97835defbdef4e=1594809530; Webstorm-5dc33a3f=3e27dac4-926d-43b5-b044-1c33978c0955; JSESSIONID=C44B16A252C80484794A22D85E2A9639] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-09-27 15:01:18 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:01:18 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 15:01:18 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:01:18 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 15:01:18 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:01:18 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 15:01:18 INFO  http-nio-8888-exec-2 com.codeworld.fc.common.authority.UserDetailServiceImpl 用户权限：[systemJob, role, user:delete, user:add, log, roleSetting, systemManage, menu:edit, menu, job-log, role:add, menu:add, user:edit, user:enable, chat, role:edit, systemLog, role:delete, menu:delete, job, user]
2020-09-27 15:01:18 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:01:18 | 耗时 13 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 131321, NULL, '用户登录', 383, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@78aab35e] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@7b427a41', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:01:18.655+0800' );;
2020-09-27 15:01:18 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:01:18 | 耗时 1 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = NULL;
2020-09-27 15:01:18 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:01:18 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 549972, NULL, '获取用户信息', 54, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJBVVRIT1JJVElFUyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6Im1lbnUifSx7ImF1dGhvcml0eSI6Im1lbnU6YWRkIn0seyJhdXRob3JpdHkiOiJtZW51OmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlIn0seyJhdXRob3JpdHkiOiJyb2xlOmFkZCJ9LHsiYXV0aG9yaXR5Ijoicm9sZTpkZWxldGUifSx7ImF1dGhvcml0eSI6InJvbGU6ZWRpdCJ9LHsiYXV0aG9yaXR5Ijoicm9sZVNldHRpbmcifSx7ImF1dGhvcml0eSI6InN5c3RlbUpvYiJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtTG9nIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XSwiZXhwIjoxNjAxMTkwMDgyLCJjcmVhdGVkIjoxNjAxMTkwMDc4NTMxLCJ1c2VybmFtZSI6eyJwYXNzd29yZCI6bnVsbCwidXNlcm5hbWUiOiIxMTExIiwiYXV0aG9yaXRpZXMiOlt7ImF1dGhvcml0eSI6ImNoYXQifSx7ImF1dGhvcml0eSI6ImpvYiJ9LHsiYXV0aG9yaXR5Ijoiam9iLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9nIn0seyJhdXRob3JpdHkiOiJtZW51In0seyJhdXRob3JpdHkiOiJtZW51OmFkZCJ9LHsiYXV0aG9yaXR5IjoibWVudTpkZWxldGUifSx7ImF1dGhvcml0eSI6Im1lbnU6ZWRpdCJ9LHsiYXV0aG9yaXR5Ijoicm9sZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTphZGQifSx7ImF1dGhvcml0eSI6InJvbGU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJyb2xlOmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGVTZXR0aW5nIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1Kb2IifSx7ImF1dGhvcml0eSI6InN5c3RlbUxvZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtTWFuYWdlIn0seyJhdXRob3JpdHkiOiJ1c2VyIn0seyJhdXRob3JpdHkiOiJ1c2VyOmFkZCJ9LHsiYXV0aG9yaXR5IjoidXNlcjpkZWxldGUifSx7ImF1dGhvcml0eSI6InVzZXI6ZWRpdCJ9LHsiYXV0aG9yaXR5IjoidXNlcjplbmFibGUifV0sImFjY291bnROb25FeHBpcmVkIjp0cnVlLCJhY2NvdW50Tm9uTG9ja2VkIjp0cnVlLCJjcmVkZW50aWFsc05vbkV4cGlyZWQiOnRydWUsImVuYWJsZWQiOnRydWV9fQ.Ww-UL7hJjVl7M-pw4dfHq0Sw38B9Z2nEcHgaCbyRIbUem6WUtLoYx5a-Gn7uFiJO3RQpZTHoh7fwqxeYk8nmQw) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@20d503d3] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@61fca398', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:01:18.784+0800' );;
2020-09-27 15:07:50 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 22292 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-09-27 15:07:50 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-09-27 15:07:53 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-27 15:07:53 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 15:07:53 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 288ms. Found 0 Redis repository interfaces.
2020-09-27 15:07:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:07:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$b4791288] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:07:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:07:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:07:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@51329bfa' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:07:55 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:07:56 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-09-27 15:07:56 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-09-27 15:07:56 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-09-27 15:07:56 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-27 15:07:56 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-09-27 15:07:56 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 5837 ms
2020-09-27 15:07:57 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-09-27 15:07:57 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-09-27 15:07:57 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-09-27 15:07:57 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-09-27 15:07:57 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-09-27 15:07:57 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-09-27 15:07:57 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-09-27 15:07:57 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-09-27 15:07:57 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-09-27 15:07:58 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-09-27 15:07:58 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-09-27 15:07:58 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-09-27 15:07:58 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-09-27 15:07:58 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-09-27 15:07:58 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51601190478584'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-09-27 15:07:58 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-09-27 15:07:58 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-09-27 15:07:58 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@5d74481d
2020-09-27 15:07:59 INFO  main p6spy 2020-09-27 15:07:59 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-09-27 15:08:00 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@47afaef9, org.springframework.security.web.context.SecurityContextPersistenceFilter@11cbef09, org.springframework.security.web.header.HeaderWriterFilter@ff9255e, org.springframework.web.filter.CorsFilter@53cdcef2, org.springframework.security.web.authentication.logout.LogoutFilter@533c700b, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@5a907cae, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@1ccde18, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@345ab258, org.springframework.security.web.session.SessionManagementFilter@43595634, org.springframework.security.web.access.ExceptionTranslationFilter@60c6ad72, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@7d0e8442]
2020-09-27 15:08:00 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-09-27 15:08:01 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-09-27 15:08:02 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-09-27 15:08:02 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-09-27 15:08:02 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-09-27 15:08:02 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-09-27 15:08:02 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-09-27 15:08:03 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-09-27 15:08:03 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 14.766 seconds (JVM running for 24.226)
2020-09-27 15:08:04 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-09-27 15:08:04 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-09-27 15:08:04 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51601190057284"'s failed in-progress jobs.
2020-09-27 15:08:04 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51601190478584 started.
2020-09-27 15:08:19 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 21244 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-09-27 15:08:19 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-09-27 15:08:22 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-27 15:08:22 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 15:08:22 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 238ms. Found 0 Redis repository interfaces.
2020-09-27 15:08:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:08:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$9b33e2b3] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:08:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:08:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:08:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@2e94d33c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:08:24 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:08:25 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-09-27 15:08:25 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-09-27 15:08:25 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-09-27 15:08:25 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-27 15:08:25 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-09-27 15:08:25 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 6070 ms
2020-09-27 15:08:25 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-09-27 15:08:26 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-09-27 15:08:26 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-09-27 15:08:26 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-09-27 15:08:26 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-09-27 15:08:26 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-09-27 15:08:26 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-09-27 15:08:26 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-09-27 15:08:26 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-09-27 15:08:27 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-09-27 15:08:27 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-09-27 15:08:27 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-09-27 15:08:28 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-09-27 15:08:28 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-09-27 15:08:28 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51601190507848'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-09-27 15:08:28 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-09-27 15:08:28 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-09-27 15:08:28 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@248a3909
2020-09-27 15:08:28 INFO  main p6spy 2020-09-27 15:08:28 | 耗时 0 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-09-27 15:08:30 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@3d3e2d04, org.springframework.security.web.context.SecurityContextPersistenceFilter@237715a0, org.springframework.security.web.header.HeaderWriterFilter@5ca523bf, org.springframework.web.filter.CorsFilter@38cb6a0f, org.springframework.security.web.authentication.logout.LogoutFilter@39513dc9, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@3f2c9d9a, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@57794ceb, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@4de4a343, org.springframework.security.web.session.SessionManagementFilter@44d80991, org.springframework.security.web.access.ExceptionTranslationFilter@f9aab8b, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@1f877317]
2020-09-27 15:08:30 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-09-27 15:08:30 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-09-27 15:08:31 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-09-27 15:08:31 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-09-27 15:08:31 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-09-27 15:08:31 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-09-27 15:08:31 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-09-27 15:08:32 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-09-27 15:08:32 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 15.166 seconds (JVM running for 25.233)
2020-09-27 15:08:33 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-09-27 15:08:33 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-09-27 15:08:33 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51601190478584"'s failed in-progress jobs.
2020-09-27 15:08:33 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51601190507848 started.
2020-09-27 15:08:52 INFO  http-nio-8888-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-27 15:08:52 INFO  http-nio-8888-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-09-27 15:08:52 INFO  http-nio-8888-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 16 ms
2020-09-27 15:08:52 INFO  http-nio-8888-exec-2 org.apache.tomcat.util.http.parser.Cookie A cookie header was received [1579774133; __utma=111872281.831053985.1582861814.1582875770.1584267755.5; Idea-aafc89f7=a7b3efd7-3315-46db-8387-b3eb7ff7bbf7; Hm_lvt_d97abf6d61c21d773f97835defbdef4e=1594809530; Webstorm-5dc33a3f=3e27dac4-926d-43b5-b044-1c33978c0955; JSESSIONID=30C2961E0DDE2ABB27B8F1FC4C2E5398] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-09-27 15:08:52 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:08:52 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 15:08:52 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:08:52 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 15:08:52 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:08:52 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 15:08:52 INFO  http-nio-8888-exec-2 com.codeworld.fc.common.authority.UserDetailServiceImpl 用户权限：[systemJob, role, user:delete, user:add, log, roleSetting, systemManage, menu:edit, menu, job-log, role:add, menu:add, user:edit, user:enable, chat, role:edit, systemLog, role:delete, menu:delete, job, user]
2020-09-27 15:09:19 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:09:19 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 585779, NULL, '用户登录', 26927, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@46e88877] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@619433a7', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:09:19.446+0800' );;
2020-09-27 15:09:26 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:09:26 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 15:09:26 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:09:26 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 15:09:26 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:09:26 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 15:09:26 INFO  http-nio-8888-exec-4 com.codeworld.fc.common.authority.UserDetailServiceImpl 用户权限：[systemJob, role, user:delete, user:add, log, roleSetting, systemManage, menu:edit, menu, job-log, role:add, menu:add, user:edit, user:enable, chat, role:edit, systemLog, role:delete, menu:delete, job, user]
2020-09-27 15:09:31 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:09:31 | 耗时 10 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 38359, NULL, '用户登录', 4708, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@392dd7d8] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@3d071de0', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:09:31.643+0800' );;
2020-09-27 15:09:31 INFO  http-nio-8888-exec-5 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 15:09:32 INFO  http-nio-8888-exec-5 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 145ms. Found 0 Redis repository interfaces.
2020-09-27 15:10:10 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 15:10:10 | 耗时 2 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = NULL;
2020-09-27 15:10:15 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 15:10:15 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 463266, NULL, '获取用户信息', 43446, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJBVVRIT1JJVElFUyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6Im1lbnUifSx7ImF1dGhvcml0eSI6Im1lbnU6YWRkIn0seyJhdXRob3JpdHkiOiJtZW51OmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlIn0seyJhdXRob3JpdHkiOiJyb2xlOmFkZCJ9LHsiYXV0aG9yaXR5Ijoicm9sZTpkZWxldGUifSx7ImF1dGhvcml0eSI6InJvbGU6ZWRpdCJ9LHsiYXV0aG9yaXR5Ijoicm9sZVNldHRpbmcifSx7ImF1dGhvcml0eSI6InN5c3RlbUpvYiJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtTG9nIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XSwiZXhwIjoxNjAxMTkwNTcwLCJjcmVhdGVkIjoxNjAxMTkwNTY3MTY1LCJ1c2VybmFtZSI6eyJwYXNzd29yZCI6bnVsbCwidXNlcm5hbWUiOiIxMTExIiwiYXV0aG9yaXRpZXMiOlt7ImF1dGhvcml0eSI6ImNoYXQifSx7ImF1dGhvcml0eSI6ImpvYiJ9LHsiYXV0aG9yaXR5Ijoiam9iLWxvZyJ9LHsiYXV0aG9yaXR5IjoibG9nIn0seyJhdXRob3JpdHkiOiJtZW51In0seyJhdXRob3JpdHkiOiJtZW51OmFkZCJ9LHsiYXV0aG9yaXR5IjoibWVudTpkZWxldGUifSx7ImF1dGhvcml0eSI6Im1lbnU6ZWRpdCJ9LHsiYXV0aG9yaXR5Ijoicm9sZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTphZGQifSx7ImF1dGhvcml0eSI6InJvbGU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJyb2xlOmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGVTZXR0aW5nIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1Kb2IifSx7ImF1dGhvcml0eSI6InN5c3RlbUxvZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtTWFuYWdlIn0seyJhdXRob3JpdHkiOiJ1c2VyIn0seyJhdXRob3JpdHkiOiJ1c2VyOmFkZCJ9LHsiYXV0aG9yaXR5IjoidXNlcjpkZWxldGUifSx7ImF1dGhvcml0eSI6InVzZXI6ZWRpdCJ9LHsiYXV0aG9yaXR5IjoidXNlcjplbmFibGUifV0sImFjY291bnROb25FeHBpcmVkIjp0cnVlLCJhY2NvdW50Tm9uTG9ja2VkIjp0cnVlLCJjcmVkZW50aWFsc05vbkV4cGlyZWQiOnRydWUsImVuYWJsZWQiOnRydWV9fQ.iW14v3I5uZSD5zphOdq0goyLncd-rginObbpYx03xvk_IXWyEB6eOxvxWnAaeJn6OuJQMmoXdG3XuOanRbshig) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@4f259645] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@83b0fc8', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:10:15.592+0800' );;
2020-09-27 15:18:35 INFO  http-nio-8888-exec-8 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 15:18:36 INFO  http-nio-8888-exec-8 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 246ms. Found 0 Redis repository interfaces.
2020-09-27 15:18:36 INFO  http-nio-8888-exec-10 p6spy 2020-09-27 15:18:36 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 15:18:36 INFO  http-nio-8888-exec-10 p6spy 2020-09-27 15:18:36 | 耗时 1 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 15:18:36 INFO  http-nio-8888-exec-10 p6spy 2020-09-27 15:18:36 | 耗时 1 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 15:18:36 INFO  http-nio-8888-exec-10 com.codeworld.fc.common.authority.UserDetailServiceImpl 用户权限：[systemJob, role, user:delete, user:add, log, roleSetting, systemManage, menu:edit, menu, job-log, role:add, menu:add, user:edit, user:enable, chat, role:edit, systemLog, role:delete, menu:delete, job, user]
2020-09-27 15:18:52 INFO  http-nio-8888-exec-10 p6spy 2020-09-27 15:18:52 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 686315, NULL, '用户登录', 15766, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@5c1627e1] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@3531ea60', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:18:51.996+0800' );;
2020-09-27 15:19:13 INFO  http-nio-8888-exec-9 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 15:19:14 INFO  http-nio-8888-exec-9 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 230ms. Found 0 Redis repository interfaces.
2020-09-27 15:19:14 INFO  http-nio-8888-exec-1 p6spy 2020-09-27 15:19:14 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 15:19:14 INFO  http-nio-8888-exec-1 p6spy 2020-09-27 15:19:14 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 15:19:14 INFO  http-nio-8888-exec-1 p6spy 2020-09-27 15:19:14 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 15:19:14 INFO  http-nio-8888-exec-1 com.codeworld.fc.common.authority.UserDetailServiceImpl 用户权限：[systemJob, role, user:delete, user:add, log, roleSetting, systemManage, menu:edit, menu, job-log, role:add, menu:add, user:edit, user:enable, chat, role:edit, systemLog, role:delete, menu:delete, job, user]
2020-09-27 15:19:23 INFO  http-nio-8888-exec-1 p6spy 2020-09-27 15:19:23 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 716662, NULL, '用户登录', 8931, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@47ce7441] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@7dd121f8', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:19:23.086+0800' );;
2020-09-27 15:19:41 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:19:41 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = NULL;
2020-09-27 15:19:41 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:19:41 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 887994, NULL, '获取用户信息', 18845, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOnsicGFzc3dvcmQiOm51bGwsInVzZXJuYW1lIjoiMTExMSIsImF1dGhvcml0aWVzIjpbeyJhdXRob3JpdHkiOiJjaGF0In0seyJhdXRob3JpdHkiOiJqb2IifSx7ImF1dGhvcml0eSI6ImpvYi1sb2cifSx7ImF1dGhvcml0eSI6ImxvZyJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1Mb2cifSx7ImF1dGhvcml0eSI6InN5c3RlbU1hbmFnZSJ9LHsiYXV0aG9yaXR5IjoidXNlciJ9LHsiYXV0aG9yaXR5IjoidXNlcjphZGQifSx7ImF1dGhvcml0eSI6InVzZXI6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJ1c2VyOmVkaXQifSx7ImF1dGhvcml0eSI6InVzZXI6ZW5hYmxlIn1dLCJhY2NvdW50Tm9uRXhwaXJlZCI6dHJ1ZSwiYWNjb3VudE5vbkxvY2tlZCI6dHJ1ZSwiY3JlZGVudGlhbHNOb25FeHBpcmVkIjp0cnVlLCJlbmFibGVkIjp0cnVlfSwiZXhwIjoxNjAxMjM0MzU0LCJjcmVhdGVkIjoxNjAxMTkxMTU0NDM4LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6Im1lbnUifSx7ImF1dGhvcml0eSI6Im1lbnU6YWRkIn0seyJhdXRob3JpdHkiOiJtZW51OmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlIn0seyJhdXRob3JpdHkiOiJyb2xlOmFkZCJ9LHsiYXV0aG9yaXR5Ijoicm9sZTpkZWxldGUifSx7ImF1dGhvcml0eSI6InJvbGU6ZWRpdCJ9LHsiYXV0aG9yaXR5Ijoicm9sZVNldHRpbmcifSx7ImF1dGhvcml0eSI6InN5c3RlbUpvYiJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtTG9nIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.PKQjZE9Xf9LJJ24iPqjiv2kkT60R55Uq-O0pUve6I9tYXqpNZ3092leqB9LklDC1v55OWA0iSwDYqdcu9Wwt4w) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@22341f7b] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@3315c905', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:19:41.982+0800' );;
2020-09-27 15:19:42 INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51601190507848 paused.
2020-09-27 15:19:42 INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-27 15:19:42 INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-09-27 15:19:42 INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51601190507848 shutting down.
2020-09-27 15:19:42 INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51601190507848 paused.
2020-09-27 15:19:42 INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51601190507848 shutdown complete.
2020-09-27 15:19:42 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource closing dynamicDatasource  ing....
2020-09-27 15:19:42 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-09-27 15:19:42 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-09-27 15:19:42 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-09-27 15:19:42 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-09-27 15:19:58 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 17904 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-09-27 15:19:58 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-09-27 15:20:02 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-27 15:20:02 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 15:20:03 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 309ms. Found 0 Redis repository interfaces.
2020-09-27 15:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$d96831bb] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@436ed58c' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:20:05 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:20:06 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-09-27 15:20:06 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-09-27 15:20:06 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-09-27 15:20:06 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-27 15:20:07 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-09-27 15:20:07 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 8249 ms
2020-09-27 15:20:07 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-09-27 15:20:07 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-09-27 15:20:08 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-09-27 15:20:08 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-09-27 15:20:08 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-09-27 15:20:08 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-09-27 15:20:08 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-09-27 15:20:08 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-09-27 15:20:08 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-09-27 15:20:10 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-09-27 15:20:10 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-09-27 15:20:10 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-09-27 15:20:10 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-09-27 15:20:10 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-09-27 15:20:10 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51601191210184'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-09-27 15:20:10 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-09-27 15:20:10 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-09-27 15:20:10 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@535007df
2020-09-27 15:20:10 INFO  main p6spy 2020-09-27 15:20:10 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-09-27 15:20:13 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@6a8230d6, org.springframework.security.web.context.SecurityContextPersistenceFilter@453f76bd, org.springframework.security.web.header.HeaderWriterFilter@6da128a1, org.springframework.web.filter.CorsFilter@248dbf56, org.springframework.security.web.authentication.logout.LogoutFilter@66966bba, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@2e66c2d2, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@5a2c459d, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3638e29b, org.springframework.security.web.session.SessionManagementFilter@2c51192e, org.springframework.security.web.access.ExceptionTranslationFilter@4cad9ba7, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@f94c7c8]
2020-09-27 15:20:13 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-09-27 15:20:13 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-09-27 15:20:15 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-09-27 15:20:15 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-09-27 15:20:15 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-09-27 15:20:15 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-09-27 15:20:15 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-09-27 15:20:16 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-09-27 15:20:16 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 21.035 seconds (JVM running for 32.809)
2020-09-27 15:20:17 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-09-27 15:20:17 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-09-27 15:20:17 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51601190507848"'s failed in-progress jobs.
2020-09-27 15:20:17 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51601191210184 started.
2020-09-27 15:21:06 INFO  http-nio-8888-exec-1 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 15:21:06 INFO  http-nio-8888-exec-1 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 332ms. Found 0 Redis repository interfaces.
2020-09-27 15:21:06 INFO  http-nio-8888-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-27 15:21:06 INFO  http-nio-8888-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-09-27 15:21:07 INFO  http-nio-8888-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 79 ms
2020-09-27 15:21:07 INFO  http-nio-8888-exec-2 org.apache.tomcat.util.http.parser.Cookie A cookie header was received [1579774133; __utma=111872281.831053985.1582861814.1582875770.1584267755.5; Idea-aafc89f7=a7b3efd7-3315-46db-8387-b3eb7ff7bbf7; Hm_lvt_d97abf6d61c21d773f97835defbdef4e=1594809530; Webstorm-5dc33a3f=3e27dac4-926d-43b5-b044-1c33978c0955; JSESSIONID=1F22361145BFE71C662B85F032335F13] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-09-27 15:21:08 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:21:08 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 15:21:08 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:21:08 | 耗时 1 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 15:21:08 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:21:08 | 耗时 1 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 15:21:08 INFO  http-nio-8888-exec-2 com.codeworld.fc.common.authority.UserDetailServiceImpl 用户权限：[systemJob, role, user:delete, user:add, log, roleSetting, systemManage, menu:edit, menu, job-log, role:add, menu:add, user:edit, user:enable, chat, role:edit, systemLog, role:delete, menu:delete, job, user]
2020-09-27 15:21:09 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:21:09 | 耗时 13 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 322335, NULL, '用户登录', 2063, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@789892fa] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@1f6bd5d6', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:21:09.729+0800' );;
2020-09-27 15:21:45 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:21:45 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = NULL;
2020-09-27 15:21:45 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:21:45 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 777141, NULL, '获取用户信息', 35907, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOnsicGFzc3dvcmQiOm51bGwsInVzZXJuYW1lIjoiMTExMSIsImF1dGhvcml0aWVzIjpbeyJhdXRob3JpdHkiOiJjaGF0In0seyJhdXRob3JpdHkiOiJqb2IifSx7ImF1dGhvcml0eSI6ImpvYi1sb2cifSx7ImF1dGhvcml0eSI6ImxvZyJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1Mb2cifSx7ImF1dGhvcml0eSI6InN5c3RlbU1hbmFnZSJ9LHsiYXV0aG9yaXR5IjoidXNlciJ9LHsiYXV0aG9yaXR5IjoidXNlcjphZGQifSx7ImF1dGhvcml0eSI6InVzZXI6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJ1c2VyOmVkaXQifSx7ImF1dGhvcml0eSI6InVzZXI6ZW5hYmxlIn1dLCJhY2NvdW50Tm9uRXhwaXJlZCI6dHJ1ZSwiYWNjb3VudE5vbkxvY2tlZCI6dHJ1ZSwiY3JlZGVudGlhbHNOb25FeHBpcmVkIjp0cnVlLCJlbmFibGVkIjp0cnVlfSwiZXhwIjoxNjAxMjM0NDY4LCJjcmVhdGVkIjoxNjAxMTkxMjY4NzM1LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6Im1lbnUifSx7ImF1dGhvcml0eSI6Im1lbnU6YWRkIn0seyJhdXRob3JpdHkiOiJtZW51OmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlIn0seyJhdXRob3JpdHkiOiJyb2xlOmFkZCJ9LHsiYXV0aG9yaXR5Ijoicm9sZTpkZWxldGUifSx7ImF1dGhvcml0eSI6InJvbGU6ZWRpdCJ9LHsiYXV0aG9yaXR5Ijoicm9sZVNldHRpbmcifSx7ImF1dGhvcml0eSI6InN5c3RlbUpvYiJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtTG9nIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.0Xb7fgi17XnZoDWSzYTBbK7KrT33nA6a-mmGoa95bUxN8dgeYb6v4x2nmhtZi4LHX0JyUUz1A8GJAYaoDEwq2A) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@5865fab4] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@305b9f57', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:21:45.974+0800' );;
2020-09-27 15:22:26 INFO  http-nio-8888-exec-6 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 15:22:26 INFO  http-nio-8888-exec-6 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 235ms. Found 0 Redis repository interfaces.
2020-09-27 15:22:26 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 15:22:26 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 15:22:26 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 15:22:26 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 15:22:26 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 15:22:26 | 耗时 1 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 15:22:26 INFO  http-nio-8888-exec-7 com.codeworld.fc.common.authority.UserDetailServiceImpl 用户权限：[systemJob, role, user:delete, user:add, log, roleSetting, systemManage, menu:edit, menu, job-log, role:add, menu:add, user:edit, user:enable, chat, role:edit, systemLog, role:delete, menu:delete, job, user]
2020-09-27 15:22:42 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 15:22:42 | 耗时 15 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 197273, NULL, '用户登录', 15833, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@5f81abd3] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@41fc96c3', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:22:42.296+0800' );;
2020-09-27 15:22:59 INFO  http-nio-8888-exec-8 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 15:22:59 INFO  http-nio-8888-exec-8 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 245ms. Found 0 Redis repository interfaces.
2020-09-27 15:22:59 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 15:22:59 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 15:22:59 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 15:22:59 | 耗时 1 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 15:22:59 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 15:22:59 | 耗时 1 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 15:22:59 INFO  http-nio-8888-exec-9 com.codeworld.fc.common.authority.UserDetailServiceImpl 用户权限：[systemJob, role, user:delete, user:add, log, roleSetting, systemManage, menu:edit, menu, job-log, role:add, menu:add, user:edit, user:enable, chat, role:edit, systemLog, role:delete, menu:delete, job, user]
2020-09-27 15:23:10 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 15:23:10 | 耗时 12 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 950263, NULL, '用户登录', 10322, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@298d5743] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@3f2f8e54', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:23:10.193+0800' );;
2020-09-27 15:29:15 INFO  http-nio-8888-exec-1 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 15:29:15 INFO  http-nio-8888-exec-1 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 122ms. Found 0 Redis repository interfaces.
2020-09-27 15:29:15 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:29:15 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 15:29:15 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:29:15 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 15:29:15 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:29:15 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 15:29:15 INFO  http-nio-8888-exec-2 com.codeworld.fc.common.authority.UserDetailServiceImpl 用户权限：[systemJob, role, user:delete, user:add, log, roleSetting, systemManage, menu:edit, menu, job-log, role:add, menu:add, user:edit, user:enable, chat, role:edit, systemLog, role:delete, menu:delete, job, user]
2020-09-27 15:29:16 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:29:16 | 耗时 12 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 318359, NULL, '用户登录', 282, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@cb83e00] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@32b44df2', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:29:16.139+0800' );;
2020-09-27 15:29:16 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:29:16 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '{password=null, username=1111, authorities=[{authority=chat}, {authority=job}, {authority=job-log}, {authority=log}, {authority=menu}, {authority=menu:add}, {authority=menu:delete}, {authority=menu:edit}, {authority=role}, {authority=role:add}, {authority=role:delete}, {authority=role:edit}, {authority=roleSetting}, {authority=systemJob}, {authority=systemLog}, {authority=systemManage}, {authority=user}, {authority=user:add}, {authority=user:delete}, {authority=user:edit}, {authority=user:enable}], accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true}';
2020-09-27 15:29:16 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:29:16 | 耗时 43 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 462215, '{password=null, username=1111, authorities=[{authority=chat}, {authority=job}, {authority=job-log}, {authority=log}, {authority=menu}, {authority=menu:add}, {authority=menu:delete}, {authority=menu:edit}, {authority=role}, {authority=role:add}, {authority=role:delete}, {authority=role:edit}, {authority=roleSetting}, {authority=systemJob}, {authority=systemLog}, {authority=systemManage}, {authority=user}, {authority=user:add}, {authority=user:delete}, {authority=user:edit}, {authority=user:enable}], accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true}', '获取用户信息', 18, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOnsicGFzc3dvcmQiOm51bGwsInVzZXJuYW1lIjoiMTExMSIsImF1dGhvcml0aWVzIjpbeyJhdXRob3JpdHkiOiJjaGF0In0seyJhdXRob3JpdHkiOiJqb2IifSx7ImF1dGhvcml0eSI6ImpvYi1sb2cifSx7ImF1dGhvcml0eSI6ImxvZyJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1Mb2cifSx7ImF1dGhvcml0eSI6InN5c3RlbU1hbmFnZSJ9LHsiYXV0aG9yaXR5IjoidXNlciJ9LHsiYXV0aG9yaXR5IjoidXNlcjphZGQifSx7ImF1dGhvcml0eSI6InVzZXI6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJ1c2VyOmVkaXQifSx7ImF1dGhvcml0eSI6InVzZXI6ZW5hYmxlIn1dLCJhY2NvdW50Tm9uRXhwaXJlZCI6dHJ1ZSwiYWNjb3VudE5vbkxvY2tlZCI6dHJ1ZSwiY3JlZGVudGlhbHNOb25FeHBpcmVkIjp0cnVlLCJlbmFibGVkIjp0cnVlfSwiZXhwIjoxNjAxMjM0OTU2LCJjcmVhdGVkIjoxNjAxMTkxNzU2MTM1LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6Im1lbnUifSx7ImF1dGhvcml0eSI6Im1lbnU6YWRkIn0seyJhdXRob3JpdHkiOiJtZW51OmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlIn0seyJhdXRob3JpdHkiOiJyb2xlOmFkZCJ9LHsiYXV0aG9yaXR5Ijoicm9sZTpkZWxldGUifSx7ImF1dGhvcml0eSI6InJvbGU6ZWRpdCJ9LHsiYXV0aG9yaXR5Ijoicm9sZVNldHRpbmcifSx7ImF1dGhvcml0eSI6InN5c3RlbUpvYiJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtTG9nIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.x7ehl6WeEe9qTthunQdwAIBpm5HqU9SEt2LZier3AqKwy-OB3fmGAwD-0aiSmUBrzvCadRaUkRyHxrZca_nrkA) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@2257f375] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@306003bb', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:29:16.204+0800' );;
2020-09-27 15:29:25 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 15:29:25 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = 'admin';
2020-09-27 15:29:33 INFO  http-nio-8888-exec-8 p6spy 2020-09-27 15:29:33 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = 'admin';
2020-09-27 15:30:15 INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51601191210184 paused.
2020-09-27 15:30:16 INFO  SpringContextShutdownHook org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Shutting down ExecutorService 'applicationTaskExecutor'
2020-09-27 15:30:16 INFO  SpringContextShutdownHook org.springframework.scheduling.quartz.SchedulerFactoryBean Shutting down Quartz Scheduler
2020-09-27 15:30:16 INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51601191210184 shutting down.
2020-09-27 15:30:16 INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51601191210184 paused.
2020-09-27 15:30:16 INFO  SpringContextShutdownHook org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51601191210184 shutdown complete.
2020-09-27 15:30:16 INFO  SpringContextShutdownHook com.baomidou.dynamic.datasource.DynamicRoutingDataSource closing dynamicDatasource  ing....
2020-09-27 15:30:16 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown initiated...
2020-09-27 15:30:16 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource quartz - Shutdown completed.
2020-09-27 15:30:16 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown initiated...
2020-09-27 15:30:16 INFO  SpringContextShutdownHook com.zaxxer.hikari.HikariDataSource base - Shutdown completed.
2020-09-27 15:30:29 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Starting CodeworldVueSystemApplication on DESKTOP-P23KTQ5 with PID 11944 (C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system\target\classes started by Lenovo in C:\Users\Lenovo\Desktop\项目\JAVAEE实践\codeworld-vue-system)
2020-09-27 15:30:29 INFO  main com.codeworld.fc.CodeworldVueSystemApplication The following profiles are active: test
2020-09-27 15:30:32 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Multiple Spring Data modules found, entering strict repository configuration mode!
2020-09-27 15:30:32 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 15:30:33 INFO  main org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 328ms. Found 0 Redis repository interfaces.
2020-09-27 15:30:35 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'spring.datasource.dynamic-com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceProperties] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:30:35 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration' of type [com.baomidou.dynamic.datasource.spring.boot.autoconfigure.DynamicDataSourceAutoConfiguration$$EnhancerBySpringCGLIB$$ba1a2372] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:30:35 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dsProcessor' of type [com.baomidou.dynamic.datasource.processor.DsHeaderProcessor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:30:35 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'dynamicDatasourceAnnotationAdvisor' of type [com.baomidou.dynamic.datasource.aop.DynamicDataSourceAnnotationAdvisor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:30:35 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler@5cac3117' of type [org.springframework.security.access.expression.method.DefaultMethodSecurityExpressionHandler] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:30:35 INFO  main org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker Bean 'methodSecurityMetadataSource' of type [org.springframework.security.access.method.DelegatingMethodSecurityMetadataSource] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying)
2020-09-27 15:30:35 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat initialized with port(s): 8888 (http)
2020-09-27 15:30:35 INFO  main org.apache.coyote.http11.Http11NioProtocol Initializing ProtocolHandler ["http-nio-8888"]
2020-09-27 15:30:35 INFO  main org.apache.catalina.core.StandardService Starting service [Tomcat]
2020-09-27 15:30:35 INFO  main org.apache.catalina.core.StandardEngine Starting Servlet engine: [Apache Tomcat/9.0.37]
2020-09-27 15:30:36 INFO  main org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring embedded WebApplicationContext
2020-09-27 15:30:36 INFO  main org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext Root WebApplicationContext: initialization completed in 6362 ms
2020-09-27 15:30:36 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-检测到并开启了p6spy
2020-09-27 15:30:36 INFO  main com.zaxxer.hikari.HikariDataSource base - Starting...
2020-09-27 15:30:37 INFO  main com.zaxxer.hikari.HikariDataSource base - Start completed.
2020-09-27 15:30:37 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Starting...
2020-09-27 15:30:37 INFO  main com.zaxxer.hikari.HikariDataSource quartz - Start completed.
2020-09-27 15:30:37 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 初始共加载 2 个数据源
2020-09-27 15:30:37 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 quartz 成功
2020-09-27 15:30:37 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 动态数据源-加载 base 成功
2020-09-27 15:30:37 INFO  main com.baomidou.dynamic.datasource.DynamicRoutingDataSource 当前的默认数据源是单数据源，数据源名为 base
2020-09-27 15:30:38 INFO  main org.quartz.impl.StdSchedulerFactory Using default implementation for ThreadExecutor
2020-09-27 15:30:38 INFO  main org.quartz.core.SchedulerSignalerImpl Initialized Scheduler Signaller of type: class org.quartz.core.SchedulerSignalerImpl
2020-09-27 15:30:38 INFO  main org.quartz.core.QuartzScheduler Quartz Scheduler v.2.3.2 created.
2020-09-27 15:30:38 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore Using db table-based data access locking (synchronization).
2020-09-27 15:30:38 INFO  main org.springframework.scheduling.quartz.LocalDataSourceJobStore JobStoreCMT initialized.
2020-09-27 15:30:38 INFO  main org.quartz.core.QuartzScheduler Scheduler meta-data: Quartz Scheduler (v2.3.2) 'FC_Scheduler' with instanceId 'DESKTOP-P23KTQ51601191838635'
  Scheduler class: 'org.quartz.core.QuartzScheduler' - running locally.
  NOT STARTED.
  Currently in standby mode.
  Number of jobs executed: 0
  Using thread pool 'org.quartz.simpl.SimpleThreadPool' - with 20 threads.
  Using job-store 'org.springframework.scheduling.quartz.LocalDataSourceJobStore' - which supports persistence. and is clustered.

2020-09-27 15:30:38 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler 'FC_Scheduler' initialized from an externally provided properties instance.
2020-09-27 15:30:38 INFO  main org.quartz.impl.StdSchedulerFactory Quartz scheduler version: 2.3.2
2020-09-27 15:30:38 INFO  main org.quartz.core.QuartzScheduler JobFactory set to: org.springframework.scheduling.quartz.AdaptableJobFactory@23ac0538
2020-09-27 15:30:39 INFO  main p6spy 2020-09-27 15:30:39 | 耗时 1 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC;
2020-09-27 15:30:40 INFO  main org.springframework.security.web.DefaultSecurityFilterChain Creating filter chain: any request, [org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@9d15ca2, org.springframework.security.web.context.SecurityContextPersistenceFilter@562a095b, org.springframework.security.web.header.HeaderWriterFilter@589184d4, org.springframework.web.filter.CorsFilter@ec7bbc, org.springframework.security.web.authentication.logout.LogoutFilter@5bfb7064, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@27b189de, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@2ce6edcf, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@17dcccfa, org.springframework.security.web.session.SessionManagementFilter@271217d0, org.springframework.security.web.access.ExceptionTranslationFilter@73da9bbf, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@20bc6109]
2020-09-27 15:30:40 INFO  main springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-09-27 15:30:41 INFO  main org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor Initializing ExecutorService 'applicationTaskExecutor'
2020-09-27 15:30:41 INFO  main org.apache.coyote.http11.Http11NioProtocol Starting ProtocolHandler ["http-nio-8888"]
2020-09-27 15:30:41 INFO  main org.springframework.boot.web.embedded.tomcat.TomcatWebServer Tomcat started on port(s): 8888 (http) with context path ''
2020-09-27 15:30:41 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Context refreshed
2020-09-27 15:30:41 INFO  main springfox.documentation.spring.web.plugins.DocumentationPluginsBootstrapper Found 1 custom documentation plugin(s)
2020-09-27 15:30:41 INFO  main springfox.documentation.spring.web.scanners.ApiListingReferenceScanner Scanning for api listing references
2020-09-27 15:30:42 INFO  main org.springframework.scheduling.quartz.SchedulerFactoryBean Will start Quartz Scheduler [FC_Scheduler] in 1 seconds
2020-09-27 15:30:42 INFO  main com.codeworld.fc.CodeworldVueSystemApplication Started CodeworldVueSystemApplication in 15.026 seconds (JVM running for 25.379)
2020-09-27 15:30:43 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.SchedulerFactoryBean Starting Quartz Scheduler now, after delay of 1 seconds
2020-09-27 15:30:43 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: detected 1 failed or restarted instances.
2020-09-27 15:30:43 INFO  Quartz Scheduler [FC_Scheduler] org.springframework.scheduling.quartz.LocalDataSourceJobStore ClusterManager: Scanning for instance "DESKTOP-P23KTQ51601191210184"'s failed in-progress jobs.
2020-09-27 15:30:43 INFO  Quartz Scheduler [FC_Scheduler] org.quartz.core.QuartzScheduler Scheduler FC_Scheduler_$_DESKTOP-P23KTQ51601191838635 started.
2020-09-27 15:30:49 INFO  http-nio-8888-exec-1 org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/] Initializing Spring DispatcherServlet 'dispatcherServlet'
2020-09-27 15:30:49 INFO  http-nio-8888-exec-1 org.springframework.web.servlet.DispatcherServlet Initializing Servlet 'dispatcherServlet'
2020-09-27 15:30:49 INFO  http-nio-8888-exec-1 org.springframework.web.servlet.DispatcherServlet Completed initialization in 13 ms
2020-09-27 15:30:49 INFO  http-nio-8888-exec-3 org.apache.tomcat.util.http.parser.Cookie A cookie header was received [1579774133; __utma=111872281.831053985.1582861814.1582875770.1584267755.5; Idea-aafc89f7=a7b3efd7-3315-46db-8387-b3eb7ff7bbf7; Hm_lvt_d97abf6d61c21d773f97835defbdef4e=1594809530; Webstorm-5dc33a3f=3e27dac4-926d-43b5-b044-1c33978c0955; JSESSIONID=452398106292322CCF23AA4078CA144A] that contained an invalid cookie. That cookie will be ignored.
 Note: further occurrences of this error will be logged at DEBUG level.
2020-09-27 15:30:49 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:30:49 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 15:30:49 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:30:49 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 15:30:49 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:30:49 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 15:30:49 INFO  http-nio-8888-exec-3 com.codeworld.fc.common.authority.UserDetailServiceImpl 用户权限：[systemJob, role, user:delete, user:add, log, roleSetting, systemManage, menu:edit, menu, job-log, role:add, menu:add, user:edit, user:enable, chat, role:edit, systemLog, role:delete, menu:delete, job, user]
2020-09-27 15:30:50 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:30:50 | 耗时 12 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 902865, NULL, '用户登录', 649, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@52e1ae17] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@7dc6d65d', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:30:50.218+0800' );;
2020-09-27 15:30:50 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:30:50 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '{password=null, username=1111, authorities=[{authority=chat}, {authority=job}, {authority=job-log}, {authority=log}, {authority=menu}, {authority=menu:add}, {authority=menu:delete}, {authority=menu:edit}, {authority=role}, {authority=role:add}, {authority=role:delete}, {authority=role:edit}, {authority=roleSetting}, {authority=systemJob}, {authority=systemLog}, {authority=systemManage}, {authority=user}, {authority=user:add}, {authority=user:delete}, {authority=user:edit}, {authority=user:enable}], accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true}';
2020-09-27 15:30:50 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:30:50 | 耗时 29 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 321623, '{password=null, username=1111, authorities=[{authority=chat}, {authority=job}, {authority=job-log}, {authority=log}, {authority=menu}, {authority=menu:add}, {authority=menu:delete}, {authority=menu:edit}, {authority=role}, {authority=role:add}, {authority=role:delete}, {authority=role:edit}, {authority=roleSetting}, {authority=systemJob}, {authority=systemLog}, {authority=systemManage}, {authority=user}, {authority=user:add}, {authority=user:delete}, {authority=user:edit}, {authority=user:enable}], accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true}', '获取用户信息', 94, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOnsicGFzc3dvcmQiOm51bGwsInVzZXJuYW1lIjoiMTExMSIsImF1dGhvcml0aWVzIjpbeyJhdXRob3JpdHkiOiJjaGF0In0seyJhdXRob3JpdHkiOiJqb2IifSx7ImF1dGhvcml0eSI6ImpvYi1sb2cifSx7ImF1dGhvcml0eSI6ImxvZyJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1Mb2cifSx7ImF1dGhvcml0eSI6InN5c3RlbU1hbmFnZSJ9LHsiYXV0aG9yaXR5IjoidXNlciJ9LHsiYXV0aG9yaXR5IjoidXNlcjphZGQifSx7ImF1dGhvcml0eSI6InVzZXI6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJ1c2VyOmVkaXQifSx7ImF1dGhvcml0eSI6InVzZXI6ZW5hYmxlIn1dLCJhY2NvdW50Tm9uRXhwaXJlZCI6dHJ1ZSwiYWNjb3VudE5vbkxvY2tlZCI6dHJ1ZSwiY3JlZGVudGlhbHNOb25FeHBpcmVkIjp0cnVlLCJlbmFibGVkIjp0cnVlfSwiZXhwIjoxNjAxMjM1MDQ5LCJjcmVhdGVkIjoxNjAxMTkxODQ5OTc5LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6Im1lbnUifSx7ImF1dGhvcml0eSI6Im1lbnU6YWRkIn0seyJhdXRob3JpdHkiOiJtZW51OmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlIn0seyJhdXRob3JpdHkiOiJyb2xlOmFkZCJ9LHsiYXV0aG9yaXR5Ijoicm9sZTpkZWxldGUifSx7ImF1dGhvcml0eSI6InJvbGU6ZWRpdCJ9LHsiYXV0aG9yaXR5Ijoicm9sZVNldHRpbmcifSx7ImF1dGhvcml0eSI6InN5c3RlbUpvYiJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtTG9nIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.ZV1SVsq5GoDBxia6xp9CYLsFFzhyJ4hMaa3seBDA00NWtpMV6csdkQyKMRQGJc-RdxSRRT0Kt8kiI9bt627s-w) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@3eec27be] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@45ae6239', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:30:50.436+0800' );;
2020-09-27 15:31:41 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 15:31:41 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 15:31:41 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 15:31:41 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 15:31:41 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 15:31:41 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 15:31:41 INFO  http-nio-8888-exec-6 com.codeworld.fc.common.authority.UserDetailServiceImpl 用户权限：[systemJob, role, user:delete, user:add, log, roleSetting, systemManage, menu:edit, menu, job-log, role:add, menu:add, user:edit, user:enable, chat, role:edit, systemLog, role:delete, menu:delete, job, user]
2020-09-27 15:31:41 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 15:31:41 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 751861, NULL, '用户登录', 157, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@3f554e60] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@41c46253', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:31:41.661+0800' );;
2020-09-27 15:31:41 INFO  http-nio-8888-exec-10 p6spy 2020-09-27 15:31:41 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '{password=null, username=1111, authorities=[{authority=chat}, {authority=job}, {authority=job-log}, {authority=log}, {authority=menu}, {authority=menu:add}, {authority=menu:delete}, {authority=menu:edit}, {authority=role}, {authority=role:add}, {authority=role:delete}, {authority=role:edit}, {authority=roleSetting}, {authority=systemJob}, {authority=systemLog}, {authority=systemManage}, {authority=user}, {authority=user:add}, {authority=user:delete}, {authority=user:edit}, {authority=user:enable}], accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true}';
2020-09-27 15:31:41 INFO  http-nio-8888-exec-10 p6spy 2020-09-27 15:31:41 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 471467, '{password=null, username=1111, authorities=[{authority=chat}, {authority=job}, {authority=job-log}, {authority=log}, {authority=menu}, {authority=menu:add}, {authority=menu:delete}, {authority=menu:edit}, {authority=role}, {authority=role:add}, {authority=role:delete}, {authority=role:edit}, {authority=roleSetting}, {authority=systemJob}, {authority=systemLog}, {authority=systemManage}, {authority=user}, {authority=user:add}, {authority=user:delete}, {authority=user:edit}, {authority=user:enable}], accountNonExpired=true, accountNonLocked=true, credentialsNonExpired=true, enabled=true}', '获取用户信息', 4, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOnsicGFzc3dvcmQiOm51bGwsInVzZXJuYW1lIjoiMTExMSIsImF1dGhvcml0aWVzIjpbeyJhdXRob3JpdHkiOiJjaGF0In0seyJhdXRob3JpdHkiOiJqb2IifSx7ImF1dGhvcml0eSI6ImpvYi1sb2cifSx7ImF1dGhvcml0eSI6ImxvZyJ9LHsiYXV0aG9yaXR5IjoibWVudSJ9LHsiYXV0aG9yaXR5IjoibWVudTphZGQifSx7ImF1dGhvcml0eSI6Im1lbnU6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJtZW51OmVkaXQifSx7ImF1dGhvcml0eSI6InJvbGUifSx7ImF1dGhvcml0eSI6InJvbGU6YWRkIn0seyJhdXRob3JpdHkiOiJyb2xlOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5Ijoicm9sZTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlU2V0dGluZyJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtSm9iIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1Mb2cifSx7ImF1dGhvcml0eSI6InN5c3RlbU1hbmFnZSJ9LHsiYXV0aG9yaXR5IjoidXNlciJ9LHsiYXV0aG9yaXR5IjoidXNlcjphZGQifSx7ImF1dGhvcml0eSI6InVzZXI6ZGVsZXRlIn0seyJhdXRob3JpdHkiOiJ1c2VyOmVkaXQifSx7ImF1dGhvcml0eSI6InVzZXI6ZW5hYmxlIn1dLCJhY2NvdW50Tm9uRXhwaXJlZCI6dHJ1ZSwiYWNjb3VudE5vbkxvY2tlZCI6dHJ1ZSwiY3JlZGVudGlhbHNOb25FeHBpcmVkIjp0cnVlLCJlbmFibGVkIjp0cnVlfSwiZXhwIjoxNjAxMjM1MTAxLCJjcmVhdGVkIjoxNjAxMTkxOTAxNjU4LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6Im1lbnUifSx7ImF1dGhvcml0eSI6Im1lbnU6YWRkIn0seyJhdXRob3JpdHkiOiJtZW51OmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlIn0seyJhdXRob3JpdHkiOiJyb2xlOmFkZCJ9LHsiYXV0aG9yaXR5Ijoicm9sZTpkZWxldGUifSx7ImF1dGhvcml0eSI6InJvbGU6ZWRpdCJ9LHsiYXV0aG9yaXR5Ijoicm9sZVNldHRpbmcifSx7ImF1dGhvcml0eSI6InN5c3RlbUpvYiJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtTG9nIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.IQDbj2pW9BZ3U1p4-lN7HmaWCEOZqkz-yrdDWzMizcSDIPQZibmnVU6_JWz9AyjOPzKiw7IRJ7QvZ7IRMZxPKw) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@44794b28] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@30686f05', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:31:41.694+0800' );;
2020-09-27 15:34:14 INFO  http-nio-8888-exec-1 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 15:34:14 INFO  http-nio-8888-exec-1 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 234ms. Found 0 Redis repository interfaces.
2020-09-27 15:34:15 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:34:15 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 15:34:15 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:34:15 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 15:34:15 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:34:15 | 耗时 1 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 15:34:15 INFO  http-nio-8888-exec-3 com.codeworld.fc.common.authority.UserDetailServiceImpl 用户权限：[systemJob, role, user:delete, user:add, log, roleSetting, systemManage, menu:edit, menu, job-log, role:add, menu:add, user:edit, user:enable, chat, role:edit, systemLog, role:delete, menu:delete, job, user]
2020-09-27 15:34:15 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:34:15 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 617561, NULL, '用户登录', 317, '/system-user/user-login', ' userLoginRequest: UserLoginRequest(username=1111, password=123456, token=null) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@1988ec4d] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@6f63dec8', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:34:15.343+0800' );;
2020-09-27 15:34:15 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:34:15 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 15:34:15 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:34:15 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 15:34:15 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:34:15 | 耗时 1 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 15:34:15 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:34:15 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 761698, '1111', '获取用户信息', 248, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAxMjM1MjU1LCJjcmVhdGVkIjoxNjAxMTkyMDU1MzI3LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6Im1lbnUifSx7ImF1dGhvcml0eSI6Im1lbnU6YWRkIn0seyJhdXRob3JpdHkiOiJtZW51OmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlIn0seyJhdXRob3JpdHkiOiJyb2xlOmFkZCJ9LHsiYXV0aG9yaXR5Ijoicm9sZTpkZWxldGUifSx7ImF1dGhvcml0eSI6InJvbGU6ZWRpdCJ9LHsiYXV0aG9yaXR5Ijoicm9sZVNldHRpbmcifSx7ImF1dGhvcml0eSI6InN5c3RlbUpvYiJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtTG9nIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.gRLyXj8apyijJrvmiSqOqNSSjAaUB5EZltyZ-J7QTBhEuroLaOvbE_3iuAUmPaHAHAXSNqjXAFJDK2SqCEkotg) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@c716a6c] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@4f326702', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:34:15.683+0800' );;
2020-09-27 15:34:23 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 15:34:23 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_job;
2020-09-27 15:34:23 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 15:34:23 | 耗时 0 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC LIMIT 10 ;
2020-09-27 15:34:23 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 15:34:23 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 238278, '1111', '获取全部任务', 219, '/system-job/get-all-job', ' jobSearchVO: JobSearchVO(beanName=null, methodName=null, status=null, createTime=null, updateTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:34:23.032+0800' );;
2020-09-27 15:34:25 INFO  http-nio-8888-exec-10 p6spy 2020-09-27 15:34:25 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_job_log;
2020-09-27 15:34:25 INFO  http-nio-8888-exec-10 p6spy 2020-09-27 15:34:25 | 耗时 0 ms | SQL 语句：
select * from codeworld_job_log order by t_job_log_create_time DESC LIMIT 10 ;
2020-09-27 15:34:26 INFO  http-nio-8888-exec-10 p6spy 2020-09-27 15:34:26 | 耗时 12 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 232258, '1111', '获取全部任务日志', 38, '/system-job-log/get-all-job-log', ' jobLogSearchVO: JobLogSearchVO(jobBeanName=null, jobMethodName=null, status=null, startTime=null, endTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:34:26.008+0800' );;
2020-09-27 15:34:30 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 15:34:30 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_log;
2020-09-27 15:34:30 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 15:34:30 | 耗时 1 ms | SQL 语句：
select * from codeworld_log order by t_log_create_Time DESC LIMIT 10 ;
2020-09-27 15:34:30 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 15:34:30 | 耗时 12 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 21227, '1111', '获取全部日志', 32, '/system-log/get-all-log', ' logSearchVO: LogSearchVO(page=1, limit=10)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:34:30.301+0800' );;
2020-09-27 15:34:53 INFO  http-nio-8888-exec-3 com.codeworld.fc.system.user.service.impl.UserServiceImpl 数据：UserSearchRequest(page=1, limit=10, userName=null, userEmail=null, userPhone=null, userStatus=null, createTime=null, updateTime=null)
2020-09-27 15:34:53 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:34:53 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_user;
2020-09-27 15:34:53 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:34:53 | 耗时 1 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC LIMIT 10 ;
2020-09-27 15:34:53 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:34:53 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 199649, '1111', '获取全部用户', 20, '/system-user/get-all-user', ' userSearchRequest: UserSearchRequest(page=1, limit=10, userName=null, userEmail=null, userPhone=null, userStatus=null, createTime=null, updateTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:34:53.867+0800' );;
2020-09-27 15:35:03 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 15:35:03 | 耗时 1 ms | SQL 语句：
select * from codeworld_menu;
2020-09-27 15:35:04 INFO  http-nio-8888-exec-5 p6spy 2020-09-27 15:35:04 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_role;
2020-09-27 15:35:04 INFO  http-nio-8888-exec-5 p6spy 2020-09-27 15:35:04 | 耗时 0 ms | SQL 语句：
select * from codeworld_role order by t_create_time DESC LIMIT 10 ;
2020-09-27 15:35:04 INFO  http-nio-8888-exec-10 com.codeworld.fc.system.user.service.impl.UserServiceImpl 数据：UserSearchRequest(page=1, limit=10, userName=null, userEmail=null, userPhone=null, userStatus=null, createTime=null, updateTime=null)
2020-09-27 15:35:04 INFO  http-nio-8888-exec-10 p6spy 2020-09-27 15:35:04 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_user;
2020-09-27 15:35:04 INFO  http-nio-8888-exec-10 p6spy 2020-09-27 15:35:04 | 耗时 0 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC LIMIT 10 ;
2020-09-27 15:35:04 INFO  http-nio-8888-exec-10 p6spy 2020-09-27 15:35:04 | 耗时 12 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 167775, '1111', '获取全部用户', 13, '/system-user/get-all-user', ' userSearchRequest: UserSearchRequest(page=1, limit=10, userName=null, userEmail=null, userPhone=null, userStatus=null, createTime=null, updateTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:35:04.890+0800' );;
2020-09-27 15:35:06 INFO  http-nio-8888-exec-8 p6spy 2020-09-27 15:35:06 | 耗时 0 ms | SQL 语句：
select * from codeworld_menu;
2020-09-27 15:35:18 INFO  http-nio-8888-exec-1 p6spy 2020-09-27 15:35:18 | 耗时 1 ms | SQL 语句：
update codeworld_menu set t_menu_url = '/system-job-log', t_menu_resources = 'job-log', t_menu_name = '任务日志b', t_menu_type = 'menu', t_menu_remarks = '任务日志', t_menu_sort_no = 1, t_update_time = '2020-09-27T15:35:18.249+0800' where t_menu_id = 958791;
2020-09-27 15:35:18 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:35:18 | 耗时 0 ms | SQL 语句：
select * from codeworld_menu;
2020-09-27 15:35:25 INFO  http-nio-8888-exec-5 p6spy 2020-09-27 15:35:25 | 耗时 1 ms | SQL 语句：
update codeworld_menu set t_menu_url = '/system-job-log', t_menu_resources = 'job-log', t_menu_name = '任务日志', t_menu_type = 'menu', t_menu_remarks = '任务日志', t_menu_sort_no = 1, t_update_time = '2020-09-27T15:35:25.926+0800' where t_menu_id = 958791;
2020-09-27 15:35:25 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 15:35:25 | 耗时 0 ms | SQL 语句：
select * from codeworld_menu;
2020-09-27 15:35:28 INFO  http-nio-8888-exec-8 p6spy 2020-09-27 15:35:28 | 耗时 0 ms | SQL 语句：
select * from codeworld_menu;
2020-09-27 15:35:28 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 15:35:28 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_role;
2020-09-27 15:35:28 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 15:35:28 | 耗时 0 ms | SQL 语句：
select * from codeworld_role order by t_create_time DESC LIMIT 10 ;
2020-09-27 15:35:30 INFO  http-nio-8888-exec-3 com.codeworld.fc.system.user.service.impl.UserServiceImpl 数据：UserSearchRequest(page=1, limit=10, userName=null, userEmail=null, userPhone=null, userStatus=null, createTime=null, updateTime=null)
2020-09-27 15:35:30 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:35:30 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_user;
2020-09-27 15:35:30 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:35:30 | 耗时 0 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC LIMIT 10 ;
2020-09-27 15:35:30 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:35:30 | 耗时 10 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 747220, '1111', '获取全部用户', 8, '/system-user/get-all-user', ' userSearchRequest: UserSearchRequest(page=1, limit=10, userName=null, userEmail=null, userPhone=null, userStatus=null, createTime=null, updateTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:35:30.251+0800' );;
2020-09-27 15:35:35 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:35:35 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_log;
2020-09-27 15:35:35 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:35:35 | 耗时 0 ms | SQL 语句：
select * from codeworld_log order by t_log_create_Time DESC LIMIT 10 ;
2020-09-27 15:35:35 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:35:35 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 58078, '1111', '获取全部日志', 8, '/system-log/get-all-log', ' logSearchVO: LogSearchVO(page=1, limit=10)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:35:35.724+0800' );;
2020-09-27 15:35:36 INFO  http-nio-8888-exec-6 com.codeworld.fc.system.user.service.impl.UserServiceImpl 数据：UserSearchRequest(page=1, limit=10, userName=null, userEmail=null, userPhone=null, userStatus=null, createTime=null, updateTime=null)
2020-09-27 15:35:36 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 15:35:36 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_user;
2020-09-27 15:35:36 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 15:35:36 | 耗时 0 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC LIMIT 10 ;
2020-09-27 15:35:36 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 15:35:36 | 耗时 12 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 733244, '1111', '获取全部用户', 9, '/system-user/get-all-user', ' userSearchRequest: UserSearchRequest(page=1, limit=10, userName=null, userEmail=null, userPhone=null, userStatus=null, createTime=null, updateTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:35:36.827+0800' );;
2020-09-27 15:44:28 INFO  http-nio-8888-exec-1 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 15:44:29 INFO  http-nio-8888-exec-1 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 251ms. Found 0 Redis repository interfaces.
2020-09-27 15:44:30 INFO  http-nio-8888-exec-3 springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-09-27 15:44:30 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:44:30 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 15:44:30 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:44:30 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 15:44:30 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:44:30 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 15:44:30 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:44:30 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 26124, '1111', '获取用户信息', 24, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAxMjM1MjU1LCJjcmVhdGVkIjoxNjAxMTkyMDU1MzI3LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6Im1lbnUifSx7ImF1dGhvcml0eSI6Im1lbnU6YWRkIn0seyJhdXRob3JpdHkiOiJtZW51OmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlIn0seyJhdXRob3JpdHkiOiJyb2xlOmFkZCJ9LHsiYXV0aG9yaXR5Ijoicm9sZTpkZWxldGUifSx7ImF1dGhvcml0eSI6InJvbGU6ZWRpdCJ9LHsiYXV0aG9yaXR5Ijoicm9sZVNldHRpbmcifSx7ImF1dGhvcml0eSI6InN5c3RlbUpvYiJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtTG9nIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.gRLyXj8apyijJrvmiSqOqNSSjAaUB5EZltyZ-J7QTBhEuroLaOvbE_3iuAUmPaHAHAXSNqjXAFJDK2SqCEkotg) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@254a8956] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@3c964f3', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:44:30.834+0800' );;
2020-09-27 15:44:31 INFO  http-nio-8888-exec-4 com.codeworld.fc.system.user.service.impl.UserServiceImpl 数据：UserSearchRequest(page=1, limit=10, userName=null, userEmail=null, userPhone=null, userStatus=null, createTime=null, updateTime=null)
2020-09-27 15:44:31 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:44:31 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_user;
2020-09-27 15:44:31 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:44:31 | 耗时 0 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC LIMIT 10 ;
2020-09-27 15:44:31 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:44:31 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 653712, '1111', '获取全部用户', 9, '/system-user/get-all-user', ' userSearchRequest: UserSearchRequest(page=1, limit=10, userName=null, userEmail=null, userPhone=null, userStatus=null, createTime=null, updateTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:44:31.122+0800' );;
2020-09-27 15:44:40 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 15:44:40 | 耗时 0 ms | SQL 语句：
select * from codeworld_menu;
2020-09-27 15:44:40 INFO  http-nio-8888-exec-8 p6spy 2020-09-27 15:44:40 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_role;
2020-09-27 15:44:40 INFO  http-nio-8888-exec-8 p6spy 2020-09-27 15:44:40 | 耗时 0 ms | SQL 语句：
select * from codeworld_role order by t_create_time DESC LIMIT 10 ;
2020-09-27 15:44:42 INFO  http-nio-8888-exec-3 com.codeworld.fc.system.user.service.impl.UserServiceImpl 数据：UserSearchRequest(page=1, limit=10, userName=null, userEmail=null, userPhone=null, userStatus=null, createTime=null, updateTime=null)
2020-09-27 15:44:42 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:44:42 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_user;
2020-09-27 15:44:42 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:44:42 | 耗时 0 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC LIMIT 10 ;
2020-09-27 15:44:42 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:44:42 | 耗时 10 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 774066, '1111', '获取全部用户', 6, '/system-user/get-all-user', ' userSearchRequest: UserSearchRequest(page=1, limit=10, userName=null, userEmail=null, userPhone=null, userStatus=null, createTime=null, updateTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:44:42.047+0800' );;
2020-09-27 15:54:32 INFO  http-nio-8888-exec-1 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 15:54:32 INFO  http-nio-8888-exec-1 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 282ms. Found 0 Redis repository interfaces.
2020-09-27 15:54:34 INFO  http-nio-8888-exec-3 springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-09-27 15:54:34 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:54:34 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 15:54:34 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:54:34 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 15:54:34 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:54:34 | 耗时 0 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 15:54:34 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:54:34 | 耗时 2 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 972441, '1111', '获取用户信息', 29, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAxMjM1MjU1LCJjcmVhdGVkIjoxNjAxMTkyMDU1MzI3LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6Im1lbnUifSx7ImF1dGhvcml0eSI6Im1lbnU6YWRkIn0seyJhdXRob3JpdHkiOiJtZW51OmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlIn0seyJhdXRob3JpdHkiOiJyb2xlOmFkZCJ9LHsiYXV0aG9yaXR5Ijoicm9sZTpkZWxldGUifSx7ImF1dGhvcml0eSI6InJvbGU6ZWRpdCJ9LHsiYXV0aG9yaXR5Ijoicm9sZVNldHRpbmcifSx7ImF1dGhvcml0eSI6InN5c3RlbUpvYiJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtTG9nIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.gRLyXj8apyijJrvmiSqOqNSSjAaUB5EZltyZ-J7QTBhEuroLaOvbE_3iuAUmPaHAHAXSNqjXAFJDK2SqCEkotg) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@3ad1138e] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@45560f0a', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:54:34.110+0800' );;
2020-09-27 15:54:34 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:54:34 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_log;
2020-09-27 15:54:34 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:54:34 | 耗时 1 ms | SQL 语句：
select * from codeworld_log order by t_log_create_Time DESC LIMIT 10 ;
2020-09-27 15:54:34 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:54:34 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 866155, '1111', '获取全部日志', 14, '/system-log/get-all-log', ' logSearchVO: LogSearchVO(page=1, limit=10)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:54:34.578+0800' );;
2020-09-27 15:54:37 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 15:54:37 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_role;
2020-09-27 15:54:37 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 15:54:37 | 耗时 0 ms | SQL 语句：
select * from codeworld_role order by t_create_time DESC LIMIT 10 ;
2020-09-27 15:54:37 INFO  http-nio-8888-exec-10 p6spy 2020-09-27 15:54:37 | 耗时 1 ms | SQL 语句：
select * from codeworld_menu;
2020-09-27 15:54:38 INFO  http-nio-8888-exec-8 com.codeworld.fc.system.user.service.impl.UserServiceImpl 数据：UserSearchRequest(page=1, limit=10, userName=null, userEmail=null, userPhone=null, userStatus=null, createTime=null, updateTime=null)
2020-09-27 15:54:38 INFO  http-nio-8888-exec-8 p6spy 2020-09-27 15:54:38 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_user;
2020-09-27 15:54:38 INFO  http-nio-8888-exec-8 p6spy 2020-09-27 15:54:38 | 耗时 0 ms | SQL 语句：
select * from codeworld_user order by t_create_time DESC LIMIT 10 ;
2020-09-27 15:54:38 INFO  http-nio-8888-exec-8 p6spy 2020-09-27 15:54:38 | 耗时 13 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 78737, '1111', '获取全部用户', 11, '/system-user/get-all-user', ' userSearchRequest: UserSearchRequest(page=1, limit=10, userName=null, userEmail=null, userPhone=null, userStatus=null, createTime=null, updateTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:54:38.350+0800' );;
2020-09-27 15:54:41 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:54:41 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_job;
2020-09-27 15:54:41 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:54:41 | 耗时 0 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC LIMIT 10 ;
2020-09-27 15:54:41 INFO  http-nio-8888-exec-3 p6spy 2020-09-27 15:54:41 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 625043, '1111', '获取全部任务', 6, '/system-job/get-all-job', ' jobSearchVO: JobSearchVO(beanName=null, methodName=null, status=null, createTime=null, updateTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:54:41.862+0800' );;
2020-09-27 15:54:43 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:54:43 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_job_log;
2020-09-27 15:54:43 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:54:43 | 耗时 0 ms | SQL 语句：
select * from codeworld_job_log order by t_job_log_create_time DESC LIMIT 10 ;
2020-09-27 15:54:43 INFO  http-nio-8888-exec-4 p6spy 2020-09-27 15:54:43 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 47059, '1111', '获取全部任务日志', 10, '/system-job-log/get-all-job-log', ' jobLogSearchVO: JobLogSearchVO(jobBeanName=null, jobMethodName=null, status=null, startTime=null, endTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:54:43.066+0800' );;
2020-09-27 15:54:53 INFO  http-nio-8888-exec-6 org.springframework.data.repository.config.RepositoryConfigurationDelegate Bootstrapping Spring Data Redis repositories in DEFAULT mode.
2020-09-27 15:54:53 INFO  http-nio-8888-exec-6 org.springframework.data.repository.config.RepositoryConfigurationDelegate Finished Spring Data repository scanning in 338ms. Found 0 Redis repository interfaces.
2020-09-27 15:54:54 INFO  http-nio-8888-exec-5 springfox.documentation.spring.web.PropertySourcedRequestMappingHandlerMapping Mapped URL path [/v2/api-docs] onto method [springfox.documentation.swagger2.web.Swagger2Controller#getDocumentation(String, HttpServletRequest)]
2020-09-27 15:54:54 INFO  http-nio-8888-exec-5 p6spy 2020-09-27 15:54:54 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_job;
2020-09-27 15:54:54 INFO  http-nio-8888-exec-5 p6spy 2020-09-27 15:54:54 | 耗时 0 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC LIMIT 10 ;
2020-09-27 15:54:54 INFO  http-nio-8888-exec-5 p6spy 2020-09-27 15:54:54 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 695459, '1111', '获取全部任务', 8, '/system-job/get-all-job', ' jobSearchVO: JobSearchVO(beanName=null, methodName=null, status=null, createTime=null, updateTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:54:54.849+0800' );;
2020-09-27 15:54:55 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 15:54:55 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_job;
2020-09-27 15:54:55 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 15:54:55 | 耗时 0 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC LIMIT 10 ;
2020-09-27 15:54:55 INFO  http-nio-8888-exec-7 p6spy 2020-09-27 15:54:55 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 902758, '1111', '获取全部任务', 7, '/system-job/get-all-job', ' jobSearchVO: JobSearchVO(beanName=null, methodName=null, status=null, createTime=null, updateTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:54:55.537+0800' );;
2020-09-27 15:54:57 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 15:54:57 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_job_log;
2020-09-27 15:54:57 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 15:54:57 | 耗时 0 ms | SQL 语句：
select * from codeworld_job_log order by t_job_log_create_time DESC LIMIT 10 ;
2020-09-27 15:54:57 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 15:54:57 | 耗时 1 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 823855, '1111', '获取全部任务日志', 6, '/system-job-log/get-all-job-log', ' jobLogSearchVO: JobLogSearchVO(jobBeanName=null, jobMethodName=null, status=null, startTime=null, endTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:54:57.455+0800' );;
2020-09-27 15:55:01 INFO  http-nio-8888-exec-1 p6spy 2020-09-27 15:55:01 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_log;
2020-09-27 15:55:01 INFO  http-nio-8888-exec-1 p6spy 2020-09-27 15:55:01 | 耗时 0 ms | SQL 语句：
select * from codeworld_log order by t_log_create_Time DESC LIMIT 10 ;
2020-09-27 15:55:01 INFO  http-nio-8888-exec-1 p6spy 2020-09-27 15:55:01 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 300879, '1111', '获取全部日志', 5, '/system-log/get-all-log', ' logSearchVO: LogSearchVO(page=1, limit=10)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:55:01.191+0800' );;
2020-09-27 15:55:32 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:55:32 | 耗时 0 ms | SQL 语句：
select u.t_user_id,u.t_user_name from codeworld_user u where t_user_name = '1111';
2020-09-27 15:55:32 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:55:32 | 耗时 0 ms | SQL 语句：
select cr.t_role_id, cr.t_role_name, cr.t_role_code, cr.t_role_remarks, cr.t_create_time, cr.t_update_time from codeworld_role AS cr left join codeworld_user_role AS cur on cur.t_role_id = cr.t_role_id where cur.t_user_id = 4810056;
2020-09-27 15:55:32 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:55:32 | 耗时 1 ms | SQL 语句：
select cm.t_menu_id, cm.t_parent_id, cm.t_menu_url, cm.t_menu_resources, cm.t_menu_name, cm.t_menu_type, cm.t_menu_remarks, cm.t_menu_sort_no, cm.t_create_time, cm.t_update_time from codeworld_menu cm left join codeworld_role_menu crm on crm.t_menu_id = cm.t_menu_id where crm.t_role_id = 1;
2020-09-27 15:55:32 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:55:32 | 耗时 3 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 982597, '1111', '获取用户信息', 30, '/system-user/get-user-info', ' userLoginRequest: UserLoginRequest(username=null, password=null, token=eyJhbGciOiJIUzUxMiJ9.eyJzdWIiOiIxMTExIiwiZXhwIjoxNjAxMjM1MjU1LCJjcmVhdGVkIjoxNjAxMTkyMDU1MzI3LCJhdXRob3JpdGllcyI6W3siYXV0aG9yaXR5IjoiY2hhdCJ9LHsiYXV0aG9yaXR5Ijoiam9iIn0seyJhdXRob3JpdHkiOiJqb2ItbG9nIn0seyJhdXRob3JpdHkiOiJsb2cifSx7ImF1dGhvcml0eSI6Im1lbnUifSx7ImF1dGhvcml0eSI6Im1lbnU6YWRkIn0seyJhdXRob3JpdHkiOiJtZW51OmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoibWVudTplZGl0In0seyJhdXRob3JpdHkiOiJyb2xlIn0seyJhdXRob3JpdHkiOiJyb2xlOmFkZCJ9LHsiYXV0aG9yaXR5Ijoicm9sZTpkZWxldGUifSx7ImF1dGhvcml0eSI6InJvbGU6ZWRpdCJ9LHsiYXV0aG9yaXR5Ijoicm9sZVNldHRpbmcifSx7ImF1dGhvcml0eSI6InN5c3RlbUpvYiJ9LHsiYXV0aG9yaXR5Ijoic3lzdGVtTG9nIn0seyJhdXRob3JpdHkiOiJzeXN0ZW1NYW5hZ2UifSx7ImF1dGhvcml0eSI6InVzZXIifSx7ImF1dGhvcml0eSI6InVzZXI6YWRkIn0seyJhdXRob3JpdHkiOiJ1c2VyOmRlbGV0ZSJ9LHsiYXV0aG9yaXR5IjoidXNlcjplZGl0In0seyJhdXRob3JpdHkiOiJ1c2VyOmVuYWJsZSJ9XX0.gRLyXj8apyijJrvmiSqOqNSSjAaUB5EZltyZ-J7QTBhEuroLaOvbE_3iuAUmPaHAHAXSNqjXAFJDK2SqCEkotg) request: SecurityContextHolderAwareRequestWrapper[ org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterRequest@13aeeb93] response: org.springframework.security.web.header.HeaderWriterFilter$HeaderWriterResponse@154ec13c', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:55:32.479+0800' );;
2020-09-27 15:55:33 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 15:55:33 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_log;
2020-09-27 15:55:33 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 15:55:33 | 耗时 1 ms | SQL 语句：
select * from codeworld_log order by t_log_create_Time DESC LIMIT 10 ;
2020-09-27 15:55:33 INFO  http-nio-8888-exec-6 p6spy 2020-09-27 15:55:33 | 耗时 3 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 511394, '1111', '获取全部日志', 12, '/system-log/get-all-log', ' logSearchVO: LogSearchVO(page=1, limit=10)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:55:33.119+0800' );;
2020-09-27 15:55:47 INFO  http-nio-8888-exec-9 p6spy 2020-09-27 15:55:47 | 耗时 0 ms | SQL 语句：
select * from codeworld_menu;
2020-09-27 15:56:54 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:56:54 | 耗时 0 ms | SQL 语句：
SELECT count(0) FROM codeworld_job;
2020-09-27 15:56:54 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:56:54 | 耗时 0 ms | SQL 语句：
select * from codeworld_job order by t_job_create_time DESC LIMIT 10 ;
2020-09-27 15:56:54 INFO  http-nio-8888-exec-2 p6spy 2020-09-27 15:56:54 | 耗时 11 ms | SQL 语句：
insert into codeworld_log (t_log_id, t_log_operation_username, t_log_operation, t_log_time, t_log_method, t_log_params, t_log_ip, t_log_location,t_log_create_time) values ( 155110, '1111', '获取全部任务', 5, '/system-job/get-all-job', ' jobSearchVO: JobSearchVO(beanName=null, methodName=null, status=null, createTime=null, updateTime=null)', '127.0.0.1', '内网IP|0|0|内网IP|内网IP', '2020-09-27T15:56:54.422+0800' );;
